{"version":3,"sources":["utils/react-select-utils.js","utils/useWindowSize.js","utils/useAsyncResources.js","utils/table-utils.js","getDBs.js","formatting/FormattedSupSub.js","component_groups/components/ComponentListHeader.js","utils/useComlinkWorker.js","CalculateResultWorker.js","utils/useModalStack.js","FreeQL.js"],"names":["createFormatOptionLabel","ReactComponent","label","useWindowSize","useState","width","window","innerWidth","height","innerHeight","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","wrapPromise","promise","result","status","suspender","then","r","e","useAsyncResourceWithBoolean","getter","initialParams","current","dataCallbackRef","setDataCallbackRef","transitionState","setTransitionState","getNewData","useCallback","params","getData","useMemo","Promise","textToTable","text","resolve","CSVParse","relax_column_count","err","item","options","property","row","column","getDataWithStride","i","stride","getComponentDB","url","type","callback","console","log","fetch","response","chunk","linesPerItem","chunks","hPlusValue","waterValue","components","Immutable","filter","Number","map","name","charge","db","res","_","getSpeciesDB","all","labels","urls","responses","tables","mainTable","labelList","labelTable","chunkedLabelTable","labelMap","withMutations","entries","index","specie","set","chunkedMainTable","aqs","species","componentToSpecies","solids","gases","aqSpecies","solidSpecies","gasSpecies","id","get","logK","component","componentAmt","aqComponentToSpecies","speciesId","componentId","update","oldSet","add","solidComponentToSpecies","gasComponentToSpecies","FormattedSupSub","React","memo","props","Array","from","children","matchAll","value","Fragment","key","substring","centerSelectStyles","singleValue","styles","textAlign","option","ComponentListHeader","hPlusOptionsRef","defaultVal","onChange","Row","className","Col","xs","sm","isSearchable","formatOptionLabel","OverlayTrigger","placement","overlay","Tooltip","xmlns","version","viewBox","overflow","enableBackground","fill","stroke","strokeWidth","x1","y1","x2","y2","d","useComlinkWorker","WorkerClass","parameters","comlinkWrapper","setComlinkWrapper","worker","Comlink","terminate","Worker","useModalStack","modalsStack","setModalsStack","currentModal","peek","closeModal","modalName","isArray","stack","pop","openModal","push","Results","lazy","HPlusComponent","ComponentList","ComponentSelectModal","ComponentSelect","SpeciesList","TableauTable","ScrollContainer","style","headerHeight","footerHeight","ResizeObserverWrapper","Container","fluid","SpinnerComponentRow","Spinner","animation","role","CalculateButton","calculateNewResult","disableMessage","onClick","restProps","disabled","button","Button","speciesCouldBePresentOfType","speciesDB","componentsPresent","ourSpeciesCouldBePresent","ourSpeciesOccurences","has","specieId","num","speciesOccurences","specieData","size","defaultRowInputValue","equilChecked","conc","FreeQL","useRef","unstable_useOpaqueIdentifier","ConcentrationCalculatorWorker","ConcentrationCalculator","totalHOption","pHOption","hPlusOption","setHPlusOption","useReducer","oldState","action","componentToAdd","removeAll","updateIn","val","setIn","Error","componentsInputState","componentsInputStateReducer","updateConc","toggleChecked","setComponentsPresent","addComponents","union","removeComponents","subtract","speciesEnabled","setSpeciesEnabled","logKChanges","setLogKChanges","process","componentsDB","gettingNewComponentsDB","numComponents","componentAmts","linesPerId","speciesDBDefaultParams","$set","keys","gettingNewSpeciesDB","speciesCouldBePresent","memoize","speciesHere","intersect","resultMap","input","delete","inputImmutable","calculate","transit","catch","error","currentResult","calculatingNewResult","calculateButtonMessage","componentData","find","buttonsHeight","setButtonsHeight","outerAdderHeight","buttonsRef","useResizeObserver","createModalOpenCallback","createModalCloseCallback","onHPlusOptionChange","Math","log10","pow","Form","fallback","pH","span","offset","windowHeight","openTableauModal","ref","variant","Modal","show","onHide","backdrop","scrollable","Header","closeButton","Body","Footer","Title","windowWidth"],"mappings":"kGAAA,sDAEMA,EAA0B,SAACC,GAAD,OAAoB,gBAAEC,EAAF,EAAEA,MAAF,OAAa,kBAACD,EAAD,KAAiBC,M,yNC6BnEC,EA5BK,WAAM,MAGYC,mBAAS,CAC3CC,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,cALO,mBAGjBC,EAHiB,KAGLC,EAHK,KAyBxB,OAjBAC,qBAAU,WAEP,IAAMC,EAAa,WAElBF,EAAc,CACZN,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,eAQnB,OAHAH,OAAOQ,iBAAiB,SAAUD,GAG3B,kBAAMP,OAAOS,oBAAoB,SAAUF,MACjD,IAEIH,G,QC1BT,SAASM,EAAYC,GACnB,IACIC,EADAC,EAAS,UAETC,EAAYH,EAAQI,MACtB,SAAAC,GACEH,EAAS,UACTD,EAASI,KAEX,SAAAC,GACEJ,EAAS,QACTD,EAASK,KAGb,OAAO,WACL,GAAe,YAAXJ,EACF,MAAMC,EACD,GAAe,UAAXD,EACT,MAAMD,EACD,GAAe,YAAXC,EACT,OAAOD,GAKb,IAAMM,EAA4B,SAACC,EAAQC,GAAmB,IAAD,EACftB,mBAAS,CAACuB,QAAS,OADJ,mBACpDC,EADoD,KACnCC,EADmC,OAEfzB,qBAAWsB,GAFI,mBAEpDI,EAFoD,KAEnCC,EAFmC,KAIrDC,EAAWC,uBAAY,SAACC,GAC5BH,GAAmB,GACnBF,EAAmB,CAACF,QAASX,EAAYS,EAAOS,GAAQb,MAAK,SAACH,GAAuC,OAA3Ba,GAAmB,GAAeb,UAC3G,CAACW,EAAoBJ,IAElBU,EAAQC,mBAAQ,WACpB,OAAGR,EAAgBD,UAAYD,EACtBE,EAAgBD,QAEhB,WACL,MAAM,IAAIU,SAAQ,kBAGrB,CAACT,IAQJ,OANAhB,qBAAU,WACLc,GACDM,EAAWN,KAEZ,IAEI,CAACS,EAASH,EAAYF,I,oCC7ChBQ,EAJG,SAACC,GACjB,OAAO,IAAIF,SAAQ,SAAAG,GAAO,OAAIC,IAASF,EAAM,CAAGG,oBAAoB,IAAQ,SAACC,EAAKzB,GAAYsB,EAAQtB,EAAQyB,U,SCC1GR,EAAQ,SAACS,EAAMC,EAASC,GAE5B,OAAOF,EAAKC,EAAQC,GAAUC,KAAKF,EAAQC,GAAUE,SAEjDC,EAAkB,SAACL,EAAMC,EAASC,EAAUI,GAChD,OAAON,EAAKC,EAAQC,GAAUC,KAAKF,EAAQC,GAAUE,OAAOE,EAAEL,EAAQC,GAAUK,SAG5EC,EAAe,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,IAAKR,EAA6B,EAA7BA,QAASS,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SAEzC,GADAC,QAAQC,IAAI,CAACJ,MAAKR,UAASS,OAAMC,aACvB,SAAPD,EACD,OAAOI,MAAML,GACVhC,MAAK,SAAAsC,GAAQ,OAAIA,EAASpB,UAC1BlB,MAAK,SAAAkB,GAAI,OAAID,EAAYC,MACzBlB,MAAK,SAAAH,GAAM,OAAI0C,gBAAM1C,EAAQ2B,EAAQgB,iBACrCxC,MAAK,SAAAyC,GAAM,MACT,CACCC,WAAYlB,EAAQkB,WACpBC,WAAYnB,EAAQmB,WACpBC,WAAYC,aAAqBJ,EAAOK,QAAO,SAAAvB,GAAI,OAAIwB,OAAOjC,EAAQS,EAAMC,EAAS,UAAQwB,KAAI,SAAAzB,GAAI,MAAI,CACvGwB,OAAOjC,EAAQS,EAAMC,EAAS,OAC9B,CACEyB,KAAMnC,EAAQS,EAAMC,EAAS,QAC7B0B,OAAQH,OAAOjC,EAAQS,EAAMC,EAAS,qBAI5CxB,MAAK,SAAAmD,GACL,IAAIjB,EACF,OAAOiB,EAET,IAAMC,EAAIlB,EAASiB,GACnB,OAAGC,aAAepC,QACToC,EAAIpD,MAAK,SAAAqD,GAAC,OAAIF,KAEdA,MAoBXG,EAAa,SAAC,GAAoC,IAAnCtB,EAAkC,EAAlCA,IAAKR,EAA6B,EAA7BA,QAASS,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SAEvC,GADAC,QAAQC,IAAI,CAACJ,MAAKR,UAASS,OAAMC,aACvB,SAAPD,EACD,OAAOjB,QAAQuC,IAAI,CAACvB,GAAD,mBAASR,EAAQgC,OAAOC,OAAMT,KAAI,SAAAhB,GAAG,OAAIK,MAAML,OAAOhC,MAAK,SAAA0D,GAC5E,OAAO1C,QAAQuC,IAAIG,EAAUV,KAAI,SAAAI,GAAG,OAAIA,EAAIlC,OAAOlB,MAAK,SAAAkB,GAAI,OAAGD,EAAYC,aAC1ElB,MAAK,SAAA2D,GAAW,IAAD,cACkBA,GAA3BC,EADS,KAEVC,EAFU,WAEYb,KAAI,SAAAc,GAAU,OAAIvB,gBAAMuB,EAAYtC,EAAQgB,iBAAeQ,KAAI,SAAAe,GAAiB,OAAIA,EAAkBf,KAAI,SAAAc,GAAU,OAAIhD,EAAQgD,EAAYtC,EAAQgC,OAAQ,YAElLQ,EAASnB,QAAgBoB,eAAc,SAACD,GAAc,IAAD,gBACxBH,EAAUK,WADc,IACzD,IAAI,EAAJ,qBAAsD,CAAC,IAAD,2BAA3CC,EAA2C,KAApCL,EAAoC,mBAChCA,GADgC,IACpD,IAAI,EAAJ,qBAA+B,CAAC,IAAtBM,EAAqB,QAC7BJ,EAASK,IAAItB,OAAOqB,GAAS5C,EAAQgC,OAAOQ,SAASG,KAFH,gCADG,kCASrDG,EAAiB/B,gBAAMqB,EAAWpC,EAAQgB,cAAcM,QAAO,SAAAP,GAAK,OAAIQ,OAAOR,EAAM,GAAG,OACxFY,EAAG,CACPoB,IAAK,CACHC,QAAS3B,eACT4B,mBAAoB5B,SAEtB6B,OAAQ,CACNF,QAAS3B,eACT4B,mBAAoB5B,SAEtB8B,MAAO,CACLH,QAAS3B,eACT4B,mBAAoB5B,UAmDxB,OAhDAM,EAAGoB,IAAIC,QAAQrB,EAAGoB,IAAIC,QAAQP,eAAc,SAAAW,GAC1CzB,EAAGuB,OAAOF,QAAQrB,EAAGuB,OAAOF,QAAQP,eAAc,SAAAY,GAChD1B,EAAGwB,MAAMH,QAAQrB,EAAGwB,MAAMH,QAAQP,eAAc,SAAAa,GAC9C,IAD4D,EACtD3B,EAAG,CAACyB,YAAWC,eAAcC,cADyB,cAE1CR,GAF0C,6BAElD/C,EAFkD,QAGpDwD,EAAGhC,OAAOjC,EAAQS,EAAMC,EAAS,OACjCC,GAAS,UAACuC,EAASgB,IAAID,UAAd,QAAqB,MAAM,UAC1C5B,EAAG1B,GAAU4C,IAAIU,EACf,CACE9B,KAAMnC,EAAQS,EAAMC,EAAS,QAC7B0B,OAAQH,OAAOjC,EAAQS,EAAMC,EAAS,WACtCyD,KAAMlC,OAAOjC,EAAQS,EAAMC,EAAS,SACpC3C,MAAK,UAAEmF,EAASgB,IAAIjC,OAAOjC,EAAQS,EAAMC,EAAS,eAA7C,QAAwD,EAC7DoB,WAAYC,QAAgBoB,eAAc,SAACrB,GACzC,IAAI,IAAIf,EAAE,EAAGA,EAAEf,EAAQS,EAAMC,EAAS,mBAAoBK,EAAE,CAC1D,IAAMqD,EAAUnC,OAAOnB,EAAkBL,EAAMC,EAAS,aAAcK,IAChEsD,EAAapC,OAAOnB,EAAkBL,EAAMC,EAAS,gBAAiBK,IAC5Ee,EAAWyB,IAAIa,EAAWC,UAbpC,IAAI,EAAJ,qBAAoC,IAFwB,wCAwBlEhC,EAAGoB,IAAIE,mBAAmBtB,EAAGoB,IAAIE,mBAAmBR,eAAc,SAAAmB,GAAyB,IAAD,gBACjDjC,EAAGoB,IAAIC,SAD0C,oDAC7Ea,EAD6E,KACjEzC,EADiE,KACjEA,WADiE,cAE3DA,GAF2D,IAEtF,IAAI,EAAJ,qBAAuC,CAAC,IAA7B0C,EAA4B,0BACrCF,EAAqBG,OAAOD,GAAa,eAACE,EAAD,uDAAQ3C,QAAR,OAA4B2C,EAAOC,IAAIJ,OAHI,gCACxF,IAAI,EAAJ,qBAAwD,IADgC,kCAO1FlC,EAAGuB,OAAOD,mBAAmBtB,EAAGuB,OAAOD,mBAAmBR,eAAc,SAAAyB,GAA4B,IAAD,gBAC1DvC,EAAGuB,OAAOF,SADgD,oDACtFa,EADsF,KAC1EzC,EAD0E,KAC1EA,WAD0E,cAEpEA,GAFoE,IAE/F,IAAI,EAAJ,qBAAuC,CAAC,IAA7B0C,EAA4B,0BACrCI,EAAwBH,OAAOD,GAAa,eAACE,EAAD,uDAAQ3C,QAAR,OAA4B2C,EAAOC,IAAIJ,OAHU,gCACjG,IAAI,EAAJ,qBAA2D,IADsC,kCAOnGlC,EAAGwB,MAAMF,mBAAmBtB,EAAGwB,MAAMF,mBAAmBR,eAAc,SAAA0B,GAA0B,IAAD,gBACtDxC,EAAGwB,MAAMH,SAD6C,oDAClFa,EADkF,KACtEzC,EADsE,KACtEA,WADsE,cAEhEA,GAFgE,IAE3F,IAAI,EAAJ,qBAAuC,CAAC,IAA7B0C,EAA4B,0BACrCK,EAAsBJ,OAAOD,GAAa,eAACE,EAAD,uDAAQ3C,QAAR,OAA4B2C,EAAOC,IAAIJ,OAHQ,gCAC7F,IAAI,EAAJ,qBAA0D,IADmC,kCAQxFlC,KACNnD,MAAK,SAAAmD,GACN,IAAIjB,EACF,OAAOiB,EAET,IAAMC,EAAIlB,EAASiB,GACnB,OAAGC,aAAepC,QACToC,EAAIpD,MAAK,SAAAqD,GAAC,OAAIF,KAEdA,M,kBC5IAyC,EAPOC,IAAMC,MAAK,SAACC,GAChC,OACE,oCACGC,MAAMC,KAAKF,EAAMG,SAASC,SAAS,6BAA6BnD,KAAI,SAACoD,GAAD,OAAW,kBAAC,IAAMC,SAAP,CAAgBC,IAAKP,EAAMG,SAASK,UAAU,EAAGH,EAAMjC,QAASiC,EAAM,GAAG,6BAAMA,EAAM,IAAS,6BAAMA,EAAM,Y,2CCQ1LI,EAAqB,CACzBC,YAAa,SAAAC,GAAM,kCAAUA,GAAV,IAAkB1H,MAAO,OAAQ2H,UAAY,YAChEC,OAAQ,SAAAF,GAAM,kCAAUA,GAAV,IAAkB1H,MAAO,OAAQ2H,UAAY,aAwC9CE,EArCWhB,IAAMC,MAAK,SAACC,GAAW,IACxCe,EAAuCf,EAAvCe,gBAAiBC,EAAsBhB,EAAtBgB,WAAYC,EAAUjB,EAAViB,SACpC,OACE,kBAACC,EAAA,EAAD,CAAKC,UAAU,aACb,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIH,UAAU,gBAC3B,2BAAOA,UAAU,kDAAjB,cAGA,2BAAOA,UAAU,kDAAjB,UAIF,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KACb,kBAAC,UAAD,CAAQC,cAAc,EAAO9F,QAASsF,EAAgBxG,QAASiH,kBAAmB5I,YAAwBiH,GAAkBc,OAAQF,EAAoBQ,SAAUA,EAAUZ,MAAOW,KAErL,kBAACI,EAAA,EAAD,CAAKC,GAAG,IAAIF,UAAU,gBACpB,kBAACM,EAAA,EAAD,CACEC,UAAU,SACVC,QACE,kBAACC,EAAA,EAAD,mCAKF,yBAAKC,MAAM,6BAA6BzI,OAAO,WAAW0I,QAAQ,MAAM9C,GAAG,UAAU+C,QAAQ,kBAAkBC,SAAS,UAAUC,iBAAiB,uBACjJ,0BAAMC,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIC,GAAG,MAAMC,GAAG,SAASC,GAAG,IAAIC,GAAG,WAClF,0BAAMN,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIC,GAAG,SAASC,GAAG,SAASC,GAAG,QAAQC,GAAG,WACzF,0BAAMN,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIC,GAAG,IAAIC,GAAG,SAASC,GAAG,MAAMC,GAAG,WAClF,0BAAMN,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIC,GAAG,SAASC,GAAG,QAAQC,GAAG,UAAUC,GAAG,WAC1F,0BAAMN,KAAK,OAAOC,OAAO,UAAUC,YAAY,IAAIK,EAAE,2C,oDClClDC,EAVQ,SAACC,EAAaC,GAAgB,IAAD,EACR5J,mBAAS,CAACuB,QAAS,OADX,mBAC3CsI,EAD2C,KAC3BC,EAD2B,KAOlD,OALAtJ,qBAAU,WACR,IAAMuJ,EAAO,IAAIJ,EAAYC,GAE7B,OADAE,EAAkB,CAACvI,QAASyI,IAAaD,KAClC,WAAOA,EAAOE,eACpB,IACIJ,EAAetI,SCVT,aACb,OAAO,IAAI2I,OAAO,IAA0B,uDCwB/BC,EAtBK,WAAO,IAAD,EACYnK,mBAAS8D,WADrB,mBACjBsG,EADiB,KACJC,EADI,KAElBC,EAAaF,EAAYG,OACzBC,EAAW3I,uBAAY,SAAC4I,GACzBxD,MAAMyD,QAAQD,GACfJ,EAAeD,EAAYlF,eAAc,SAAAyF,GAAU,IAAD,gBAC9BF,GAD8B,IAChD,IAAI,EAAJ,qBAA4B,CAAC,IAAnBvG,EAAkB,QACvByG,EAAMJ,SAASrG,GAChByG,EAAMC,OAHsC,mCAO1CN,IAAeG,GACvBJ,EAAeD,EAAYQ,SAE5B,CAACP,EAAgBC,EAAcF,IAC5BS,EAAUhJ,uBAAY,SAAC4I,GAC3BJ,EAAeD,EAAYU,KAAKL,MAC/B,CAACJ,EAAgBD,IACpB,MAAO,CAACE,EAAcO,EAAWL,ICa7BO,EAAUjE,IAAMkE,MAAK,kBAAM,wDAE3BC,EAAiBnE,IAAMkE,MAAK,kBAAM,kCAClCE,EAAgBpE,IAAMkE,MAAK,kBAAM,iCAEjCG,EAAuBrE,IAAMkE,MAAK,kBAAM,wDACxCI,EAAkBtE,IAAMkE,MAAK,kBAAM,wDAEnCK,EAAcvE,IAAMkE,MAAK,kBAAM,kCAC/BM,GAAexE,IAAMkE,MAAK,kBAAM,+DAEhCO,GAAgBzE,IAAMC,MAAK,SAACC,GAChC,OACE,yBAAKwE,MAAO,CAAC,UAAc,iBAAiBxE,EAAMyE,aAAazE,EAAM0E,cAAc,MAAO,UAAc,OAAQ,MAAS,SACvH,yBAAKF,MAAO,CAAC,UAAc,WACzB,kBAACG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACb7E,EAAMG,gBAQb2E,GAAoBhF,IAAMC,MAAK,SAACC,GACpC,OACE,kBAACkB,EAAA,EAAD,CAAKC,UAAU,OAAOqD,MAAO,CAAC,OAAU,SACtC,kBAACpD,EAAA,EAAD,CAAKD,UAAU,gBACb,kBAAC4D,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UAC/B,0BAAM9D,UAAU,WAAhB,oBAOJ+D,GAAgBpF,IAAMC,MAAK,SAACC,GAAW,IACnCmF,EAA4DnF,EAA5DmF,mBAAoBC,EAAwCpF,EAAxCoF,eAAgBC,EAAwBrF,EAAxBqF,QAAYC,EADd,YAC0BtF,EAD1B,mDAEpCuF,IAAWH,IACXI,EAAO,kBAACC,EAAA,EAAD,iBAAYH,EAAZ,CAAuBD,QAAS,SAAClL,GAAOkL,EAAQlL,GAAIgL,KAAyBI,SAAUA,IAAvF,aACb,OAAGA,EAEC,kBAAC9D,EAAA,EAAD,CACEC,UAAU,MACVC,QACE,kBAACC,EAAA,EAAD,KACGwD,MAIL,yBAAKjE,UAAU,2BACZqE,IAKAA,KAcLE,GAA4B,SAACC,EAAWC,GAAZ,OAAkC9I,eAAuBoB,eAAc,SAAA2H,GACvG,IADmI,EAC7HC,EAXgB,SAACpH,EAAoBkH,GAArB,OAA2C9I,QAAgBoB,eAAc,SAACjB,GAAS,IAAD,gBAC/E2I,GAD+E,IACxG,IAAI,EAAJ,qBAA4C,CAAC,IAAnCrG,EAAkC,QAC1C,GAAGb,EAAmBqH,IAAIxG,GAAa,CAAC,IAAD,gBACfb,EAAmBO,IAAIM,IADR,IACrC,IAAI,EAAJ,qBAA2D,CAAC,IAAlDyG,EAAiD,QACzD/I,EAAIuC,OAAOwG,GAAU,eAACC,EAAD,uDAAK,EAAL,OAASA,EAAI,MAFC,iCAF+D,kCAW7EC,CAAkBP,EAAUjH,mBAAoBkH,GADwD,cAEjGD,EAAUlH,SAFuF,IAEnI,IAAI,EAAJ,qBAAoD,CAAC,IAAD,yBAAzCJ,EAAyC,KAAjC8H,EAAiC,KAC/CL,EAAqB7G,IAAIZ,KAAU8H,EAAWtJ,WAAWuJ,MAC1DP,EAAyBnG,IAAIrB,IAJkG,mCAS/HgI,GAAqBvJ,MAAc,CAACwJ,cAAc,EAAOC,KAAM,KA8QtDC,UA5QF,SAACxG,GACZ,IAAMe,EAAgB0F,iBAAO,CAC3B,CAAEpG,MAAOqG,yCAAgC5N,MAAO,UAChD,CAAEuH,MAAOqG,yCAAgC5N,MAAO,MAChD,CAAEuH,MAAOqG,yCAAgC5N,MAAO,gBAChD,CAAEuH,MAAOqG,yCAAgC5N,MAAO,sBAE5C6N,EAA8BjE,EAAiBkE,GAP/B,cAQoC7F,EAAgBxG,QARpD,GAQfsM,EARe,KAQDC,EARC,kBASc9N,mBAAS6N,IATvB,mBASfE,EATe,KASFC,EATE,OAWoCC,sBACxD,SAACC,EAAUC,GACT,OAAOA,EAAOA,QACZ,IAAK,MACH,OAAOD,EAAShJ,eAAc,SAACjB,GAAS,IAAD,gBACTkK,EAAO9G,MAAMxD,YADJ,IACrC,IAAI,EAAJ,qBAAoD,CAAC,IAA3CuK,EAA0C,QAClDnK,EAAIqB,IAAI8I,EAAgBf,KAFW,kCAKzC,IAAK,SACH,OAAOa,EAASG,UAAUF,EAAO9G,MAAMxD,YACzC,IAAK,qBACH,OAAOqK,EAASI,SAAS,CAACH,EAAO9G,MAAMlB,UAAW,iBAAiB,SAACoI,GAAD,OAAUA,KAC/E,IAAK,UACH,OAAOL,EAASM,MAAM,CAACL,EAAO9G,MAAMlB,UAAW,QAASgI,EAAO9G,MAAMkG,MACvE,QACE,MAAM,IAAIkB,SAGhB3K,SA9BoB,mBAWf4K,EAXe,KAWOC,EAXP,KAgChBC,EAAW/M,uBAAY,SAACsE,EAAWoH,GACvCoB,EAA4B,CAACR,OAAQ,UAAW9G,MAAQ,CAAClB,YAAWoH,YACnE,CAACoB,IACEE,EAAchN,uBAAY,SAACsE,GAC/BwI,EAA4B,CAACR,OAAQ,qBAAsB9G,MAAO,CAAClB,iBAClE,CAACwI,IArCkB,EAuC0B3O,mBAAS8D,gBAvCnC,mBAuCf8I,EAvCe,KAuCIkC,EAvCJ,KAwChBC,EAAclN,uBAAY,SAACgC,GAC/B8K,EAA4B,CAACR,OAAQ,MAAO9G,MAAO,CAACxD,gBACpDiL,EAAqBlC,EAAkBoC,MAAMnL,MAC5C,CAAC+I,EAAmBkC,EAAsBH,IACvCM,EAAiBpN,uBAAY,SAACgC,GAClC8K,EAA4B,CAACR,OAAQ,SAAU9G,MAAO,CAACxD,gBACvDiL,EAAqBlC,EAAkBsC,SAASrL,MAC/C,CAAC+I,EAAmBkC,EAAsBH,IA/CvB,EAiDoB3O,mBAAS,CACjDwF,IAAK1B,eACL6B,OAAQ7B,eACR8B,MAAO9B,iBApDa,mBAiDfqL,GAjDe,KAiDCC,GAjDD,QAsDcpP,mBAAS,CAC3CwF,IAAK1B,QACL6B,OAAQ7B,QACR8B,MAAO9B,UAzDa,qBAsDfuL,GAtDe,MAsDFC,GAtDE,SA4D2ClO,EAA4B4B,ENpIjD,CAC5CC,IAAKsM,oCACLrM,KAAM,OACNT,QAAS,CACPgB,aAAc,EACduC,GAAI,CAACrD,IAAK,EAAGC,OAAQ,GACrBsB,KAAM,CAACvB,IAAK,EAAGC,OAAQ,GACvBuB,OAAQ,CAACxB,IAAK,EAAGC,OAAQ,GACzBe,WAAY,IACZC,WAAY,GAEdT,SMyHsI,SAACiB,GACrIhB,QAAQC,IAAIe,GACZ2K,EAAc,CAAC3K,EAAGR,WAAYQ,EAAGT,gBA9Db,qBA4Df6L,GA5De,MA4DmBC,IA5DnB,gBAgEkCrO,EAA4BmD,ENzBzD,SAACpB,GAAD,MAAe,CAC1CF,IAAKsM,sCACLrM,KAAM,OACNT,QAAS,CACPgB,aAAc,EACduC,GAAI,CAACrD,IAAK,EAAGC,OAAQ,GACrBsB,KAAM,CAACvB,IAAK,EAAGC,OAAQ,GACvBuB,OAAQ,CAACxB,IAAK,EAAGC,OAAQ,GACzBsD,KAAM,CAACvD,IAAK,EAAGC,OAAQ,GACvB8M,cAAe,CAAC/M,IAAK,EAAGC,OAAQ,IAChCiB,WAAY,CAAClB,IAAK,EAAGC,OAAQ,EAAGG,OAAQ,GACxC4M,cAAe,CAAChN,IAAK,EAAGC,OAAQ,EAAGG,OAAQ,GAC3C0B,OAAQ,CACNC,KAAM,CAAC6K,qCAAsDA,sCAC7DK,WAAY,EACZ5J,GAAI,CAACrD,IAAK,EAAGC,OAAQ,GACrBqC,SAAU,CAAC,QAAS,SAGxB9B,YMMkG0M,EAAuB,SAACzL,GACxHhB,QAAQC,IAAIe,GACZgL,GAAkB5I,IAAO2I,GAAgB,CAAC3J,IAAM,CAACsK,KAAMhM,MAAcM,EAAGoB,IAAIC,QAAQsK,gBAlEhE,qBAgEfpD,GAhEe,MAgEaqD,IAhEb,aAqEhBC,GAAsBpO,sBAAYqO,KAAQ,iBAAO,CACrD1K,IAAKkH,GAA4BC,KAAYnH,IAAKoH,GAClDjH,OAAQ+G,GAA4BC,KAAYhH,OAAQiH,GACxDhH,MAAO8G,GAA4BC,KAAY/G,MAAOgH,OACnD,CAACD,GAAWC,IAEXuD,GAAYtO,sBAAYqO,KAAQ,WACpC,MAAO,CACL1K,IAAK1B,OAAemM,KAAwBzK,IAAI4K,UAAUjB,GAAe3J,MACzEG,OAAQ7B,OAAemM,KAAwBtK,OAAOyK,UAAUjB,GAAexJ,SAC/EC,MAAO9B,OAAemM,KAAwBrK,MAAMwK,UAAUjB,GAAevJ,YAE7E,CAACqK,GAAuBd,KAjFN,GAmFUnP,mBAAS8D,SAnFnB,qBAmFfuM,GAnFe,gBAoF0CjP,GAA4B,WAC1F,IAAMkP,EAAM,CAACH,YAAaA,KAAevD,kBAAmB9I,OAAe8I,EAAkB2D,OAAOf,KAAe5L,aAAcyL,eAAaX,wBACxI8B,EAAe1M,SAAiBwM,GAQtC,OANID,GAAUtD,IAAIyD,GAITH,GAAUpK,IAAIuK,GAHd7C,EAA8B8C,UAAUC,SAAeJ,IAAQrP,MAAK,SAAAoD,GAAG,OAAIqM,WAAiBrM,MAAMsM,OAAM,SAACC,GAAD,OAAWA,SAzFxG,qBAoFfC,GApFe,MAoFA1E,GApFA,MAoFoB2E,GApFpB,MAiGhBC,GAAuBlP,sBAAYqO,KAAQ,WAC/C,OAAGY,GACM,iBACCrB,IAA0BO,GAC3B,yBACCtB,EAAqB3K,QAAO,SAACiN,EAAe7K,GAAhB,OAA8BqJ,KAAe5L,aAAauC,GAAayG,EAAkBG,IAAI5G,MAAY8K,MAAK,SAACD,EAAe7K,GAClK,MAA0C,kBAA5B6K,EAAc/K,IAAI,YAEzB,gDAIP,CAACuJ,GAAcd,EAAsB9B,EAAmB6C,GAAwBO,GAAqBc,KAEnGxQ,GAAWP,IA/GK,GAgHkBC,mBAAS,GAhH3B,qBAgHfkR,GAhHe,MAgHAC,GAhHA,MAiHhBC,GAAiB9Q,GAAWF,QAAQ,IAAM,GAAK,EAC/CiR,GAAWC,YAAkBzP,uBAAY,YAAiB,IAAdzB,EAAa,EAAbA,OAAc+Q,GAAiB/Q,KAAW,CAAC+Q,MAlHvE,GAmHsBhH,IAnHtB,qBAmHfG,GAnHe,MAmHDO,GAnHC,MAmHUL,GAnHV,MAqHhB+G,GAAwB1P,sBAAYqO,KAAQ,SAACpO,GACjD,OAAO,kBAAM+I,GAAU/I,OACrB,CAAC+I,KACC2G,GAAyB3P,sBAAYqO,KAAQ,SAACpO,GAClD,OAAO,kBAAM0I,GAAW1I,OACtB,CAAC0I,KAECiH,GAAoB5P,uBAAY,SAAC0M,GAClCR,IAAcD,GACfe,EAAcW,KAAe7L,YAC7BiL,EAAWY,KAAe7L,YAAa+N,KAAKC,MAAMjD,EAAqBzI,IAAIuJ,KAAe7L,YAAYsC,IAAI,WAClGsI,IAAMT,IACde,EAAcW,KAAe7L,YAC7BiL,EAAWY,KAAe7L,WAAY+N,KAAKE,IAAI,IAAKlD,EAAqBzI,IAAIuJ,KAAe7L,YAAYsC,IAAI,WAE9G+H,EAAeO,KACd,CAACP,EAAgBY,EAAYb,EAAayB,GAAcd,IAE3D,OACE,kBAACmD,EAAA,EAAD,KACE,kBAACjG,EAAA,EAAD,CAAWJ,MAAO,CAAC,OAAW,iBAAiBxE,EAAMyE,aAAayF,GAAclK,EAAM0E,cAAc,QAClG,kBAACxD,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAKD,UAAU,OACb,kBAACoD,GAAD,CAAiBE,aAAczE,EAAMyE,aAAcC,aAAc1E,EAAM0E,aAAawF,GAAcE,IAChG,kBAAC,EAAD,CAAqBrJ,gBAAiBA,EAAiBC,WAAY+F,EAAa9F,SAAUwJ,KAC1F,kBAAC,WAAD,CAAUK,SAAU,kBAAChG,GAAD,OAClB,kBAACb,EAAD,CAAgB8G,GAAIjE,IAAWC,EAAayB,aAAcA,GAAcd,qBAAsBA,EAAsBE,WAAYA,KAElI,kBAAC1G,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIH,UAAU,gBAC3B,2BAAOA,UAAU,kDAAjB,cAGA,2BAAOA,UAAU,kDAAjB,UAIF,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAAC2J,KAAM,EAAGC,OAAQ,GAAI3J,GAAI,CAAC0J,KAAM,EAAGC,OAAO,IAClD,2BAAO9J,UAAU,gCAAjB,iBAKJ,wBAAIA,UAAU,cACd,kBAAC,WAAD,CAAU2J,SAAU,kBAAChG,GAAD,OAClB,kBAACZ,EAAD,CAAesE,aAAcA,GAAc5C,kBAAmBA,EAAmBiC,cAAeA,EAAeD,WAAYA,EAAYK,iBAAkBA,KAE3J,kBAAC/G,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,KAEI9H,GAAWF,OAAO,KAClB,yBAAK+H,UAAU,6BACb,kBAAC,WAAD,CAAU2J,SAAS,IACjB,kBAAC3G,EAAD,CAAsByB,kBAAmBA,EAAmB4C,aAAcA,GAAcT,cAAeA,EAAemD,aAAc5R,GAAWF,cAO3J,kBAACwL,EAAA,EAAD,CAAWC,OAAK,GACd,kBAAC3D,EAAA,EAAD,CAAKC,UAAU,QACb,kBAACC,EAAA,EAAD,KAEI9H,GAAWF,QAAQ,KACnB,kBAAC,WAAD,CAAU0R,SAAS,IACjB,kBAAC1G,EAAD,CAAiBwB,kBAAmBA,EAAmB4C,aAAcA,GAAcT,cAAeA,SAO9G,kBAAC3G,EAAA,EAAD,CAAKC,GAAG,IAAIF,UAAU,wBACpB,kBAACoD,GAAD,CAAiBE,aAAczE,EAAMyE,aAAcC,aAAc1E,EAAM0E,aAAawF,IAClF,kBAAChJ,EAAA,EAAD,CAAKC,UAAU,QACb,kBAACC,EAAA,EAAD,CAAKD,UAAU,gBACb,wBAAIA,UAAU,0BAAd,aAKJ,kBAAC,WAAD,CAAU2J,SAAU,kBAAChG,GAAD,OAClB,kBAACT,EAAD,CAAa8G,iBAAkBZ,GAAwB,WAAY5E,UAAWA,GAAW6C,aAAcA,GAAc5C,kBAAmBA,EAAmBuC,eAAgBA,GAAgBc,sBAAuBA,GAAuBb,kBAAmBA,UAMtQ,kBAACzD,EAAA,EAAD,CAAuByG,IAAKf,IAC1B,kBAACzF,EAAA,EAAD,KACE,kBAACiG,EAAA,EAAK3J,IAAN,CAAUC,UAAU,QAClB,kBAACC,EAAA,EAAD,CAAKD,UAAU,qBACb,kBAAC+D,GAAD,CAAiBG,QAASkF,GAAwB,WAAYnF,eAAgB2E,GAAwB5I,UAAU,QAAQkK,QAAQ,UAAUlG,mBAAoBA,MAEhK,kBAAC/D,EAAA,EAAD,CAAKD,UAAU,qBACb,kBAACsE,EAAA,EAAD,CAAQtE,UAAU,QAAQkK,QAAQ,UAAUhG,QAASkF,GAAwB,YAA7E,sBAKR,kBAACe,EAAA,EAAD,CAAOC,KAAqB,YAAfjI,GAA0BkI,OAAQhB,GAAyB,WAAYiB,SAAS,SAASC,YAAU,GAC9G,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GAAzB,WAGA,kBAACN,EAAA,EAAMO,KAAP,KACE,kBAAC,WAAD,CAAUf,SAAU,kBAAChG,GAAD,OAClB,kBAACT,EAAD,CAAa8G,iBAAkBZ,GAAwB,WAAY5E,UAAWA,GAAW6C,aAAcA,GAAc5C,kBAAmBA,EAAmBuC,eAAgBA,GAAgBc,sBAAuBA,GAAuBb,kBAAmBA,OAGhQ,kBAACkD,EAAA,EAAMQ,OAAP,KACE,kBAACrG,EAAA,EAAD,CAAQ4F,QAAQ,YAAYhG,QAASmF,GAAyB,YAA9D,SAGA,kBAACtF,GAAD,CAAiBG,QAASkF,GAAwB,WAAYnF,eAAgB2E,GAAwB5I,UAAU,UAAUkK,QAAQ,UAAUlG,mBAAoBA,OAGpK,kBAACmG,EAAA,EAAD,CAAOlF,KAAK,KAAKmF,KAAqB,YAAfjI,GAA0BkI,OAAQhB,GAAyB,WAAYiB,SAAS,UACrG,kBAACH,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACvB,kBAACN,EAAA,EAAMS,MAAP,iBAEF,kBAACT,EAAA,EAAMO,KAAP,KACE,kBAAC,WAAD,CAAUf,SAAU,kBAAChG,GAAD,OAClB,kBAACR,GAAD,CAAc+D,YAAaA,GAAaC,eAAgBA,GAAgB1C,kBAAmBA,EAAmB8B,qBAAsBA,EAAsBsE,YAAa1S,GAAWL,MAAOkQ,YAAaA,GAAahB,eAAgBA,GAAgBxC,UAAWA,GAAW6C,aAAcA,OAG3R,kBAAC8C,EAAA,EAAMQ,OAAP,KACE,kBAACrG,EAAA,EAAD,CAAQ4F,QAAQ,YAAYhG,QAASmF,GAAyB,YAA9D,WAKJ,kBAACc,EAAA,EAAD,CAAOlF,KAAK,KAAKmF,KAAqB,YAAfjI,GAA0BkI,OAAQhB,GAAyB,CAAC,UAAW,YAAaiB,SAAS,SAASC,YAAU,GACrI,kBAACJ,EAAA,EAAMK,OAAP,CAAcC,aAAW,GACvB,kBAACN,EAAA,EAAMS,MAAP,iBAEF,kBAACT,EAAA,EAAMO,KAAP,KACE,kBAAC,WAAD,CAAUf,SAAU,kBAAChG,GAAD,OAClB,kBAACf,EAAD,CAAS8F,cAAeA,OAG5B,kBAACyB,EAAA,EAAMQ,OAAP,KACE,kBAACrG,EAAA,EAAD,CAAQ4F,QAAQ,YAAYhG,QAASmF,GAAyB,CAAC,UAAW,aAA1E","file":"static/js/8.704ab6a3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst createFormatOptionLabel = (ReactComponent) => ({label}) => <ReactComponent>{label}</ReactComponent>;\r\n\r\nexport {createFormatOptionLabel}","import { useState, useEffect } from \"react\";\r\n\r\n\r\nconst useWindowSize=() => {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n     const handleResize=()=>{\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    \r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n    \r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n\r\n  return windowSize;\r\n}\r\n\r\nexport default useWindowSize;","import { useCallback, unstable_useTransition, useRef, useState, useEffect, useMemo } from \"react\";\r\n\r\nfunction wrapPromise(promise) {\r\n  let status = \"pending\";\r\n  let result;\r\n  let suspender = promise.then(\r\n    r => {\r\n      status = \"success\";\r\n      result = r;\r\n    },\r\n    e => {\r\n      status = \"error\";\r\n      result = e;\r\n    }\r\n  );\r\n  return () => {\r\n    if (status === \"pending\") {\r\n      throw suspender;\r\n    } else if (status === \"error\") {\r\n      throw result;\r\n    } else if (status === \"success\") {\r\n      return result;\r\n    }\r\n  };\r\n}\r\n\r\nconst useAsyncResourceWithBoolean=(getter, initialParams) => {\r\n  const [dataCallbackRef, setDataCallbackRef]=useState({current: null});\r\n  const [transitionState, setTransitionState]=useState(!!initialParams);\r\n\r\n  const getNewData=useCallback((params) => {\r\n    setTransitionState(true);\r\n    setDataCallbackRef({current: wrapPromise(getter(params).then((result) => {setTransitionState(false); return result}))});\r\n  }, [setDataCallbackRef, getter]);\r\n\r\n  const getData=useMemo(() => {\r\n    if(dataCallbackRef.current || !initialParams){\r\n      return dataCallbackRef.current;\r\n    } else {\r\n      return () => {\r\n        throw new Promise(() => {});\r\n      }\r\n    }\r\n  }, [dataCallbackRef]);\r\n\r\n  useEffect(() => {\r\n    if(initialParams){\r\n      getNewData(initialParams);\r\n    }\r\n  }, []);\r\n\r\n  return [getData, getNewData, transitionState];\r\n}\r\n\r\nexport {useAsyncResourceWithBoolean};","import CSVParse from \"csv-parse\"\r\n\r\nconst textToTable=(text) => {\r\n  return new Promise(resolve => CSVParse(text, {  relax_column_count: true }, (err, result) => {resolve(result, err)}));\r\n}\r\n\r\nexport default textToTable;","import textToTable from './utils/table-utils.js';\r\nimport { chunk } from 'chunk';\r\nimport * as Immutable from 'immutable';\r\n\r\nconst getData=(item, options, property) => {\r\n  //console.log(item);    \r\n  return item[options[property].row][options[property].column];\r\n}\r\nconst getDataWithStride=(item, options, property, i) => {\r\n  return item[options[property].row][options[property].column+i*options[property].stride];\r\n}\r\n\r\nconst getComponentDB=({url, options, type, callback}) => {\r\n  console.log({url, options, type, callback});\r\n  if(type===\"link\") {\r\n    return fetch(url)\r\n      .then(response => response.text())\r\n      .then(text => textToTable(text))\r\n      .then(result => chunk(result, options.linesPerItem))\r\n      .then(chunks => \r\n        ({\r\n          hPlusValue: options.hPlusValue, \r\n          waterValue: options.waterValue,\r\n          components: Immutable.OrderedMap(chunks.filter(item => Number(getData(item, options, \"id\"))).map(item => [\r\n            Number(getData(item, options, \"id\")),\r\n            {\r\n              name: getData(item, options, \"name\"), \r\n              charge: Number(getData(item, options, \"charge\")),\r\n            }\r\n          ]))\r\n        })\r\n      ).then(db => {\r\n        if(!callback) {\r\n          return db;\r\n        }\r\n        const res=callback(db);\r\n        if(res instanceof Promise){\r\n          return res.then(_ => db);\r\n        } else {\r\n          return db;\r\n        }\r\n      });\r\n  }\r\n};\r\n\r\nconst componentDBDefaultParams=(callback) => ({\r\n  url: process.env.PUBLIC_URL+\"/assets/defaultdb/comp.vdb\", \r\n  type: \"link\",\r\n  options: {\r\n    linesPerItem: 1,\r\n    id: {row: 0, column: 0},\r\n    name: {row: 0, column: 1},\r\n    charge: {row: 0, column: 2},\r\n    hPlusValue: 330,\r\n    waterValue: 2,\r\n  }, \r\n  callback\r\n});\r\n\r\nconst getSpeciesDB=({url, options, type, callback}) => {\r\n  console.log({url, options, type, callback}); \r\n  if(type===\"link\") {\r\n    return Promise.all([url, ...options.labels.urls].map(url => fetch(url))).then(responses =>{\r\n      return Promise.all(responses.map(res => res.text().then(text=> textToTable(text))))\r\n    }).then(tables => {\r\n      const [mainTable, ...labelTables]=tables;\r\n      const labelList=labelTables.map(labelTable => chunk(labelTable, options.linesPerItem)).map(chunkedLabelTable => chunkedLabelTable.map(labelTable => getData(labelTable, options.labels, \"id\")));\r\n\r\n      const labelMap=Immutable.Map().withMutations((labelMap) => {\r\n        for(const [index, labelTable] of labelList.entries()) {\r\n          for(const specie of labelTable){\r\n            labelMap.set(Number(specie), options.labels.labelMap[index]);\r\n          }\r\n        };\r\n      });\r\n      \r\n      \r\n      const chunkedMainTable=chunk(mainTable, options.linesPerItem).filter(chunk => Number(chunk[0][0]));\r\n      const db={\r\n        aqs: {\r\n          species: Immutable.OrderedMap(),\r\n          componentToSpecies: Immutable.Map(),\r\n        },\r\n        solids: {\r\n          species: Immutable.OrderedMap(),\r\n          componentToSpecies: Immutable.Map(),\r\n        },\r\n        gases: {\r\n          species: Immutable.OrderedMap(),\r\n          componentToSpecies: Immutable.Map(),\r\n        },\r\n      }\r\n      db.aqs.species=db.aqs.species.withMutations(aqSpecies => {\r\n        db.solids.species=db.solids.species.withMutations(solidSpecies => {\r\n          db.gases.species=db.gases.species.withMutations(gasSpecies => {\r\n            const db={aqSpecies, solidSpecies, gasSpecies};\r\n            for(const item of chunkedMainTable){\r\n              const id=Number(getData(item, options, \"id\"));\r\n              const property=(labelMap.get(id) ?? \"aq\")+\"Species\";\r\n              db[property].set(id, \r\n                {\r\n                  name: getData(item, options, \"name\"),\r\n                  charge: Number(getData(item, options, \"charge\")),\r\n                  logK: Number(getData(item, options, \"logK\")),\r\n                  label: labelMap.get(Number(getData(item, options, \"id\"))) ?? 0,\r\n                  components: Immutable.Map().withMutations((components) => {\r\n                    for(let i=0; i<getData(item, options, \"numComponents\"); ++i){\r\n                      const component=Number(getDataWithStride(item, options, \"components\", i));\r\n                      const componentAmt=Number(getDataWithStride(item, options, \"componentAmts\", i));\r\n                      components.set(component, componentAmt);\r\n                    }\r\n                  }),\r\n                }\r\n              )\r\n            }\r\n          });\r\n        });\r\n      });   \r\n      db.aqs.componentToSpecies=db.aqs.componentToSpecies.withMutations(aqComponentToSpecies => {\r\n        for(const [speciesId, {components}] of db.aqs.species) {\r\n          for(const [componentId] of components) {\r\n            aqComponentToSpecies.update(componentId, (oldSet=Immutable.Set()) => oldSet.add(speciesId));\r\n          }\r\n        }\r\n      });\r\n      db.solids.componentToSpecies=db.solids.componentToSpecies.withMutations(solidComponentToSpecies => {\r\n        for(const [speciesId, {components}] of db.solids.species) {\r\n          for(const [componentId] of components) {\r\n            solidComponentToSpecies.update(componentId, (oldSet=Immutable.Set()) => oldSet.add(speciesId));\r\n          }\r\n        }\r\n      });\r\n      db.gases.componentToSpecies=db.gases.componentToSpecies.withMutations(gasComponentToSpecies => {\r\n        for(const [speciesId, {components}] of db.gases.species) {\r\n          for(const [componentId] of components) {\r\n            gasComponentToSpecies.update(componentId, (oldSet=Immutable.Set()) => oldSet.add(speciesId));\r\n          }\r\n        }\r\n      });\r\n      \r\n      return db;\r\n    }).then(db => {\r\n      if(!callback) {\r\n        return db;\r\n      }\r\n      const res=callback(db);\r\n      if(res instanceof Promise){\r\n        return res.then(_ => db);\r\n      } else {\r\n        return db;\r\n      }\r\n    });\r\n    \r\n  }\r\n}\r\n\r\nconst speciesDBDefaultParams=(callback) => ({\r\n  url: process.env.PUBLIC_URL+\"/assets/defaultdb/thermo.vdb\", \r\n  type: \"link\",\r\n  options: {\r\n    linesPerItem: 3,\r\n    id: {row: 0, column: 0},\r\n    name: {row: 0, column: 1},\r\n    charge: {row: 0, column: 6},\r\n    logK: {row: 0, column: 3},\r\n    numComponents: {row: 0, column: 10},\r\n    components: {row: 1, column: 1, stride: 2},\r\n    componentAmts: {row: 1, column: 0, stride: 2},\r\n    labels: {\r\n      urls: [process.env.PUBLIC_URL+\"/assets/defaultdb/type6.vdb\", process.env.PUBLIC_URL+\"/assets/defaultdb/gases.vdb\"],\r\n      linesPerId: 3,\r\n      id: {row: 0, column: 0},\r\n      labelMap: [\"solid\", \"gas\"]\r\n    }\r\n  }, \r\n  callback, \r\n});\r\n\r\nexport {getComponentDB, componentDBDefaultParams, getSpeciesDB, speciesDBDefaultParams}","import React from \"react\";\r\n\r\nconst FormattedSupSub=React.memo((props) => {\r\n  return(\r\n    <>\r\n      {Array.from(props.children.matchAll(/([^_^]+)(?:\\^(.)|_(.))?/g)).map((value) => <React.Fragment key={props.children.substring(0, value.index)}>{value[1]}<sup>{value[2]}</sup><sub>{value[3]}</sub></React.Fragment>)}\r\n    </>\r\n  );\r\n});\r\nexport default FormattedSupSub;","import React from 'react';\r\n\r\nimport Select from 'react-select';\r\n\r\nimport FormattedSupSub from '../../formatting/FormattedSupSub.js';\r\n\r\nimport { createFormatOptionLabel } from '../../utils/react-select-utils.js';\r\n\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst centerSelectStyles = {\r\n  singleValue: styles => ({ ...styles, width: '100%', textAlign : \"center\" }),\r\n  option: styles => ({ ...styles, width: '100%', textAlign : \"center\" }),\r\n};\r\n\r\nconst ComponentListHeader=React.memo((props) => {\r\n  const {hPlusOptionsRef, defaultVal, onChange}=props;\r\n  return (\r\n    <Row className=\"mt-4 mb-3\">\r\n      <Col xs=\"3\" sm=\"5\" className=\"center-items\">\r\n        <label className=\"w-100 d-none d-sm-block text-muted text-center\">\r\n          Components\r\n        </label>\r\n        <label className=\"w-100 d-block d-sm-none text-muted text-center\">\r\n          Comp.\r\n        </label>\r\n      </Col>\r\n      <Col xs=\"7\" sm=\"5\">\r\n        <Select isSearchable={false} options={hPlusOptionsRef.current} formatOptionLabel={createFormatOptionLabel(FormattedSupSub)} styles={centerSelectStyles} onChange={onChange} value={defaultVal}/>\r\n      </Col>\r\n      <Col xs=\"2\" className=\"center-items\">\r\n        <OverlayTrigger\r\n          placement=\"bottom\"\r\n          overlay={\r\n            <Tooltip>\r\n              Equilibrium Concentration\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"0.875rem\" version=\"1.1\" id=\"Layer_1\" viewBox=\"0 0 139 119.177\" overflow=\"visible\" enableBackground=\"new 0 0 139 119.177\">\r\n            <line fill=\"none\" stroke=\"#000000\" strokeWidth=\"7\" x1=\"139\" y1=\"63.308\" x2=\"0\" y2=\"63.308\"></line>\r\n            <line fill=\"none\" stroke=\"#000000\" strokeWidth=\"6\" x1=\"30.646\" y1=\"92.308\" x2=\"2.189\" y2=\"65.308\"></line>\r\n            <line fill=\"none\" stroke=\"#000000\" strokeWidth=\"7\" x1=\"3\" y1=\"30.308\" x2=\"133\" y2=\"30.308\"></line>\r\n            <line fill=\"none\" stroke=\"#000000\" strokeWidth=\"6\" x1=\"99.296\" y1=\"2.308\" x2=\"130.953\" y2=\"28.608\"></line>\r\n            <path fill=\"none\" stroke=\"#FFFFFF\" strokeWidth=\"2\" d=\"M53,118.177c2.333,0,4.667,0,7,0\"></path>\r\n          </svg>\r\n        </OverlayTrigger>\r\n      </Col>\r\n    </Row>\r\n  )\r\n});\r\n\r\nexport default ComponentListHeader;","import { useState, useEffect, useRef } from \"react\";\r\nimport * as Comlink from \"comlink\";;\r\n\r\nconst useComlinkWorker=(WorkerClass, parameters) => {\r\n  const [comlinkWrapper, setComlinkWrapper]=useState({current: null});\r\n  useEffect(() => {\r\n    const worker=new WorkerClass(parameters);\r\n    setComlinkWrapper({current: Comlink.wrap(worker)});\r\n    return () => {worker.terminate()}\r\n  }, []);\r\n  return comlinkWrapper.current;\r\n}\r\n\r\nexport default useComlinkWorker;","export default function() {\n  return new Worker(__webpack_public_path__ + \"static/js/CalculateResultWorker.17cd4896.worker.js\");\n}\n","import { useState, useCallback } from \"react\"\r\nimport * as Immutable from \"immutable\";\r\n\r\nconst useModalStack=() => {\r\n  const [modalsStack, setModalsStack]=useState(Immutable.Stack());\r\n  const currentModal=modalsStack.peek();\r\n  const closeModal=useCallback((modalName) => {\r\n    if(Array.isArray(modalName)){\r\n      setModalsStack(modalsStack.withMutations(stack => {\r\n        for(const name of modalName){\r\n          if(stack.peek()===name) {\r\n            stack.pop();\r\n          }\r\n        }\r\n      }));\r\n    } else if(currentModal===modalName) {\r\n      setModalsStack(modalsStack.pop());\r\n    }\r\n  }, [setModalsStack, currentModal, modalsStack]);\r\n  const openModal=useCallback((modalName) => {\r\n    setModalsStack(modalsStack.push(modalName));\r\n  }, [setModalsStack, modalsStack]);\r\n  return [currentModal, openModal, closeModal]\r\n}\r\n\r\nexport default useModalStack;","import React, { useState, useRef, useReducer, useCallback, unstable_useOpaqueIdentifier , Suspense } from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport memoize from 'fast-memoize';\r\n\r\nimport * as Immutable from 'immutable';\r\nimport * as transit from \"transit-immutable-js\";\r\nimport update from \"immutability-helper\"\r\n\r\nimport useResizeObserver from './utils/useResizeObserver.js';\r\nimport useWindowSize from './utils/useWindowSize.js';\r\nimport ResizeObserverWrapper from './utils/ResizeObserverWrapper.js';\r\nimport { useAsyncResourceWithBoolean } from \"./utils/useAsyncResources.js\";\r\n\r\nimport { componentDBDefaultParams, getComponentDB, getSpeciesDB, speciesDBDefaultParams } from './getDBs.js';\r\n\r\nimport ComponentListHeader from \"./component_groups/components/ComponentListHeader.js\"\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\n\r\nimport useComlinkWorker from './utils/useComlinkWorker.js';\r\n//eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport ConcentrationCalculator from 'worker-loader!./CalculateResultWorker.js'\r\nimport useModalStack from './utils/useModalStack.js';\r\n\r\nconst Results = React.lazy(() => import('./component_groups/Result.js'));\r\n\r\nconst HPlusComponent = React.lazy(() => import(\"./component_groups/components/HPlusComponent.js\"));\r\nconst ComponentList = React.lazy(() => import(\"./component_groups/components/ComponentList.js\"));\r\n\r\nconst ComponentSelectModal = React.lazy(() => import(\"./component_groups/components/ComponentSelectModal.js\"))\r\nconst ComponentSelect = React.lazy(() => import(\"./component_groups/components/ComponentSelect.js\"))\r\n\r\nconst SpeciesList = React.lazy(() => import('./component_groups/Species.js'));\r\nconst TableauTable = React.lazy(() => import('./component_groups/Tableau.js'));\r\n\r\nconst ScrollContainer=React.memo((props) => {\r\n  return (\r\n    <div style={{\"maxHeight\" : \"calc(100vh - \"+(props.headerHeight+props.footerHeight)+\"px)\", \"overflowY\" : \"auto\", \"width\": \"100%\"}}>\r\n      <div style={{\"overflowX\" : \"hidden\"}}>\r\n        <ResizeObserverWrapper>\r\n          <Container fluid>\r\n            {props.children}\r\n          </Container>\r\n        </ResizeObserverWrapper>\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\nconst SpinnerComponentRow=React.memo((props) => {\r\n  return (\r\n    <Row className=\"mb-3\" style={{\"height\": \"38px\"}}>\r\n      <Col className=\"center-items\">\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </Col>\r\n    </Row>\r\n  );\r\n});\r\n\r\nconst CalculateButton=React.memo((props) => {\r\n  const { calculateNewResult, disableMessage, onClick, ...restProps }=props;\r\n  const disabled=!!disableMessage();\r\n  const button=<Button {...restProps} onClick={(e) => {onClick(e); calculateNewResult();} } disabled={disabled}>Calculate</Button>;\r\n  if(disabled) {\r\n    return (\r\n      <OverlayTrigger\r\n        placement=\"top\"\r\n        overlay={\r\n          <Tooltip>\r\n            {disableMessage()}\r\n          </Tooltip>\r\n        }\r\n      >\r\n        <div className=\"disabled-button-wrapper\">\r\n          {button}\r\n        </div>\r\n      </OverlayTrigger>\r\n    )\r\n  } else {\r\n    return button;\r\n  }\r\n});\r\n\r\nconst speciesOccurences=(componentToSpecies, componentsPresent) => Immutable.Map().withMutations((map) => {\r\n  for(const componentId of componentsPresent) {\r\n    if(componentToSpecies.has(componentId)){\r\n      for(const specieId of componentToSpecies.get(componentId)) {\r\n        map.update(specieId, (num=0)=>num+1);\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst speciesCouldBePresentOfType=(speciesDB, componentsPresent) => Immutable.OrderedSet().withMutations(ourSpeciesCouldBePresent => {\r\n  const ourSpeciesOccurences=speciesOccurences(speciesDB.componentToSpecies, componentsPresent);\r\n  for(const [specie, specieData] of speciesDB.species){\r\n    if(ourSpeciesOccurences.get(specie)===specieData.components.size){\r\n      ourSpeciesCouldBePresent.add(specie);\r\n    } \r\n  }\r\n})\r\n\r\nconst defaultRowInputValue=Immutable.Map({equilChecked: false, conc: \"\"});\r\n\r\nconst FreeQL=(props) => {\r\n  const hPlusOptionsRef=useRef([\r\n    { value: unstable_useOpaqueIdentifier(), label: 'totalH' },\r\n    { value: unstable_useOpaqueIdentifier(), label: 'pH' },\r\n    { value: unstable_useOpaqueIdentifier(), label: 'Alkalinity^1' },\r\n    { value: unstable_useOpaqueIdentifier(), label: 'Other Alkalinity' },\r\n  ]);\r\n  const ConcentrationCalculatorWorker=useComlinkWorker(ConcentrationCalculator);\r\n  const [totalHOption, pHOption, alkOption, alkOtherOption]=hPlusOptionsRef.current;\r\n  const [hPlusOption, setHPlusOption]=useState(totalHOption);\r\n\r\n  const [componentsInputState, componentsInputStateReducer]=useReducer(\r\n    (oldState, action) => {\r\n      switch(action.action){\r\n        case \"add\":\r\n          return oldState.withMutations((map) => {\r\n            for(const componentToAdd of action.value.components){\r\n              map.set(componentToAdd, defaultRowInputValue);\r\n            }\r\n          });\r\n        case \"remove\":\r\n          return oldState.removeAll(action.value.components);\r\n        case \"toggleEquilChecked\":\r\n          return oldState.updateIn([action.value.component, \"equilChecked\"], (val) => !val);\r\n        case \"setConc\":\r\n          return oldState.setIn([action.value.component, \"conc\"], action.value.conc);\r\n        default:\r\n          throw new Error();\r\n      }\r\n    }, \r\n    Immutable.Map()\r\n  );\r\n  const updateConc=useCallback((component, conc)=> {\r\n    componentsInputStateReducer({action: \"setConc\", value : {component, conc}});\r\n  }, [componentsInputStateReducer]);\r\n  const toggleChecked=useCallback((component) => {\r\n    componentsInputStateReducer({action: \"toggleEquilChecked\", value: {component}});\r\n  }, [componentsInputStateReducer]);\r\n\r\n  const [componentsPresent, setComponentsPresent]=useState(Immutable.OrderedSet());\r\n  const addComponents=useCallback((components) => {\r\n    componentsInputStateReducer({action: \"add\", value: {components}});\r\n    setComponentsPresent(componentsPresent.union(components));\r\n  }, [componentsPresent, setComponentsPresent, componentsInputStateReducer]);\r\n  const removeComponents=useCallback((components) => {\r\n    componentsInputStateReducer({action: \"remove\", value: {components}});\r\n    setComponentsPresent(componentsPresent.subtract(components));\r\n  }, [componentsPresent, setComponentsPresent, componentsInputStateReducer]);\r\n\r\n  const [speciesEnabled, setSpeciesEnabled]=useState({\r\n    aqs: Immutable.OrderedSet(),\r\n    solids: Immutable.OrderedSet(),\r\n    gases: Immutable.OrderedSet(),\r\n  });\r\n  const [logKChanges, setLogKChanges]=useState({\r\n    aqs: Immutable.Map(),\r\n    solids: Immutable.Map(),\r\n    gases: Immutable.Map(),\r\n  });\r\n\r\n  const [componentsDB, getNewComponentsDB, gettingNewComponentsDB]=useAsyncResourceWithBoolean(getComponentDB, componentDBDefaultParams((db) => {\r\n    console.log(db);\r\n    addComponents([db.waterValue, db.hPlusValue]);\r\n  }));\r\n  const [speciesDB, getNewSpeciesDB, gettingNewSpeciesDB]=useAsyncResourceWithBoolean(getSpeciesDB, speciesDBDefaultParams((db) => {\r\n    console.log(db);\r\n    setSpeciesEnabled(update(speciesEnabled, {aqs : {$set: Immutable.Set(db.aqs.species.keys())}}));\r\n  }));\r\n\r\n  const speciesCouldBePresent=useCallback(memoize(() => ({\r\n    aqs: speciesCouldBePresentOfType(speciesDB().aqs, componentsPresent),\r\n    solids: speciesCouldBePresentOfType(speciesDB().solids, componentsPresent),\r\n    gases: speciesCouldBePresentOfType(speciesDB().gases, componentsPresent),\r\n  })), [speciesDB, componentsPresent]);\r\n\r\n  const speciesHere=useCallback(memoize(() => {\r\n    return {\r\n      aqs: Immutable.List(speciesCouldBePresent().aqs.intersect(speciesEnabled.aqs)),\r\n      solids: Immutable.List(speciesCouldBePresent().solids.intersect(speciesEnabled.solids)),\r\n      gases: Immutable.List(speciesCouldBePresent().gases.intersect(speciesEnabled.gases)),\r\n    }\r\n  }), [speciesCouldBePresent, speciesEnabled]);\r\n\r\n  const [resultMap, setResultMap]=useState(Immutable.Map());\r\n  const [currentResult, calculateNewResult, calculatingNewResult]=useAsyncResourceWithBoolean(() => {\r\n    const input={speciesHere: speciesHere(), componentsPresent: Immutable.List(componentsPresent.delete(componentsDB().waterValue)), logKChanges, componentsInputState};\r\n    const inputImmutable=Immutable.fromJS(input);\r\n    let result;\r\n    if(!resultMap.has(inputImmutable)) {\r\n      result=ConcentrationCalculatorWorker.calculate(transit.toJSON(input)).then(res => transit.fromJSON(res)).catch((error) => error);\r\n      //setResultMap(resultMap.set(inputImmutable, result));\r\n    } else {\r\n      result=resultMap.get(inputImmutable);\r\n    }\r\n    return result; \r\n  });\r\n\r\n  const calculateButtonMessage=useCallback(memoize(() => {\r\n    if(calculatingNewResult){\r\n      return \"Calculating...\"\r\n    } else if(gettingNewComponentsDB || gettingNewSpeciesDB){\r\n      return \"Getting Databases...\"\r\n    } else if(componentsInputState.filter((componentData, component) => componentsDB().waterValue!==component && componentsPresent.has(component)).find((componentData, component) => {\r\n      return typeof componentData.get(\"conc\")!==\"number\";\r\n    })) {\r\n      return \"At least one component is empty or invalid\";\r\n    } else {\r\n      return false;\r\n    }\r\n  }), [componentsDB, componentsInputState, componentsPresent, gettingNewComponentsDB, gettingNewSpeciesDB, calculatingNewResult]);\r\n\r\n  const windowSize=useWindowSize();\r\n  const [buttonsHeight, setButtonsHeight]=useState(0);\r\n  const outerAdderHeight=windowSize.height>=700 ? 54 : 0;\r\n  const buttonsRef=useResizeObserver(useCallback(({ height }) => {setButtonsHeight(height);}, [setButtonsHeight]));\r\n  const [currentModal, openModal, closeModal]=useModalStack();\r\n\r\n  const createModalOpenCallback=useCallback(memoize((params) => {\r\n    return () => openModal(params);\r\n  }), [openModal]);\r\n  const createModalCloseCallback=useCallback(memoize((params) => {\r\n    return () => closeModal(params);\r\n  }), [closeModal]);\r\n\r\n  const onHPlusOptionChange=useCallback((val) => {\r\n    if(hPlusOption===pHOption){\r\n      toggleChecked(componentsDB().hPlusValue);\r\n      updateConc(componentsDB().hPlusValue, -Math.log10(componentsInputState.get(componentsDB().hPlusValue).get(\"conc\")))\r\n    } else if(val===pHOption) {\r\n      toggleChecked(componentsDB().hPlusValue);\r\n      updateConc(componentsDB().hPlusValue, Math.pow(10, -componentsInputState.get(componentsDB().hPlusValue).get(\"conc\")))\r\n    }\r\n    setHPlusOption(val);\r\n  }, [setHPlusOption, updateConc, hPlusOption, componentsDB, componentsInputState]);\r\n\r\n  return(\r\n    <Form>\r\n      <Container style={{\"height\" : \"calc(100vh - \"+(props.headerHeight+buttonsHeight+props.footerHeight)+\"px)\"}}>\r\n        <Row>\r\n          <Col className=\"p-0\">\r\n            <ScrollContainer headerHeight={props.headerHeight} footerHeight={props.footerHeight+buttonsHeight+outerAdderHeight}>\r\n              <ComponentListHeader hPlusOptionsRef={hPlusOptionsRef} defaultVal={hPlusOption} onChange={onHPlusOptionChange}/>\r\n              <Suspense fallback={<SpinnerComponentRow/>}>\r\n                <HPlusComponent pH={pHOption===hPlusOption} componentsDB={componentsDB} componentsInputState={componentsInputState} updateConc={updateConc}/>\r\n              </Suspense>\r\n              <Row>\r\n                <Col xs=\"3\" sm=\"5\" className=\"center-items\">\r\n                  <label className=\"w-100 d-none d-sm-block text-muted text-center\">\r\n                    Components\r\n                  </label>\r\n                  <label className=\"w-100 d-block d-sm-none text-muted text-center\">\r\n                    Comp.\r\n                  </label>\r\n                </Col>\r\n                <Col xs={{span: 7, offset: 0}} sm={{span: 5, offset:0}}>\r\n                  <label className=\"w-100 text-muted text-center\">\r\n                    Total Conc.\r\n                  </label>\r\n                </Col>\r\n              </Row>\r\n              <hr className=\"mt-0 mb-3\"/>\r\n              <Suspense fallback={<SpinnerComponentRow/>}>\r\n                <ComponentList componentsDB={componentsDB} componentsPresent={componentsPresent} toggleChecked={toggleChecked} updateConc={updateConc} removeComponents={removeComponents}/>\r\n              </Suspense>\r\n              <Row>\r\n                <Col>\r\n                  {\r\n                    windowSize.height<700 &&\r\n                    <div className=\"d-flex center-items w-100\">\r\n                      <Suspense fallback=\"\">\r\n                        <ComponentSelectModal componentsPresent={componentsPresent} componentsDB={componentsDB} addComponents={addComponents} windowHeight={windowSize.height}/>\r\n                      </Suspense>\r\n                    </div>\r\n                  }\r\n                </Col>\r\n              </Row>\r\n            </ScrollContainer>\r\n            <Container fluid>\r\n              <Row className=\"pt-3\">\r\n                <Col>\r\n                  {\r\n                    windowSize.height>=700 &&\r\n                    <Suspense fallback=\"\">\r\n                      <ComponentSelect componentsPresent={componentsPresent} componentsDB={componentsDB} addComponents={addComponents}/>\r\n                    </Suspense>\r\n                  }\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n          <Col xs=\"4\" className=\"d-none d-md-flex p-0\">\r\n            <ScrollContainer headerHeight={props.headerHeight} footerHeight={props.footerHeight+buttonsHeight}>\r\n              <Row className=\"mt-4\">\r\n                <Col className=\"center-items\">\r\n                  <h5 className=\"text-muted text-center\">\r\n                    Species\r\n                  </h5>\r\n                </Col>\r\n              </Row>\r\n              <Suspense fallback={<SpinnerComponentRow/>}>\r\n                <SpeciesList openTableauModal={createModalOpenCallback(\"tableau\")} speciesDB={speciesDB} componentsDB={componentsDB} componentsPresent={componentsPresent} speciesEnabled={speciesEnabled} speciesCouldBePresent={speciesCouldBePresent} setSpeciesEnabled={setSpeciesEnabled}/>\r\n              </Suspense>\r\n            </ScrollContainer>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <ResizeObserverWrapper ref={buttonsRef}>\r\n        <Container>\r\n          <Form.Row className=\"py-3\">\r\n            <Col className=\"d-none d-md-block\">\r\n              <CalculateButton onClick={createModalOpenCallback(\"results\")} disableMessage={calculateButtonMessage} className=\"w-100\" variant=\"primary\" calculateNewResult={calculateNewResult}/>\r\n            </Col>\r\n            <Col className=\"d-block d-md-none\">\r\n              <Button className=\"w-100\" variant=\"primary\" onClick={createModalOpenCallback(\"species\")}>Select Species</Button>\r\n            </Col>\r\n          </Form.Row>\r\n        </Container>\r\n      </ResizeObserverWrapper>\r\n      <Modal show={currentModal===\"species\"} onHide={createModalCloseCallback(\"species\")} backdrop=\"static\" scrollable>\r\n        <Modal.Header closeButton>\r\n          Species\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Suspense fallback={<SpinnerComponentRow/>}>\r\n            <SpeciesList openTableauModal={createModalOpenCallback(\"tableau\")} speciesDB={speciesDB} componentsDB={componentsDB} componentsPresent={componentsPresent} speciesEnabled={speciesEnabled} speciesCouldBePresent={speciesCouldBePresent} setSpeciesEnabled={setSpeciesEnabled}/>\r\n          </Suspense>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={createModalCloseCallback(\"species\")}>\r\n            Close\r\n          </Button>\r\n          <CalculateButton onClick={createModalOpenCallback(\"results\")} disableMessage={calculateButtonMessage} className=\"ml-auto\" variant=\"primary\" calculateNewResult={calculateNewResult}/>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal size=\"xl\" show={currentModal===\"tableau\"} onHide={createModalCloseCallback(\"tableau\")} backdrop=\"static\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Tableau</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Suspense fallback={<SpinnerComponentRow/>}>\r\n            <TableauTable logKChanges={logKChanges} setLogKChanges={setLogKChanges} componentsPresent={componentsPresent} componentsInputState={componentsInputState} windowWidth={windowSize.width} speciesHere={speciesHere} speciesEnabled={speciesEnabled} speciesDB={speciesDB} componentsDB={componentsDB}/>\r\n          </Suspense>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={createModalCloseCallback(\"tableau\")}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal size=\"xl\" show={currentModal===\"results\"} onHide={createModalCloseCallback([\"results\", \"species\"])} backdrop=\"static\" scrollable>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Results</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Suspense fallback={<SpinnerComponentRow/>}>\r\n            <Results currentResult={currentResult}/>\r\n          </Suspense>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={createModalCloseCallback([\"results\", \"species\"])}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FreeQL;"],"sourceRoot":""}