{"version":3,"sources":["reusable_components/ListHeader.js","reusable_components/AbbreviatingLabel.js","reusable_components/SpinnerRow.js","utils/react-select-utils.js","utils/useModalStack.js","reusable_components/TooltipButton.js","utils/ReduxSuspense.js","features/equilibria/CalculateButton.js","reusable_components/formatting/FormattedSupSub.js","features/components/ComponentHeaders.js","reusable_components/svgs/plus-circle.js","reusable_components/svgs/plus-circle-filled.js","FreeQL.js"],"names":["ListHeader","props","label","inputLabel","checkLabel","className","xs","sm","React","cloneElement","AbbreviatingLabel","breakpoint","children","abbr","SpinnerComponentRow","memo","style","animation","role","createFormatOptionLabel","ReactComponent","useModalStack","useState","Immutable","modalsStack","setModalsStack","currentModal","peek","closeModal","useCallback","modalName","Array","isArray","withMutations","stack","name","pop","openModal","push","TooltipButton","disabled","disableMessage","buttonProps","OverlayTrigger","placement","overlay","Tooltip","Button","ReduxSuspense","subscribedItems","fallback","useSelector","state","map","item","loading","some","subscribedItem","message","createSelector","getErroredGases","getGasReplacements","getComponentsConc","getComponentToGases","getPartialPressures","getSpeciesPresent","erroredGases","gasReplacements","componentsConc","componentToGases","partialPressures","speciesPresent","console","log","size","gases","every","gas","get","deleteAll","keys","conc","is_number","partialPressure","DisabledCalculateButton","otherProps","EnabledCalculateButton","onClick","dispatch","useDispatch","context","getCurrentCalculationArguments","e","calculateEquilibrium","CalculateButtonInternal","CalculateButton","FormattedSupSub","from","matchAll","value","Fragment","key","substring","index","EquilSymbol","xmlns","height","version","id","viewBox","overflow","enableBackground","fill","stroke","strokeWidth","x1","y1","x2","y2","d","centerSelectStyles","singleValue","styles","width","textAlign","option","HPlusHeader","selectValue","getHPlusOption","menuPosition","isSearchable","options","Object","values","hPlusOptions","formatOptionLabel","onChange","hPlusOptionChanged","ComponentListHeader","PlusCircle","fillRule","PlusCircleFilled","Equilibria","lazy","ComponentList","GasList","HPlusRow","ComponentSelectModal","ComponentSelect","SpeciesList","TableauTable","ScrollContainer","forwardRef","ref","headerHeight","footerHeight","Container","fluid","FreeQL","useEffect","getNewComponentDB","componentDBDefaultParams","getNewSpeciesDB","speciesDBDefaultParams","windowSize","useWindowSize","createModalOpenCallback","memoize","params","createModalCloseCallback","componentSelect","useRef","numComponents","getComponentsPresent","previousNumComponentsRef","current","usePreviousRef","useLayoutEffect","scrollIntoView","Form","Row","Col","Collapse","in","show","close","windowHeight","openTableauModal","variant","Modal","onHide","backdrop","scrollable","Header","closeButton","Body","Footer","Title","windowWidth"],"mappings":"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","file":"static/js/11.db122c4c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\n\r\nconst ListHeader=(props) => {\r\n  const {label, inputLabel, checkLabel}=props;\r\n  return (\r\n    <>\r\n      <Row className=\"mt-4\">\r\n        <Col xs=\"3\" sm=\"5\" className=\"center-items\">\r\n          {label && React.cloneElement(label, {className: \"w-100 text-muted text-center\"})}\r\n        </Col>\r\n        <Col xs=\"7\" sm=\"5\">\r\n          {inputLabel && React.cloneElement(inputLabel, {className: \"w-100 text-muted text-center\"})}\r\n        </Col>\r\n        <Col xs=\"2\" className=\"center-items\">\r\n          {checkLabel && React.cloneElement(checkLabel, {className: \"w-100 text-muted text-center\"})}\r\n        </Col>\r\n      </Row>\r\n      <hr className=\"mt-0 mb-3\"/>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default ListHeader","import React from \"react\";\r\n\r\nconst AbbreviatingLabel=(props) => (\r\n  <>\r\n    <label className={\"w-100 d-none d-\"+props.breakpoint+\"-block \"+props.className}>\r\n      {props.children}\r\n    </label>\r\n    <label className={\"w-100 d-block d-\"+props.breakpoint+\"-none \"+props.className}>\r\n      {props.abbr}\r\n    </label>\r\n  </>\r\n);\r\n\r\nexport default AbbreviatingLabel;","import React from \"react\";\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst SpinnerComponentRow=React.memo(() => {\r\n  return (\r\n    <Row className=\"mb-3\" style={{\"height\": \"38px\"}}>\r\n      <Col className=\"center-items\">\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </Col>\r\n    </Row>\r\n  );\r\n});\r\n\r\nexport default SpinnerComponentRow;","import React from \"react\";\r\n\r\nconst createFormatOptionLabel = (ReactComponent) => ({label}) => <ReactComponent>{label}</ReactComponent>;\r\n\r\nexport {createFormatOptionLabel}","import { useState, useCallback } from \"react\"\r\nimport * as Immutable from \"immutable\";\r\n\r\nconst useModalStack=() => {\r\n  const [modalsStack, setModalsStack]=useState(Immutable.Stack());\r\n  const currentModal=modalsStack.peek();\r\n  const closeModal=useCallback((modalName) => {\r\n    if(Array.isArray(modalName)){\r\n      setModalsStack(modalsStack => modalsStack.withMutations(stack => {\r\n        for(const name of modalName){\r\n          if(stack.peek()===name) {\r\n            stack.pop();\r\n          }\r\n        }\r\n      }));\r\n    } else if(currentModal===modalName) {\r\n      setModalsStack(modalsStack => modalsStack.pop());\r\n    }\r\n  }, [setModalsStack, currentModal]);\r\n  const openModal=useCallback((modalName) => {\r\n    setModalsStack(modalsStack => modalsStack.push(modalName));\r\n  }, [setModalsStack]);\r\n  return [currentModal, openModal, closeModal]\r\n}\r\n\r\nexport default useModalStack;","import React from \"react\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\n\r\n\r\nconst TooltipButton=React.memo(({disabled, disableMessage, ...buttonProps}) => {\r\n  if(disabled) {\r\n    return (\r\n      <OverlayTrigger\r\n        placement=\"top\"\r\n        overlay={\r\n          <Tooltip>\r\n            {disableMessage}\r\n          </Tooltip>\r\n        }\r\n      >\r\n        <div className=\"disabled-button-wrapper\">\r\n          <Button {...buttonProps} disabled />\r\n        </div>\r\n      </OverlayTrigger>\r\n    )\r\n  } else {\r\n    return <Button {...buttonProps} />;\r\n  }\r\n});\r\nexport default TooltipButton","import React, { Suspense } from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ReduxSuspense=({subscribedItems, fallback, children}) => {\r\n  const subscribedItemsStatus=useSelector(state => subscribedItems.map(item => state.loading[item]));\r\n  if(subscribedItemsStatus.some(subscribedItem => subscribedItem===\"pending\")){\r\n    return(\r\n      fallback\r\n    )\r\n  } else {\r\n    return (\r\n      <Suspense fallback={fallback}>\r\n        {children}\r\n      </Suspense>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReduxSuspense;","import React from \"react\";\r\n\r\nimport is_number from \"is-number\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createSelector } from \"reselect\";\r\nimport TooltipButton from \"../../reusable_components/TooltipButton\";\r\nimport { getComponentsConc } from \"../components/componentsSelectors\";\r\nimport {calculateEquilibrium, getCurrentCalculationArguments } from \"./equilibriaSlice\";\r\nimport { getComponentToGases, getErroredGases, getGasReplacements, getPartialPressures } from \"../species/gases/gasInputSlice\";\r\nimport ReduxSuspense from \"../../utils/ReduxSuspense\";\r\nimport { getSpeciesPresent } from \"../species/speciesSelectors\";\r\n\r\nconst message=createSelector(\r\n  [getErroredGases, getGasReplacements, getComponentsConc, getComponentToGases, getPartialPressures, getSpeciesPresent],\r\n  (erroredGases, gasReplacements, componentsConc, componentToGases, partialPressures, speciesPresent) => { \r\n    console.log(gasReplacements);\r\n    if (erroredGases.size>0) {\r\n      return \"Two gases are replacing the same component\";\r\n    } else if (!speciesPresent.gases.every((gas) => gasReplacements.get(gas))) {\r\n      return \"You have not selected a replacement for at least one gas\";\r\n    } else if(componentsConc.deleteAll(componentToGases.keys()).some(conc => !is_number(conc))) {\r\n      return \"At least one component is empty or invalid\";\r\n    } else if(partialPressures.some(partialPressure => !is_number(partialPressure))) {\r\n      return \"At least one gas's partial pressure is empty or invalid\";\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n);\r\n\r\n\r\nconst DisabledCalculateButton=React.memo(({disableMessage, ...otherProps}) => {\r\n  return (\r\n    <TooltipButton \r\n      disabled\r\n      disableMessage={disableMessage} \r\n      children={\"Calculate\"} \r\n      {...otherProps} \r\n    />\r\n  )\r\n  \r\n})\r\nconst EnabledCalculateButton=React.memo(({onClick, ...otherProps}) => {\r\n  const dispatch=useDispatch()\r\n  const context=useSelector(getCurrentCalculationArguments);\r\n\r\n  return (\r\n    <TooltipButton \r\n      onClick={(e) => {\r\n        onClick(e);\r\n        dispatch(calculateEquilibrium(context))\r\n      }} \r\n      children={\"Calculate\"} \r\n      {...otherProps} \r\n    />\r\n  )\r\n})\r\n\r\n\r\nconst CalculateButtonInternal=React.memo(({onClick, ...otherProps}) => {\r\n  const disableMessage=useSelector(message);\r\n  if(!!disableMessage){\r\n    return(\r\n      <DisabledCalculateButton {...otherProps} disableMessage={disableMessage} />\r\n    )\r\n  } else {\r\n    return (\r\n      <EnabledCalculateButton onClick={onClick} {...otherProps} />\r\n    );\r\n  }\r\n});\r\n\r\nconst CalculateButton=React.memo((props) => {\r\n  return (\r\n    <ReduxSuspense fallback={<DisabledCalculateButton message=\"Getting Database...\" {...props}/>} subscribedItems={[\"componentDB\", \"speciesDB\"]}>\r\n      <CalculateButtonInternal {...props} />\r\n    </ReduxSuspense>\r\n  )\r\n});\r\n\r\nexport default CalculateButton;","import React from \"react\";\r\n\r\nconst FormattedSupSub=React.memo((props) => {\r\n  return(\r\n    <>\r\n      {Array.from(props.children.matchAll(/([^_^]+)(?:\\^(.)|_(.))?/g)).map((value) => <React.Fragment key={props.children.substring(0, value.index)}>{value[1]}<sup>{value[2]}</sup><sub>{value[3]}</sub></React.Fragment>)}\r\n    </>\r\n  );\r\n});\r\nexport default FormattedSupSub;","import React from 'react';\r\n\r\n\r\nimport ListHeader from '../../reusable_components/ListHeader.js';\r\n\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport AbbreviatingLabel from '../../reusable_components/AbbreviatingLabel.js';\r\n\r\nimport Select from 'react-select';\r\n\r\nimport FormattedSupSub from '../../reusable_components/formatting/FormattedSupSub.js';\r\n\r\nimport { createFormatOptionLabel } from '../../utils/react-select-utils.js';\r\nimport { getHPlusOption, getComponentDB } from './componentsSelectors.js';\r\nimport { hPlusOptionChanged, hPlusOptions } from './componentsSlice.js';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n\r\nconst EquilSymbol=React.memo(() => (\r\n  <OverlayTrigger\r\n    placement=\"bottom\"\r\n    overlay={\r\n      <Tooltip>\r\n        Equilibrium Concentration\r\n      </Tooltip>\r\n    } \r\n  >\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"0.875rem\" version=\"1.1\" id=\"Layer_1\" viewBox=\"0 0 139 119.177\" overflow=\"visible\" enableBackground=\"new 0 0 139 119.177\">\r\n      <line fill=\"none\" stroke=\"#000000\" strokeWidth=\"7\" x1=\"139\" y1=\"63.308\" x2=\"0\" y2=\"63.308\"></line>\r\n      <line fill=\"none\" stroke=\"#000000\" strokeWidth=\"6\" x1=\"30.646\" y1=\"92.308\" x2=\"2.189\" y2=\"65.308\"></line>\r\n      <line fill=\"none\" stroke=\"#000000\" strokeWidth=\"7\" x1=\"3\" y1=\"30.308\" x2=\"133\" y2=\"30.308\"></line>\r\n      <line fill=\"none\" stroke=\"#000000\" strokeWidth=\"6\" x1=\"99.296\" y1=\"2.308\" x2=\"130.953\" y2=\"28.608\"></line>\r\n      <path fill=\"none\" stroke=\"#FFFFFF\" strokeWidth=\"2\" d=\"M53,118.177c2.333,0,4.667,0,7,0\"></path>\r\n    </svg>\r\n  </OverlayTrigger>\r\n));\r\n\r\nconst centerSelectStyles = {\r\n  singleValue: styles => ({ ...styles, width: '100%', textAlign : \"center\" }),\r\n  option: styles => ({ ...styles, width: '100%', textAlign : \"center\" }),\r\n};\r\nconst HPlusHeader=React.memo(() => {\r\n  const dispatch=useDispatch();\r\n  const selectValue=useSelector(getHPlusOption);\r\n  return (\r\n    <ListHeader\r\n      label={\r\n        <AbbreviatingLabel abbr=\"Comp\" breakpoint=\"sm\">Components</AbbreviatingLabel>\r\n      }\r\n      inputLabel={\r\n        <label className=\"w-100\">\r\n          <Select\r\n            menuPosition=\"fixed\"\r\n            isSearchable={false}\r\n            options={Object.values(hPlusOptions)} \r\n            formatOptionLabel={createFormatOptionLabel(FormattedSupSub)} \r\n            styles={centerSelectStyles} \r\n            value={selectValue}\r\n            onChange={(option) => {\r\n              dispatch(hPlusOptionChanged(option));\r\n            }} \r\n          />\r\n        </label>\r\n      }\r\n      checkLabel={\r\n        <EquilSymbol/>\r\n      }\r\n    />\r\n  )\r\n});\r\n\r\n\r\nconst ComponentListHeader=React.memo(() => {\r\n  return (\r\n    <ListHeader\r\n      label={\r\n        <AbbreviatingLabel abbr=\"Comp\" breakpoint=\"sm\">Components</AbbreviatingLabel>\r\n      }\r\n      inputLabel={<label>Conc.</label>}\r\n    />\r\n  )\r\n});\r\n\r\nexport {HPlusHeader, ComponentListHeader};","import React from \"react\"\r\n\r\nconst PlusCircle=React.memo((props) => {\r\n  return (\r\n    <svg viewBox=\"0 0 16 16\" className=\"bi bi-plus-circle\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\r\n      <path fillRule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"></path>\r\n      <path fillRule=\"evenodd\" d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"></path>\r\n    </svg>\r\n  )\r\n});\r\n\r\nexport default PlusCircle;","import React from \"react\"\r\n\r\nconst PlusCircleFilled=React.memo((props) => {\r\n  return (\r\n    <svg viewBox=\"0 0 16 16\" className=\"bi bi-plus-circle-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" {...props}>\r\n      <path fillRule=\"evenodd\" d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z\"/>\r\n    </svg>\r\n  )\r\n});\r\n\r\nexport default PlusCircleFilled;","import React, { useEffect, useCallback, useLayoutEffect, useRef } from 'react';\r\n\r\nimport memoize from 'fast-memoize';\r\n\r\nimport useWindowSize from './utils/useWindowSize.js';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Collapse from 'react-bootstrap/Collapse';\r\n\r\nimport useModalStack from './utils/useModalStack.js';\r\nimport CalculateButton from './features/equilibria/CalculateButton';\r\nimport ReduxSuspense from './utils/ReduxSuspense';\r\nimport { getNewComponentDB } from './features/components/componentsSlice';\r\nimport { getNewSpeciesDB } from './features/species/speciesSlice';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport SpinnerComponentRow from './reusable_components/SpinnerRow';\r\n\r\nimport {componentDBDefaultParams, speciesDBDefaultParams} from \"./features/fetchDBs.js\"\r\n\r\nimport {ComponentListHeader, HPlusHeader} from \"./features/components/ComponentHeaders.js\";\r\n\r\nimport PlusCircle from './reusable_components/svgs/plus-circle.js';\r\nimport PlusCircleFilled from './reusable_components/svgs/plus-circle-filled.js';\r\nimport { getComponentsPresent } from './features/components/componentsSelectors.js';\r\n\r\n\r\nconst Equilibria = React.lazy(() => import('./features/equilibria/Equilibria.js'));\r\nconst ComponentList = React.lazy(() => import(\"./features/components/ComponentList.js\"));\r\nconst GasList = React.lazy(() => import('./features/species/gases/GasList'));\r\n\r\nconst HPlusRow = React.lazy(() => import('./features/components/HPlusRow.js'));\r\n\r\nconst ComponentSelectModal = React.lazy(() => import(\"./features/components/ComponentSelectModal.js\"))\r\nconst ComponentSelect = React.lazy(() => import(\"./features/components/ComponentSelect.js\"))\r\n\r\nconst SpeciesList = React.lazy(() => import('./features/species/SpeciesList.js'));\r\nconst TableauTable = React.lazy(() => import('./features/species/tableau/Tableau.js'));\r\n\r\nconst ScrollContainer=React.memo(React.forwardRef((props, ref) => {\r\n  return (\r\n    <div className=\"w-100\" style={{\"maxHeight\" : \"calc(100vh - \"+(props.headerHeight+props.footerHeight)+\"px)\", \"overflowY\" : \"auto\"}} ref={ref}>\r\n      <div style={{\"overflowX\" : \"hidden\"}}>\r\n        <Container fluid>\r\n          {props.children}\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  )\r\n}));\r\n\r\nconst usePreviousRef=(value) => {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n  return ref;\r\n}\r\n\r\nconst FreeQL=(props) => {\r\n  const dispatch=useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getNewComponentDB(componentDBDefaultParams));\r\n    dispatch(getNewSpeciesDB(speciesDBDefaultParams));\r\n  }, [dispatch])\r\n\r\n  const windowSize=useWindowSize();\r\n\r\n  const outerAdderHeight=0/*windowSize.height>=700 ? 54 : 0*/;\r\n  const buttonsHeight=70;\r\n\r\n  const [currentModal, openModal, closeModal]=useModalStack();\r\n\r\n  const createModalOpenCallback=useCallback(memoize((params) => {\r\n    return () => openModal(params);\r\n  }), [openModal]);\r\n  const createModalCloseCallback=useCallback(memoize((params) => {\r\n    return () => closeModal(params);\r\n  }), [closeModal]);\r\n\r\n  const componentSelect=useRef();\r\n  const numComponents=useSelector((state) => getComponentsPresent(state).size);\r\n  const previousNumComponentsRef=usePreviousRef(numComponents);\r\n\r\n  useLayoutEffect(() => { \r\n    if(componentSelect.current && previousNumComponentsRef.current<numComponents){\r\n      componentSelect.current.scrollIntoView(false);\r\n    }\r\n  }, [componentSelect, numComponents, previousNumComponentsRef]);\r\n\r\n  return(\r\n    <Form>\r\n      <Container style={{\"height\" : \"calc(100vh - \"+(props.headerHeight+buttonsHeight+props.footerHeight)+\"px)\"}}>\r\n        <Row>\r\n          <Col className=\"p-0\">\r\n            <ScrollContainer headerHeight={props.headerHeight} footerHeight={props.footerHeight+buttonsHeight+outerAdderHeight}>\r\n              <HPlusHeader />\r\n              <ReduxSuspense fallback={<SpinnerComponentRow/>} subscribedItems={[\"componentDB\"]}>\r\n                <HPlusRow />\r\n              </ReduxSuspense>\r\n              <ComponentListHeader />\r\n              <Collapse in={true}>\r\n                <div>\r\n                  <ReduxSuspense fallback=\"\" subscribedItems={[\"componentDB\"]}>\r\n                    <ComponentList />\r\n                  </ReduxSuspense>\r\n                  {\r\n                    windowSize.height<700 &&\r\n                    <ReduxSuspense fallback={<SpinnerComponentRow/>} subscribedItems={[\"componentDB\"]}>\r\n                      <Row>\r\n                        <Col>\r\n                          <div className=\"d-flex center-items w-100\" ref={componentSelect}>\r\n                            <div className=\"hover-switch\" style={{\"width\" : \"15%\"}} onClick={createModalOpenCallback(\"addComponents\")}>\r\n                              <PlusCircle className=\"w-100\"/>\r\n                              <PlusCircleFilled className=\"w-100\"/>\r\n                            </div>\r\n                            <ComponentSelectModal show={currentModal===\"addComponents\"} close={createModalCloseCallback(\"addComponents\")} windowHeight={windowSize.height}/>\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    </ReduxSuspense>\r\n                  }\r\n                  {\r\n                    windowSize.height>=700 &&\r\n                    <ReduxSuspense fallback={<SpinnerComponentRow/>} subscribedItems={[\"componentDB\"]}>\r\n                      <Row className=\"pt-2 pb-1\">\r\n                        <Col>\r\n                          <div ref={componentSelect}>\r\n                            <ComponentSelect/>\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    </ReduxSuspense>\r\n                  }\r\n                </div>\r\n              </Collapse>\r\n              <Collapse in={true}>\r\n                <div>\r\n                  <ReduxSuspense fallback=\"\" subscribedItems={[\"componentDB\", \"speciesDB\"]}>\r\n                    <GasList />\r\n                  </ReduxSuspense>\r\n                </div>  \r\n              </Collapse>\r\n            </ScrollContainer>\r\n          </Col>\r\n          <Col xs=\"4\" className=\"d-none d-md-flex p-0\">\r\n            <ScrollContainer headerHeight={props.headerHeight} footerHeight={props.footerHeight+buttonsHeight}>\r\n              <Row className=\"mt-4\">\r\n                <Col className=\"center-items\">\r\n                  <h5 className=\"text-muted text-center\">\r\n                    Species\r\n                  </h5>\r\n                </Col>\r\n              </Row>\r\n              <ReduxSuspense fallback={<SpinnerComponentRow/>} subscribedItems={[\"componentDB\", \"speciesDB\"]}>\r\n                <SpeciesList openTableauModal={createModalOpenCallback(\"tableau\")} />\r\n              </ReduxSuspense>\r\n            </ScrollContainer>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container>\r\n        <Form.Row className=\"py-3\">\r\n          <Col className=\"d-none d-md-block\">\r\n            <CalculateButton onClick={createModalOpenCallback(\"equilibria\")} className=\"w-100\" variant=\"primary\"/>\r\n          </Col>\r\n          <Col className=\"d-block d-md-none\">\r\n            <Button className=\"w-100\" variant=\"primary\" onClick={createModalOpenCallback(\"species\")}>Select Species</Button>\r\n          </Col>\r\n        </Form.Row>\r\n      </Container>\r\n      <Modal show={currentModal===\"species\"} onHide={createModalCloseCallback(\"species\")} backdrop=\"static\" scrollable>\r\n        <Modal.Header closeButton>\r\n          Species\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ReduxSuspense fallback={<SpinnerComponentRow/>} subscribedItems={[\"componentDB\", \"speciesDB\"]}>\r\n            <SpeciesList openTableauModal={createModalOpenCallback(\"tableau\")}/>\r\n          </ReduxSuspense>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={createModalCloseCallback(\"species\")}>\r\n            Close\r\n          </Button>\r\n          <CalculateButton onClick={createModalOpenCallback(\"equilibria\")} className=\"ml-auto\" variant=\"primary\" />\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal size=\"xl\" show={currentModal===\"tableau\"} onHide={createModalCloseCallback(\"tableau\")} backdrop=\"static\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Tableau</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ReduxSuspense fallback={<SpinnerComponentRow/>} subscribedItems={[\"componentDB\", \"speciesDB\"]}>\r\n            <TableauTable windowWidth={windowSize.width} />\r\n          </ReduxSuspense>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={createModalCloseCallback(\"tableau\")}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal size=\"xl\" show={currentModal===\"equilibria\"} onHide={createModalCloseCallback([\"equilibria\", \"species\"])} backdrop=\"static\" scrollable>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Equilibria</Modal.Title>\r\n        </Modal.Header>\r\n        <ReduxSuspense fallback={<><Modal.Body><SpinnerComponentRow/></Modal.Body><Modal.Footer></Modal.Footer></>} subscribedItems={[\"componentDB\", \"speciesDB\"]}>\r\n          <Equilibria Body={Modal.Body} Footer={Modal.Footer}/>\r\n        </ReduxSuspense>\r\n      </Modal>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FreeQL;"],"sourceRoot":""}