{"version":3,"sources":["../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/commonjs/Grid/defaultOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/commonjs/Grid/defaultCellRangeRenderer.js","../node_modules/react-virtualized/dist/commonjs/List/types.js","../node_modules/react-virtualized/dist/commonjs/List/index.js","../node_modules/react-virtualized/dist/commonjs/List/List.js","../node_modules/react-virtualized/dist/commonjs/Grid/index.js","../node_modules/react-virtualized/dist/commonjs/Grid/Grid.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/CellSizeAndPositionManager.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/maxElementSize.js","../node_modules/react-virtualized/dist/commonjs/utils/createCallbackMemoizer.js","../node_modules/react-virtualized/dist/commonjs/Grid/utils/updateScrollIndexHelper.js","../node_modules/react-virtualized/dist/commonjs/utils/requestAnimationTimeout.js","../node_modules/react-virtualized/dist/commonjs/utils/animationFrame.js","../node_modules/react-virtualized/dist/commonjs/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/react-virtualized/dist/commonjs/AutoSizer/index.js","../node_modules/react-virtualized/dist/commonjs/AutoSizer/AutoSizer.js","../node_modules/react-virtualized/dist/commonjs/vendor/detectElementResize.js","../node_modules/react-bootstrap/esm/InputGroup.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapRegExp.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/clsx/dist/clsx.m.js","../node_modules/react-virtualized/dist/commonjs/Grid/types.js","../node_modules/@babel/runtime/helpers/interopRequireWildcard.js"],"names":["_setPrototypeOf","o","p","module","exports","Object","setPrototypeOf","__proto__","_interopRequireDefault","require","defineProperty","value","_objectWithoutProperties2","_classCallCheck2","_createClass2","_defineProperty2","_CellSizeAndPositionManager","_maxElementSize","ScalingCellSizeAndPositionManager","_ref","_ref$maxScrollSize","maxScrollSize","getMaxElementSize","params","this","_cellSizeAndPositionManager","_maxScrollSize","key","getTotalSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","_ref2","containerSize","offset","totalSize","safeTotalSize","offsetPercentage","_getOffsetPercentage","Math","round","index","getSizeAndPositionOfCell","getSizeAndPositionOfLastMeasuredCell","min","_ref3","_ref3$align","align","currentOffset","targetIndex","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","cellCount","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanStartIndex","max","overscanStopIndex","SCROLL_DIRECTION_VERTICAL","SCROLL_DIRECTION_HORIZONTAL","SCROLL_DIRECTION_FORWARD","SCROLL_DIRECTION_BACKWARD","cellCache","cellRenderer","columnSizeAndPositionManager","columnStartIndex","columnStopIndex","deferredMeasurementCache","horizontalOffsetAdjustment","isScrolling","isScrollingOptOut","parent","rowSizeAndPositionManager","rowStartIndex","rowStopIndex","styleCache","verticalOffsetAdjustment","visibleColumnIndices","visibleRowIndices","renderedCells","areOffsetsAdjusted","canCacheStyle","rowIndex","rowDatum","columnIndex","columnDatum","isVisible","start","stop","concat","style","has","height","left","position","top","width","size","cellRendererParams","renderedCell","push","_interopRequireWildcard","bpfrpt_proptype_Scroll","bpfrpt_proptype_RenderedRows","bpfrpt_proptype_RowRenderer","bpfrpt_proptype_RowRendererParams","enumerable","get","_List","_types","_class","_temp","_extends2","_possibleConstructorReturn2","_getPrototypeOf3","_assertThisInitialized2","_inherits2","_Grid","React","_clsx","List","_React$PureComponent","_getPrototypeOf2","_this","_len","arguments","length","args","Array","_key","call","apply","rowRenderer","props","widthDescriptor","getOwnPropertyDescriptor","writable","ref","Grid","clientHeight","scrollHeight","scrollTop","onScroll","rowOverscanStartIndex","rowOverscanStopIndex","onRowsRendered","forceUpdate","alignment","getOffsetForCell","invalidateCellSizeAfterRender","measureAllCells","undefined","_ref6$columnIndex","_ref6$rowIndex","recomputeGridSize","scrollToPosition","scrollToCell","_this$props","className","noRowsRenderer","scrollToIndex","classNames","createElement","autoContainerWidth","_cellRenderer","columnWidth","columnCount","noContentRenderer","_onScroll","onSectionRendered","_onSectionRendered","_setRef","scrollToRow","PureComponent","autoHeight","estimatedRowSize","overscanIndicesGetter","accessibilityOverscanIndicesGetter","overscanRowCount","scrollToAlignment","_accessibilityOverscanIndicesGetter","_defaultCellRangeRenderer","_defaultOverscanIndicesGetter","bpfrpt_proptype_NoContentRenderer","bpfrpt_proptype_Alignment","bpfrpt_proptype_CellPosition","bpfrpt_proptype_CellSize","bpfrpt_proptype_OverscanIndicesGetter","bpfrpt_proptype_RenderedSection","bpfrpt_proptype_CellRendererParams","DEFAULT_SCROLLING_RESET_TIME_INTERVAL","_calculateSizeAndPositionDataAndUpdateScrollOffset","_ScalingCellSizeAndPositionManager","_createCallbackMemoizer","_updateScrollIndexHelper","_scrollbarSize","_reactLifecyclesCompat","_requestAnimationTimeout","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","_objectSpread","target","i","source","forEach","getOwnPropertyDescriptors","defineProperties","SCROLL_POSITION_CHANGE_REASONS","_disablePointerEventsTimeoutId","setState","needToResetStyleCache","_onGridRenderedMemoizer","callback","indices","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","_renderedColumnStartIndex","_renderedColumnStopIndex","_rowStartIndex","_rowStopIndex","_renderedRowStartIndex","_renderedRowStopIndex","_scrollingContainer","event","handleScrollEvent","cellSizeGetter","_wrapSizeGetter","estimatedCellSize","_getEstimatedColumnSize","rowCount","rowHeight","_getEstimatedRowSize","state","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollbarSize","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_ref$alignment","_ref$columnIndex","_ref$rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","prevState","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","prevProps","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","sizeJustIncreasedFromZero","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","updateScrollIndexCallback","cancelAnimationTimeout","_this$props6","containerProps","containerRole","containerStyle","id","role","tabIndex","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","_setScrollingContainerRef","maxWidth","maxHeight","overflow","pointerEvents","cellRangeRenderer","overscanColumnCount","getOffsetAdjustment","overscanColumnIndices","overscanRowIndices","hasFixedHeight","hasFixedWidth","scrollingResetTimeInterval","requestAnimationTimeout","_debounceScrollEndedCallback","_this3","_onScrollMemoizer","_this3$props","clientWidth","scrollWidth","hasOwnProperty","Boolean","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","nextProps","assign","maybeStateA","maybeStateB","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","updateScrollOffsetForScrollToIndex","estimatedColumnSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","polyfill","_default","CellSizeAndPositionManager","_cellSizeGetter","_cellCount","_estimatedCellSize","_lastMeasuredIndex","Error","lastMeasuredCellSizeAndPosition","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","idealOffset","datum","maxOffset","minOffset","_findNearestCell","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","window","chrome","requireAllKeys","cachedIndices","allInitialized","every","isArray","indexChanged","some","cachedValue","join","hasScrollToIndex","sizeHasChanged","bpfrpt_proptype_AnimationTimeoutId","_animationFrame","frame","caf","delay","Promise","resolve","then","Date","now","raf","timeout","win","request","self","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","_AutoSizer","_detectElementResize","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","offsetHeight","offsetWidth","_window","getComputedStyle","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","nonce","parentNode","ownerDocument","defaultView","HTMLElement","addResizeListener","_onResize","removeResizeListener","children","outerStyle","childParams","Component","hostWindow","global","attachEvent","document","requestFrame","fn","cancelFrame","resetTriggers","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollListener","e","indexOf","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","pfx","elm","animationName","toLowerCase","animationKeyframes","animationStyle","doc","elementStyle","getElementById","css","head","getElementsByTagName","type","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","innerHTML","addEventListener","__animationListener__","detachEvent","splice","removeEventListener","removeChild","InputGroupAppend","createWithBsPrefix","InputGroupPrepend","InputGroupText","InputGroup","forwardRef","bsPrefix","_ref$as","as","_objectWithoutPropertiesLoose","useBootstrapPrefix","_extends","displayName","InputGroupWithExtras","Text","Radio","Checkbox","Append","Prepend","instance","Constructor","TypeError","_defineProperties","descriptor","configurable","protoProps","staticProps","prototype","_typeof","assertThisInitialized","_getPrototypeOf","getPrototypeOf","subClass","superClass","create","constructor","obj","Symbol","iterator","Class","_cache","Map","Function","toString","set","Wrapper","construct","_inherits","_wrapRegExp","re","groups","BabelRegExp","_RegExp","RegExp","_super","_groups","WeakMap","flags","buildGroups","result","g","reduce","name","exec","str","replace","substitution","_","__esModule","toVal","mix","k","y","tmp","x","bpfrpt_proptype_VisibleCellRange","bpfrpt_proptype_OverscanIndices","bpfrpt_proptype_OverscanIndicesGetterParams","bpfrpt_proptype_ScrollbarPresenceChange","bpfrpt_proptype_CellSizeGetter","bpfrpt_proptype_CellRangeRenderer","bpfrpt_proptype_CellRangeRendererParams","bpfrpt_proptype_StyleCache","bpfrpt_proptype_CellCache","bpfrpt_proptype_CellRenderer","_getRequireWildcardCache","cache","newObj","hasPropertyDescriptor","desc"],"mappings":"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","file":"static/js/5.fb013d5f.chunk.js","sourcesContent":["function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _CellSizeAndPositionManager = _interopRequireDefault(require(\"./CellSizeAndPositionManager\"));\n\nvar _maxElementSize = require(\"./maxElementSize.js\");\n\nvar _types = require(\"../types\");\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? (0, _maxElementSize.getMaxElementSize)() : _ref$maxScrollSize,\n        params = (0, _objectWithoutProperties2[\"default\"])(_ref, [\"maxScrollSize\"]);\n    (0, _classCallCheck2[\"default\"])(this, ScalingCellSizeAndPositionManager);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeAndPositionManager\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_maxScrollSize\", void 0);\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new _CellSizeAndPositionManager[\"default\"](params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  (0, _createClass2[\"default\"])(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexports[\"default\"] = ScalingCellSizeAndPositionManager;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultOverscanIndicesGetter;\nexports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = void 0;\n\nvar _types = require(\"./types\");\n\nvar SCROLL_DIRECTION_BACKWARD = -1;\nexports.SCROLL_DIRECTION_BACKWARD = SCROLL_DIRECTION_BACKWARD;\nvar SCROLL_DIRECTION_FORWARD = 1;\nexports.SCROLL_DIRECTION_FORWARD = SCROLL_DIRECTION_FORWARD;\nvar SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexports.SCROLL_DIRECTION_HORIZONTAL = SCROLL_DIRECTION_HORIZONTAL;\nvar SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexports.SCROLL_DIRECTION_VERTICAL = SCROLL_DIRECTION_VERTICAL;\n\nfunction defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultCellRangeRenderer;\n\nvar _types = require(\"./types\");\n\n/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nfunction defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_Scroll = exports.bpfrpt_proptype_RenderedRows = exports.bpfrpt_proptype_RowRenderer = exports.bpfrpt_proptype_RowRendererParams = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_RowRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"index\": _propTypes[\"default\"].number.isRequired,\n  \"isScrolling\": _propTypes[\"default\"].bool.isRequired,\n  \"isVisible\": _propTypes[\"default\"].bool.isRequired,\n  \"key\": _propTypes[\"default\"].string.isRequired,\n  \"parent\": _propTypes[\"default\"].object.isRequired,\n  \"style\": _propTypes[\"default\"].object.isRequired\n};\nexports.bpfrpt_proptype_RowRendererParams = bpfrpt_proptype_RowRendererParams;\nvar bpfrpt_proptype_RowRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_RowRenderer = bpfrpt_proptype_RowRenderer;\nvar bpfrpt_proptype_RenderedRows = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"overscanStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"startIndex\": _propTypes[\"default\"].number.isRequired,\n  \"stopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_RenderedRows = bpfrpt_proptype_RenderedRows;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": _propTypes[\"default\"].number.isRequired,\n  \"scrollHeight\": _propTypes[\"default\"].number.isRequired,\n  \"scrollTop\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_Scroll = bpfrpt_proptype_Scroll;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _List[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"List\", {\n  enumerable: true,\n  get: function get() {\n    return _List[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_RowRendererParams\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_RowRendererParams;\n  }\n});\n\nvar _List = _interopRequireDefault(require(\"./List\"));\n\nvar _types = require(\"./types\");","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _Grid = _interopRequireWildcard(require(\"../Grid\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _types = require(\"./types\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3[\"default\"])(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"Grid\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = (0, _clsx[\"default\"])('ReactVirtualized__List', className);\n      return React.createElement(_Grid[\"default\"], (0, _extends2[\"default\"])({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n  return List;\n}(React.PureComponent), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": _propTypes[\"default\"].string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": _propTypes[\"default\"].string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": _propTypes[\"default\"].number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": _propTypes[\"default\"].number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof _Grid.bpfrpt_proptype_NoContentRenderer === \"function\" ? _Grid.bpfrpt_proptype_NoContentRenderer.isRequired ? _Grid.bpfrpt_proptype_NoContentRenderer.isRequired : _Grid.bpfrpt_proptype_NoContentRenderer : _propTypes[\"default\"].shape(_Grid.bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": _propTypes[\"default\"].func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof _Grid.bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? _Grid.bpfrpt_proptype_OverscanIndicesGetter.isRequired ? _Grid.bpfrpt_proptype_OverscanIndicesGetter.isRequired : _Grid.bpfrpt_proptype_OverscanIndicesGetter : _propTypes[\"default\"].shape(_Grid.bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof _Grid.bpfrpt_proptype_CellSize === \"function\" ? _Grid.bpfrpt_proptype_CellSize.isRequired ? _Grid.bpfrpt_proptype_CellSize.isRequired : _Grid.bpfrpt_proptype_CellSize : _propTypes[\"default\"].shape(_Grid.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof _types.bpfrpt_proptype_RowRenderer === \"function\" ? _types.bpfrpt_proptype_RowRenderer.isRequired ? _types.bpfrpt_proptype_RowRenderer.isRequired : _types.bpfrpt_proptype_RowRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof _Grid.bpfrpt_proptype_Alignment === \"function\" ? _Grid.bpfrpt_proptype_Alignment.isRequired ? _Grid.bpfrpt_proptype_Alignment.isRequired : _Grid.bpfrpt_proptype_Alignment : _propTypes[\"default\"].shape(_Grid.bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": _propTypes[\"default\"].number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": _propTypes[\"default\"].number,\n\n  /** Optional inline style */\n  \"style\": _propTypes[\"default\"].object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": _propTypes[\"default\"].number,\n\n  /** Width of list */\n  \"width\": _propTypes[\"default\"].number.isRequired\n}), _temp);\nexports[\"default\"] = List;\n(0, _defineProperty2[\"default\"])(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: _Grid.accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _Grid[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"Grid\", {\n  enumerable: true,\n  get: function get() {\n    return _Grid[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"accessibilityOverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _accessibilityOverscanIndicesGetter[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"defaultCellRangeRenderer\", {\n  enumerable: true,\n  get: function get() {\n    return _defaultCellRangeRenderer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"defaultOverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _defaultOverscanIndicesGetter[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_NoContentRenderer\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_NoContentRenderer;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_Alignment\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_Alignment;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellPosition\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellPosition;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellSize\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellSize;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_OverscanIndicesGetter\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_OverscanIndicesGetter;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_RenderedSection\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_RenderedSection;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_CellRendererParams\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_CellRendererParams;\n  }\n});\nObject.defineProperty(exports, \"bpfrpt_proptype_Scroll\", {\n  enumerable: true,\n  get: function get() {\n    return _types.bpfrpt_proptype_Scroll;\n  }\n});\n\nvar _Grid = _interopRequireDefault(require(\"./Grid\"));\n\nvar _accessibilityOverscanIndicesGetter = _interopRequireDefault(require(\"./accessibilityOverscanIndicesGetter\"));\n\nvar _defaultCellRangeRenderer = _interopRequireDefault(require(\"./defaultCellRangeRenderer\"));\n\nvar _defaultOverscanIndicesGetter = _interopRequireDefault(require(\"./defaultOverscanIndicesGetter\"));\n\nvar _types = require(\"./types\");","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.DEFAULT_SCROLLING_RESET_TIME_INTERVAL = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\n\nvar _calculateSizeAndPositionDataAndUpdateScrollOffset = _interopRequireDefault(require(\"./utils/calculateSizeAndPositionDataAndUpdateScrollOffset\"));\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./utils/ScalingCellSizeAndPositionManager\"));\n\nvar _createCallbackMemoizer = _interopRequireDefault(require(\"../utils/createCallbackMemoizer\"));\n\nvar _defaultOverscanIndicesGetter = _interopRequireWildcard(require(\"./defaultOverscanIndicesGetter\"));\n\nvar _updateScrollIndexHelper = _interopRequireDefault(require(\"./utils/updateScrollIndexHelper\"));\n\nvar _defaultCellRangeRenderer = _interopRequireDefault(require(\"./defaultCellRangeRenderer\"));\n\nvar _scrollbarSize = _interopRequireDefault(require(\"dom-helpers/scrollbarSize\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _requestAnimationTimeout = require(\"../utils/requestAnimationTimeout\");\n\nvar _types = require(\"./types\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nvar DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nexports.DEFAULT_SCROLLING_RESET_TIME_INTERVAL = DEFAULT_SCROLLING_RESET_TIME_INTERVAL;\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  (0, _inherits2[\"default\"])(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, Grid);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Grid).call(this, props));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onGridRenderedMemoizer\", (0, _createCallbackMemoizer[\"default\"])());\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScrollMemoizer\", (0, _createCallbackMemoizer[\"default\"])(false));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateColumnIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_deferredInvalidateRowIndex\", null);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_recomputeScrollLeftFlag\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_recomputeScrollTopFlag\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_horizontalScrollBarSize\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_verticalScrollBarSize\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_scrollbarPresenceChanged\", false);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_scrollingContainer\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_childrenToDisplay\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_columnStartIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_columnStopIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_rowStartIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_rowStopIndex\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedColumnStartIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedColumnStopIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedRowStartIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_renderedRowStopIndex\", 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_initialScrollTop\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_initialScrollLeft\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_disablePointerEventsTimeoutId\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_styleCache\", {});\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_cellCache\", {});\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n    var columnSizeAndPositionManager = new _ScalingCellSizeAndPositionManager[\"default\"]({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new _ScalingCellSizeAndPositionManager[\"default\"]({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  (0, _createClass2[\"default\"])(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        (0, _updateScrollIndexHelper[\"default\"])({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        (0, _updateScrollIndexHelper[\"default\"])({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        (0, _requestAnimationTimeout.cancelAnimationTimeout)(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", (0, _extends2[\"default\"])({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: (0, _clsx[\"default\"])('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        (0, _requestAnimationTimeout.cancelAnimationTimeout)(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = (0, _requestAnimationTimeout.requestAnimationTimeout)(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      (0, _calculateSizeAndPositionDataAndUpdateScrollOffset[\"default\"])({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      (0, _calculateSizeAndPositionDataAndUpdateScrollOffset[\"default\"])({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? _defaultOverscanIndicesGetter.SCROLL_DIRECTION_FORWARD : _defaultOverscanIndicesGetter.SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n  return Grid;\n}(React.PureComponent), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": _propTypes[\"default\"].string.isRequired,\n  \"aria-readonly\": _propTypes[\"default\"].bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": _propTypes[\"default\"].bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof _types.bpfrpt_proptype_CellRenderer === \"function\" ? _types.bpfrpt_proptype_CellRenderer.isRequired ? _types.bpfrpt_proptype_CellRenderer.isRequired : _types.bpfrpt_proptype_CellRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof _types.bpfrpt_proptype_CellRangeRenderer === \"function\" ? _types.bpfrpt_proptype_CellRangeRenderer.isRequired ? _types.bpfrpt_proptype_CellRangeRenderer.isRequired : _types.bpfrpt_proptype_CellRangeRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": _propTypes[\"default\"].string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof _types.bpfrpt_proptype_CellSize === \"function\" ? _types.bpfrpt_proptype_CellSize.isRequired ? _types.bpfrpt_proptype_CellSize.isRequired : _types.bpfrpt_proptype_CellSize : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": _propTypes[\"default\"].object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": _propTypes[\"default\"].string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": _propTypes[\"default\"].object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": _propTypes[\"default\"].object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": _propTypes[\"default\"].number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": _propTypes[\"default\"].number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": _propTypes[\"default\"].func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": _propTypes[\"default\"].number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": _propTypes[\"default\"].string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": _propTypes[\"default\"].bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof _types.bpfrpt_proptype_NoContentRenderer === \"function\" ? _types.bpfrpt_proptype_NoContentRenderer.isRequired ? _types.bpfrpt_proptype_NoContentRenderer.isRequired : _types.bpfrpt_proptype_NoContentRenderer : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": _propTypes[\"default\"].func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": _propTypes[\"default\"].number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof _types.bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? _types.bpfrpt_proptype_OverscanIndicesGetter.isRequired ? _types.bpfrpt_proptype_OverscanIndicesGetter.isRequired : _types.bpfrpt_proptype_OverscanIndicesGetter : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": _propTypes[\"default\"].string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof _types.bpfrpt_proptype_CellSize === \"function\" ? _types.bpfrpt_proptype_CellSize.isRequired ? _types.bpfrpt_proptype_CellSize.isRequired : _types.bpfrpt_proptype_CellSize : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": _propTypes[\"default\"].number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": _propTypes[\"default\"].number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": _propTypes[\"default\"].number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof _types.bpfrpt_proptype_Alignment === \"function\" ? _types.bpfrpt_proptype_Alignment.isRequired ? _types.bpfrpt_proptype_Alignment.isRequired : _types.bpfrpt_proptype_Alignment : _propTypes[\"default\"].shape(_types.bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": _propTypes[\"default\"].number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": _propTypes[\"default\"].number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": _propTypes[\"default\"].number.isRequired,\n\n  /** Optional inline style */\n  \"style\": _propTypes[\"default\"].object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": _propTypes[\"default\"].number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": _propTypes[\"default\"].number.isRequired\n}), _temp);\n(0, _defineProperty2[\"default\"])(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: _defaultCellRangeRenderer[\"default\"],\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: _scrollbarSize[\"default\"],\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: _defaultOverscanIndicesGetter[\"default\"],\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n(0, _reactLifecyclesCompat.polyfill)(Grid);\nvar _default = Grid;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = calculateSizeAndPositionDataAndUpdateScrollOffset;\n\n/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nfunction calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _types = require(\"../types\");\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n    (0, _classCallCheck2[\"default\"])(this, CellSizeAndPositionManager);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeAndPositionData\", {});\n    (0, _defineProperty2[\"default\"])(this, \"_lastMeasuredIndex\", -1);\n    (0, _defineProperty2[\"default\"])(this, \"_lastBatchedIndex\", -1);\n    (0, _defineProperty2[\"default\"])(this, \"_cellCount\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_cellSizeGetter\", void 0);\n    (0, _defineProperty2[\"default\"])(this, \"_estimatedCellSize\", void 0);\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  (0, _createClass2[\"default\"])(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n  return CellSizeAndPositionManager;\n}();\n\nexports[\"default\"] = CellSizeAndPositionManager;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMaxElementSize = void 0;\nvar DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nvar getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};\n\nexports.getMaxElementSize = getMaxElementSize;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createCallbackMemoizer;\n\n/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nfunction createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = updateScrollIndexHelper;\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./ScalingCellSizeAndPositionManager.js\"));\n\nvar _types = require(\"../types\");\n\nfunction updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_AnimationTimeoutId = exports.requestAnimationTimeout = exports.cancelAnimationTimeout = void 0;\n\nvar _animationFrame = require(\"./animationFrame\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_AnimationTimeoutId = bpfrpt_proptype_AnimationTimeoutId;\n\nvar cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return (0, _animationFrame.caf)(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\n\nexports.cancelAnimationTimeout = cancelAnimationTimeout;\n\nvar requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = (0, _animationFrame.raf)(timeout);\n    }\n  };\n\n  var frame = {\n    id: (0, _animationFrame.raf)(timeout)\n  };\n  return frame;\n};\n\nexports.requestAnimationTimeout = requestAnimationTimeout;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.caf = exports.raf = void 0;\n// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nvar raf = request;\nexports.raf = raf;\nvar caf = cancel;\nexports.caf = caf;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = defaultOverscanIndicesGetter;\nexports.SCROLL_DIRECTION_VERTICAL = exports.SCROLL_DIRECTION_HORIZONTAL = exports.SCROLL_DIRECTION_FORWARD = exports.SCROLL_DIRECTION_BACKWARD = void 0;\n\nvar _types = require(\"./types\");\n\nvar SCROLL_DIRECTION_BACKWARD = -1;\nexports.SCROLL_DIRECTION_BACKWARD = SCROLL_DIRECTION_BACKWARD;\nvar SCROLL_DIRECTION_FORWARD = 1;\nexports.SCROLL_DIRECTION_FORWARD = SCROLL_DIRECTION_FORWARD;\nvar SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexports.SCROLL_DIRECTION_HORIZONTAL = SCROLL_DIRECTION_HORIZONTAL;\nvar SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexports.SCROLL_DIRECTION_VERTICAL = SCROLL_DIRECTION_VERTICAL;\n\nfunction defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _AutoSizer[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"AutoSizer\", {\n  enumerable: true,\n  get: function get() {\n    return _AutoSizer[\"default\"];\n  }\n});\n\nvar _AutoSizer = _interopRequireDefault(require(\"./AutoSizer\"));","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _detectElementResize = _interopRequireDefault(require(\"../vendor/detectElementResize\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2[\"default\"])(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3[\"default\"])(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_parentNode\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_autoSizer\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_window\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_detectElementResize\", void 0);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = (0, _detectElementResize[\"default\"])(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n  return AutoSizer;\n}(React.Component), (0, _defineProperty2[\"default\"])(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": _propTypes[\"default\"].func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": _propTypes[\"default\"].string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": _propTypes[\"default\"].number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": _propTypes[\"default\"].number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": _propTypes[\"default\"].bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": _propTypes[\"default\"].string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": _propTypes[\"default\"].func.isRequired,\n\n  /** Optional inline style */\n  \"style\": _propTypes[\"default\"].object\n}), _temp);\nexports[\"default\"] = AutoSizer;\n(0, _defineProperty2[\"default\"])(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = createDetectElementResize;\n\n/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nfunction createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        element.__resizeTriggers__.innerHTML = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar InputGroupAppend = createWithBsPrefix('input-group-append');\nvar InputGroupPrepend = createWithBsPrefix('input-group-prepend');\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupAppend} Append\n * @property {InputGroupPrepend} Prepend\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox,\n  Append: InputGroupAppend,\n  Prepend: InputGroupPrepend\n});\n\nexport default InputGroupWithExtras;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeFunction from \"./isNativeFunction\";\nimport construct from \"./construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport wrapNativeSuper from \"./wrapNativeSuper\";\nimport getPrototypeOf from \"./getPrototypeOf\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nimport inherits from \"./inherits\";\nexport default function _wrapRegExp(re, groups) {\n  _wrapRegExp = function _wrapRegExp(re, groups) {\n    return new BabelRegExp(re, undefined, groups);\n  };\n\n  var _RegExp = wrapNativeSuper(RegExp);\n\n  var _super = RegExp.prototype;\n\n  var _groups = new WeakMap();\n\n  function BabelRegExp(re, flags, groups) {\n    var _this = _RegExp.call(this, re, flags);\n\n    _groups.set(_this, groups || _groups.get(re));\n\n    return _this;\n  }\n\n  inherits(BabelRegExp, _RegExp);\n\n  BabelRegExp.prototype.exec = function (str) {\n    var result = _super.exec.call(this, str);\n\n    if (result) result.groups = buildGroups(result, this);\n    return result;\n  };\n\n  BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {\n    if (typeof substitution === \"string\") {\n      var groups = _groups.get(this);\n\n      return _super[Symbol.replace].call(this, str, substitution.replace(/\\$<([^>]+)>/g, function (_, name) {\n        return \"$\" + groups[name];\n      }));\n    } else if (typeof substitution === \"function\") {\n      var _this = this;\n\n      return _super[Symbol.replace].call(this, str, function () {\n        var args = [];\n        args.push.apply(args, arguments);\n\n        if (_typeof(args[args.length - 1]) !== \"object\") {\n          args.push(buildGroups(args, _this));\n        }\n\n        return substitution.apply(this, args);\n      });\n    } else {\n      return _super[Symbol.replace].call(this, str, substitution);\n    }\n  };\n\n  function buildGroups(result, re) {\n    var g = _groups.get(re);\n\n    return Object.keys(g).reduce(function (groups, name) {\n      groups[name] = result[g[name]];\n      return groups;\n    }, Object.create(null));\n  }\n\n  return _wrapRegExp.apply(this, arguments);\n}","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bpfrpt_proptype_VisibleCellRange = exports.bpfrpt_proptype_Alignment = exports.bpfrpt_proptype_OverscanIndicesGetter = exports.bpfrpt_proptype_OverscanIndices = exports.bpfrpt_proptype_OverscanIndicesGetterParams = exports.bpfrpt_proptype_RenderedSection = exports.bpfrpt_proptype_ScrollbarPresenceChange = exports.bpfrpt_proptype_Scroll = exports.bpfrpt_proptype_NoContentRenderer = exports.bpfrpt_proptype_CellSize = exports.bpfrpt_proptype_CellSizeGetter = exports.bpfrpt_proptype_CellRangeRenderer = exports.bpfrpt_proptype_CellRangeRendererParams = exports.bpfrpt_proptype_StyleCache = exports.bpfrpt_proptype_CellCache = exports.bpfrpt_proptype_CellRenderer = exports.bpfrpt_proptype_CellRendererParams = exports.bpfrpt_proptype_CellPosition = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _ScalingCellSizeAndPositionManager = _interopRequireDefault(require(\"./utils/ScalingCellSizeAndPositionManager\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar bpfrpt_proptype_CellPosition = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_CellPosition = bpfrpt_proptype_CellPosition;\nvar bpfrpt_proptype_CellRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"columnIndex\": _propTypes[\"default\"].number.isRequired,\n  \"isScrolling\": _propTypes[\"default\"].bool.isRequired,\n  \"isVisible\": _propTypes[\"default\"].bool.isRequired,\n  \"key\": _propTypes[\"default\"].string.isRequired,\n  \"parent\": _propTypes[\"default\"].object.isRequired,\n  \"rowIndex\": _propTypes[\"default\"].number.isRequired,\n  \"style\": _propTypes[\"default\"].object.isRequired\n};\nexports.bpfrpt_proptype_CellRendererParams = bpfrpt_proptype_CellRendererParams;\nvar bpfrpt_proptype_CellRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellRenderer = bpfrpt_proptype_CellRenderer;\nvar bpfrpt_proptype_CellCache = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].objectOf(_propTypes[\"default\"].node.isRequired);\nexports.bpfrpt_proptype_CellCache = bpfrpt_proptype_CellCache;\nvar bpfrpt_proptype_StyleCache = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].objectOf(_propTypes[\"default\"].object.isRequired);\nexports.bpfrpt_proptype_StyleCache = bpfrpt_proptype_StyleCache;\nvar bpfrpt_proptype_CellRangeRendererParams = process.env.NODE_ENV === 'production' ? null : {\n  \"cellCache\": _propTypes[\"default\"].objectOf(_propTypes[\"default\"].node.isRequired).isRequired,\n  \"cellRenderer\": _propTypes[\"default\"].func.isRequired,\n  \"columnSizeAndPositionManager\": function columnSizeAndPositionManager() {\n    return (typeof _ScalingCellSizeAndPositionManager[\"default\"] === \"function\" ? _propTypes[\"default\"].instanceOf(_ScalingCellSizeAndPositionManager[\"default\"]).isRequired : _propTypes[\"default\"].any.isRequired).apply(this, arguments);\n  },\n  \"columnStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"deferredMeasurementCache\": _propTypes[\"default\"].object,\n  \"horizontalOffsetAdjustment\": _propTypes[\"default\"].number.isRequired,\n  \"isScrolling\": _propTypes[\"default\"].bool.isRequired,\n  \"isScrollingOptOut\": _propTypes[\"default\"].bool.isRequired,\n  \"parent\": _propTypes[\"default\"].object.isRequired,\n  \"rowSizeAndPositionManager\": function rowSizeAndPositionManager() {\n    return (typeof _ScalingCellSizeAndPositionManager[\"default\"] === \"function\" ? _propTypes[\"default\"].instanceOf(_ScalingCellSizeAndPositionManager[\"default\"]).isRequired : _propTypes[\"default\"].any.isRequired).apply(this, arguments);\n  },\n  \"rowStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"scrollLeft\": _propTypes[\"default\"].number.isRequired,\n  \"scrollTop\": _propTypes[\"default\"].number.isRequired,\n  \"styleCache\": _propTypes[\"default\"].objectOf(_propTypes[\"default\"].object.isRequired).isRequired,\n  \"verticalOffsetAdjustment\": _propTypes[\"default\"].number.isRequired,\n  \"visibleColumnIndices\": _propTypes[\"default\"].object.isRequired,\n  \"visibleRowIndices\": _propTypes[\"default\"].object.isRequired\n};\nexports.bpfrpt_proptype_CellRangeRendererParams = bpfrpt_proptype_CellRangeRendererParams;\nvar bpfrpt_proptype_CellRangeRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellRangeRenderer = bpfrpt_proptype_CellRangeRenderer;\nvar bpfrpt_proptype_CellSizeGetter = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_CellSizeGetter = bpfrpt_proptype_CellSizeGetter;\nvar bpfrpt_proptype_CellSize = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].number]);\nexports.bpfrpt_proptype_CellSize = bpfrpt_proptype_CellSize;\nvar bpfrpt_proptype_NoContentRenderer = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_NoContentRenderer = bpfrpt_proptype_NoContentRenderer;\nvar bpfrpt_proptype_Scroll = process.env.NODE_ENV === 'production' ? null : {\n  \"clientHeight\": _propTypes[\"default\"].number.isRequired,\n  \"clientWidth\": _propTypes[\"default\"].number.isRequired,\n  \"scrollHeight\": _propTypes[\"default\"].number.isRequired,\n  \"scrollLeft\": _propTypes[\"default\"].number.isRequired,\n  \"scrollTop\": _propTypes[\"default\"].number.isRequired,\n  \"scrollWidth\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_Scroll = bpfrpt_proptype_Scroll;\nvar bpfrpt_proptype_ScrollbarPresenceChange = process.env.NODE_ENV === 'production' ? null : {\n  \"horizontal\": _propTypes[\"default\"].bool.isRequired,\n  \"vertical\": _propTypes[\"default\"].bool.isRequired,\n  \"size\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_ScrollbarPresenceChange = bpfrpt_proptype_ScrollbarPresenceChange;\nvar bpfrpt_proptype_RenderedSection = process.env.NODE_ENV === 'production' ? null : {\n  \"columnOverscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnOverscanStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"columnStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowOverscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowOverscanStopIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"rowStopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_RenderedSection = bpfrpt_proptype_RenderedSection;\nvar bpfrpt_proptype_OverscanIndicesGetterParams = process.env.NODE_ENV === 'production' ? null : {\n  // One of SCROLL_DIRECTION_HORIZONTAL or SCROLL_DIRECTION_VERTICAL\n  \"direction\": _propTypes[\"default\"].oneOf([\"horizontal\", \"vertical\"]).isRequired,\n  // One of SCROLL_DIRECTION_BACKWARD or SCROLL_DIRECTION_FORWARD\n  \"scrollDirection\": _propTypes[\"default\"].oneOf([-1, 1]).isRequired,\n  // Number of rows or columns in the current axis\n  \"cellCount\": _propTypes[\"default\"].number.isRequired,\n  // Maximum number of cells to over-render in either direction\n  \"overscanCellsCount\": _propTypes[\"default\"].number.isRequired,\n  // Begin of range of visible cells\n  \"startIndex\": _propTypes[\"default\"].number.isRequired,\n  // End of range of visible cells\n  \"stopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_OverscanIndicesGetterParams = bpfrpt_proptype_OverscanIndicesGetterParams;\nvar bpfrpt_proptype_OverscanIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"overscanStartIndex\": _propTypes[\"default\"].number.isRequired,\n  \"overscanStopIndex\": _propTypes[\"default\"].number.isRequired\n};\nexports.bpfrpt_proptype_OverscanIndices = bpfrpt_proptype_OverscanIndices;\nvar bpfrpt_proptype_OverscanIndicesGetter = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].func;\nexports.bpfrpt_proptype_OverscanIndicesGetter = bpfrpt_proptype_OverscanIndicesGetter;\nvar bpfrpt_proptype_Alignment = process.env.NODE_ENV === 'production' ? null : _propTypes[\"default\"].oneOf([\"auto\", \"end\", \"start\", \"center\"]);\nexports.bpfrpt_proptype_Alignment = bpfrpt_proptype_Alignment;\nvar bpfrpt_proptype_VisibleCellRange = process.env.NODE_ENV === 'production' ? null : {\n  \"start\": _propTypes[\"default\"].number,\n  \"stop\": _propTypes[\"default\"].number\n};\nexports.bpfrpt_proptype_VisibleCellRange = bpfrpt_proptype_VisibleCellRange;","var _typeof = require(\"@babel/runtime/helpers/typeof\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard;"],"sourceRoot":""}