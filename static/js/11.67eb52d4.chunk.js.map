{"version":3,"sources":["utils/useResizeObserver.js","component_groups/Tableau.js","formatting/FormattedChemicalCompound.js","utils/ref-utils.js","utils/ConstantValidationTextInput.js"],"names":["useResizeObserver","callback","resizeObserverRef","useRef","getResizeObserverRef","useCallback","current","ResizeObserver","entries","boundingRect","target","getBoundingClientRect","width","height","useCallbackRef","node","observe","unobserve","LogKEditor","props","logKChanges","setLogKChanges","specie","defaultVal","useState","get","newLogKVal","setNewLogVal","editing","setEditing","editBoxVal","setEditBoxVal","editBoxRef","showDefault","undefined","useEffect","delete","set","focus","submitEditVal","e","preventDefault","is_number","Number","Form","onSubmit","ConstantValidationTextInput","validation","input","match","onChange","value","onBlur","Control","ref","style","onKeyDown","keyCode","stopPropagation","className","toFixed","replace","onClick","viewBox","fill","xmlns","fillRule","d","TableauTable","React","memo","componentsPresent","componentsInputState","speciesHere","speciesDB","componentsDB","windowWidth","setTypedLogKChanges","type","newMap","update","$set","topLeftWidth","setTopLeftWidth","topLeftHeight","setTopLeftHeight","logKWidth","setLogKWidth","lg","headerColumn","useMemo","Header","Footer","id","accessor","name","FormattedChemicalCompound","dataColumns","Immutable","waterValue","map","component","components","getIn","logKColumn","logK","bind","columns","unshift","push","data","aqs","species","solids","gases","flatten","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","topLeftRef","logKRef","autoHide","autoHeight","autoHeightMax","renderTrackHorizontal","finalStyle","$merge","right","bottom","left","borderRadius","marginLeft","marginRight","renderTrackVertical","top","marginTop","Table","striped","bordered","hover","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","group","getFooterGroupProps","getFooterProps","regex","Array","from","children","matchAll","chargeValue","groups","ChargeValue1","ChargeValue2","reduce","prev","curr","chargeSign","ChargeSign1","ChargeSign2","terminator","EndMatcher1","EndMatcher2","EndMatcher3","EndMatcher4","key","substring","index","WordMatcher","SubMatcher","onUpdate","cleanupOld","onNull","setRef","mergeRefs","refs","filteredRefs","filter","Boolean","length","inst","child","Children","only","setValue","selection","setSelection","validationMisfired","setValidationMisfire","selectRef","selectionStart","selectionEnd","cloneElement","onSelect","defaultProps"],"mappings":"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","file":"static/js/11.67eb52d4.chunk.js","sourcesContent":["import { useRef, useCallback } from \"react\";\r\nimport { useCallbackRef } from \"./ref-utils\";\r\n\r\nconst useResizeObserver=(callback) => {\r\n  const resizeObserverRef=useRef(null);\r\n  const getResizeObserverRef=useCallback(() => {\r\n    if(!resizeObserverRef.current){\r\n      resizeObserverRef.current=new ResizeObserver((entries) => {\r\n        const boundingRect=entries[0].target.getBoundingClientRect();\r\n        callback({width: boundingRect.width, height: boundingRect.height})\r\n      })\r\n    }\r\n    return resizeObserverRef;\r\n  }, [resizeObserverRef, callback])\r\n  const nodeRef=useCallbackRef(\r\n    useCallback((node) => {\r\n      getResizeObserverRef().current.observe(node)\r\n    },[getResizeObserverRef]),\r\n    useCallback((node) => {\r\n      getResizeObserverRef().current.unobserve(node)\r\n    },[getResizeObserverRef])\r\n  )\r\n  return nodeRef;\r\n}\r\n\r\nexport default useResizeObserver;","import React, { useState, useRef, useEffect, useMemo, useCallback } from 'react';\r\n\r\nimport ConstantValidationTextInput from \"../utils/ConstantValidationTextInput\";\r\nimport FormattedChemicalCompound from \"../formatting/FormattedChemicalCompound\";\r\nimport useResizeObserver from '../utils/useResizeObserver.js';\r\n\r\n\r\nimport * as Immutable from \"immutable\";\r\nimport update from \"immutability-helper\";\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport { useTable } from 'react-table';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport is_number from 'is-number';\r\n\r\nconst LogKEditor=(props) => {\r\n  const { logKChanges, setLogKChanges, specie, defaultVal } = props;\r\n  const [newLogKVal, setNewLogVal] = useState(logKChanges.get(specie));\r\n  const [editing, setEditing] = useState(false);\r\n  const [editBoxVal, setEditBoxVal] = useState(\"\");\r\n  const editBoxRef=useRef(null);\r\n  const showDefault = newLogKVal===undefined;\r\n  useEffect(() => {\r\n    if(showDefault){\r\n      setLogKChanges(logKChanges.delete(specie));\r\n    } else {\r\n      setLogKChanges(logKChanges.set(specie, newLogKVal));\r\n    }\r\n  }, [logKChanges, setLogKChanges, newLogKVal, showDefault, specie]);\r\n  useEffect(() => {\r\n    if(editing){\r\n      editBoxRef.current.focus();\r\n    }\r\n  }, [editing, editBoxRef]);\r\n\r\n  const beginEditVal=(e) => {\r\n    setEditing(true);\r\n  }\r\n  const submitEditVal=(e) => {\r\n    e.preventDefault();\r\n    setEditing(false);\r\n    setEditBoxVal(\"\");\r\n    setNewLogVal(is_number(editBoxVal) ? Number(editBoxVal) : undefined);\r\n  }\r\n  const cancelEditVal=(e) => {\r\n    if(e.keyCode === 27) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      setEditing(false);\r\n      setEditBoxVal(\"\");\r\n    }\r\n  }\r\n  const onChangeEditBox=(e) => {\r\n    setEditBoxVal(e.target.value);\r\n  }\r\n  const resetVal=(e) => {\r\n    setNewLogVal(undefined);\r\n  }\r\n  if(editing){\r\n    return (\r\n      <Form onSubmit={submitEditVal}>\r\n        <ConstantValidationTextInput validation={(input) => input.match(/^-?\\d*\\.?\\d*$/)} onChange={onChangeEditBox} onBlur={submitEditVal}>\r\n          <Form.Control ref={editBoxRef} style={{\"width\": \"80px\"}} onKeyDown={cancelEditVal}/>\r\n        </ConstantValidationTextInput>\r\n      </Form>\r\n    )\r\n  } else if(showDefault) {\r\n    return (\r\n      <span className=\"text-nowrap\">\r\n        {defaultVal.toFixed(3).replace(/\\.000$|0{0,2}$/, \"\")}\r\n        <svg onClick={beginEditVal} className=\"logK-editor\" style={{\"marginTop\": \"-0.2rem\"}} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path fillRule=\"evenodd\" d=\"M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z\"></path>\r\n          <path fillRule=\"evenodd\" d=\"M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z\"></path>\r\n        </svg>\r\n      </span>\r\n    )\r\n  } else {\r\n    return (\r\n      <span className=\"text-nowrap\">\r\n        {newLogKVal.toFixed(3).replace(/\\.000$|0{0,2}$/, \"\")}\r\n        <svg onClick={resetVal} className=\"logK-reset\" style={{\"marginTop\" : \"-0.12rem\"}} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path fillRule=\"evenodd\" d=\"M12.83 6.706a5 5 0 0 0-7.103-3.16.5.5 0 1 1-.454-.892A6 6 0 1 1 2.545 5.5a.5.5 0 1 1 .91.417 5 5 0 1 0 9.375.789z\"></path>\r\n          <path fillRule=\"evenodd\" d=\"M7.854.146a.5.5 0 0 0-.708 0l-2.5 2.5a.5.5 0 0 0 0 .708l2.5 2.5a.5.5 0 1 0 .708-.708L5.707 3 7.854.854a.5.5 0 0 0 0-.708z\"></path>\r\n        </svg>\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nconst TableauTable=React.memo((props) => {\r\n  const {componentsPresent, componentsInputState, speciesHere, speciesDB, componentsDB, logKChanges, setLogKChanges, windowWidth}=props;\r\n\r\n  const setTypedLogKChanges=useCallback((type, newMap) => {\r\n    setLogKChanges(update(logKChanges, {[type]: {$set: newMap}}));\r\n  }, [setLogKChanges, logKChanges]);\r\n\r\n  const [topLeftWidth, setTopLeftWidth]=useState(0);\r\n  const [topLeftHeight, setTopLeftHeight]=useState(0);\r\n  const [logKWidth, setLogKWidth]=useState(0);\r\n  const lg=windowWidth>=992;\r\n  const headerColumn=useMemo(() => ({\r\n    Header: \"\",\r\n    Footer: () => (<><span className=\"d-none d-xl-block\">Total Concentration</span><span className=\"d-block d-xl-none\">Total Conc.</span></>),\r\n    id: \"name\",\r\n    accessor: ([specie, {name}]) => (<FormattedChemicalCompound>{name}</FormattedChemicalCompound>),\r\n  }), []);\r\n  const dataColumns=useMemo(() => Immutable.List(componentsPresent.delete(componentsDB().waterValue)).map(component => {\r\n    return {\r\n      Header: () => (<FormattedChemicalCompound>{componentsDB().components.get(component).name}</FormattedChemicalCompound>),\r\n      Footer: componentsInputState.getIn([component, \"equilChecked\"]) ? \"TBC\" : componentsInputState.getIn([component, \"conc\"]), \r\n      id: component,\r\n      accessor: ([specie, {components}]) => { return components.get(component) ?? 0},\r\n    }\r\n  }), [componentsPresent, componentsInputState, componentsDB]);\r\n  const logKColumn=useMemo(() => ({\r\n    Header: \"logK\",\r\n    Footer: \"\",\r\n    id: \"logK\",\r\n    accessor: ([specie, {logK, type, logKChanges}]) => {return <LogKEditor specie={specie} defaultVal={logK} logKChanges={logKChanges} setLogKChanges={setTypedLogKChanges.bind(null, type)}/>},\r\n  }), [setTypedLogKChanges]);\r\n  const columns=useMemo(() => {\r\n    if(lg){\r\n      return dataColumns.unshift(headerColumn).push(logKColumn);\r\n    } else {\r\n      return dataColumns.unshift(logKColumn).unshift(headerColumn);\r\n    }\r\n  }, [headerColumn, dataColumns, logKColumn, lg]);\r\n  const data=useMemo(() => \r\n    Immutable.List([\r\n      Immutable.List(speciesHere().aqs).map(specie => ([specie, {...speciesDB().aqs.species.get(specie), logKChanges: logKChanges.aqs, type: \"aqs\"}])),\r\n      Immutable.List(speciesHere().solids).map(specie => ([specie, {...speciesDB().solids.species.get(specie), logKChanges: logKChanges.solids, type: \"solids\"}])),\r\n      Immutable.List(speciesHere().gases).map(specie => ([specie, {...speciesDB().gases.species.get(specie), logKChanges: logKChanges.gases, type: \"gases\"}])),\r\n    ]).flatten(true)\r\n  , [speciesHere, speciesDB, logKChanges]);\r\n\r\n  const tableInstance = useTable({ columns, data });\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    footerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = tableInstance;\r\n\r\n  const topLeftRef=useResizeObserver(useCallback(({width, height}) => {\r\n    setTopLeftWidth(width);\r\n    setTopLeftHeight(height);\r\n  }, [setTopLeftHeight]));\r\n  \r\n  const logKRef=useResizeObserver(useCallback(({width}) => {\r\n    setLogKWidth(width);\r\n  }, [setLogKWidth]));\r\n  \r\n  return(\r\n    <Scrollbars \r\n      autoHide\r\n      style={{width: \"100%\"}}\r\n      autoHeight\r\n      autoHeightMax=\"calc(90vh - 63px - 71px - 2rem)\"\r\n      renderTrackHorizontal={props => {\r\n        const finalStyle = update(props.style,{ $merge: {\r\n          right: 2,\r\n          bottom: 2,\r\n          left: 2,\r\n          borderRadius: 3,\r\n          marginLeft: topLeftWidth,\r\n          marginRight: lg ? logKWidth : 0,\r\n        }});\r\n        return <div {...props} style={finalStyle}/>;\r\n        }\r\n      }\r\n      renderTrackVertical={props => {\r\n        const finalStyle = update(props.style,{ $merge: {\r\n          right: 2,\r\n          bottom: 2,\r\n          top: 2,\r\n          borderRadius: 3,\r\n          marginTop: topLeftHeight,\r\n        }});\r\n        return <div {...props} style={finalStyle}/>;\r\n        }\r\n      }\r\n    >\r\n      <Table striped bordered hover {...getTableProps({\r\n        style: {}\r\n      })}>\r\n        <thead>\r\n          {\r\n            headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {\r\n                  headerGroup.headers.map(column => {\r\n                    if(!column.Header){\r\n                      return <th {...column.getHeaderProps({className: \"sticky sticky-header-y sticky-header-x-lg bg-white\"})} ref={topLeftRef} />\r\n                    } else if(column.id===\"logK\"){\r\n                      return (\r\n                        <th {...column.getHeaderProps({\r\n                          className: \"vertical-align-middle sticky-header-y sticky-column-lg sticky\",\r\n                        })} ref={logKRef}>\r\n                          {\r\n                            column.render('Header')\r\n                          }\r\n                        </th>\r\n                      )\r\n                    } else {\r\n                      return (\r\n                        <th {...column.getHeaderProps({\r\n                          className: \"vertical-align-middle sticky-header-y sticky\",\r\n                        })}>\r\n                          {\r\n                            column.render('Header')\r\n                          }\r\n                        </th>\r\n                      )\r\n                    }\r\n                  })\r\n                }\r\n              </tr>\r\n            ))\r\n          }\r\n        </thead>\r\n        \r\n        <tbody {...getTableBodyProps()}>\r\n          {\r\n          rows.map(row => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {\r\n                  row.cells.map(cell => {\r\n                    if(cell.column.id===\"name\"){\r\n                      return (\r\n                        <th {...cell.getCellProps({\r\n                          className: \"vertical-align-middle sticky-header-lg sticky\",\r\n                        })}>\r\n                          {\r\n                            cell.render('Cell')\r\n                          }\r\n                        </th>\r\n                      )\r\n                    } else if(cell.column.id===\"logK\"){\r\n                      return (\r\n                        <td {...cell.getCellProps({\r\n                          className: \"vertical-align-middle sticky-column-lg sticky\",\r\n                        })}>\r\n                          {\r\n                            cell.render('Cell')\r\n                          }\r\n                        </td>\r\n                      )\r\n                    } else {\r\n                      return (\r\n                        <td {...cell.getCellProps({\r\n                          className: \"vertical-align-middle\",\r\n                        })}>\r\n                          {\r\n                            cell.render('Cell')\r\n                          }\r\n                        </td>\r\n                      )\r\n                    }\r\n                  })\r\n                }\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n        <tfoot>\r\n          {footerGroups.map(group => (\r\n            <tr {...group.getFooterGroupProps()}>\r\n              {\r\n                group.headers.map(column => {\r\n                  if(column.id===\"name\"){\r\n                    return (\r\n                      <th {...column.getFooterProps({\r\n                        className: \"vertical-align-middle sticky-header-lg sticky\",\r\n                      })}>\r\n                        {\r\n                          column.render('Footer')\r\n                        }\r\n                      </th>\r\n                    );\r\n                  } else if(column.id===\"logK\"){\r\n                    return (\r\n                      <th {...column.getFooterProps({\r\n                        className: \"vertical-align-middle crossed-out sticky-column-lg sticky\",\r\n                      })}>\r\n                        {\r\n                          column.render('Footer')\r\n                        }\r\n                      </th>\r\n                    )\r\n                  } else {\r\n                    return (\r\n                      <td {...column.getFooterProps({\r\n                        className: \"vertical-align-middle sticky\",\r\n                      })}>\r\n                        {\r\n                          column.render('Footer')\r\n                        }\r\n                      </td>\r\n                    );\r\n                  }\r\n                  \r\n                })\r\n              }\r\n            </tr>\r\n          ))}\r\n        </tfoot>\r\n      </Table>\r\n    </Scrollbars>\r\n  )\r\n});\r\n\r\nexport default TableauTable;","import React from \"react\";\r\n\r\nconst FormattedChemicalCompound=React.memo((props) => {\r\n  /*\r\n  WordMatcher=(.*?[^0-9\\[\\(])\r\n  SubMatcher=([0-9])\r\n  EndMatcher=([$\\s])\r\n  SupMatcher=([+-])(?:(?:1|([2-9]))|{EndMatcher})\r\n  WholeExp={WordMatcher}(?:{EndMatcher}|{SubMatcher}{SupMatcher}?|{SupMatcher})\r\n  (WordMatcher[0])_(SubMatcher[0])^(SupMatcher[1]SupMatcher[0])EndMatcher[0]\r\n  That would only work with ruby where the capture groups are changed on every recursion\r\n  */\r\n  //https://regex101.com/r/POrbvL/4\r\n  const regex=/(?<WordMatcher>.*?[^0-9[(\\s])(?:(?<EndMatcher1>$|[:.\\s])|(?<Charge1>(?<ChargeSign1>[+-])(?:(?:1|(?<ChargeValue1>[2-9]))|(?<EndMatcher2>$|[:.\\s])))|(?<SubMatcher>[0-9]+)(?<Charge2>(?<ChargeSign2>[+-])(?:(?:1|(?<ChargeValue2>[2-9]))|(?<EndMatcher3>$|[:.\\s])))?)(?<EndMatcher4>$|[:.\\s])?/g;\r\n  //$<WordMatcher>_($<SubMatcher>)^($<ChargeValue1>$<ChargeValue2>$<ChargeSign1>$<ChargeSign2>)$<EndMatcher1>$<EndMatcher2>$<EndMatcher3>\r\n  return(\r\n    <div {...props}>\r\n        {Array.from(props.children.matchAll(regex)).map((match) => {\r\n          const chargeValue=[match.groups.ChargeValue1, match.groups.ChargeValue2].reduce((prev, curr) => curr ? curr : prev, \"\");\r\n          const chargeSign=[match.groups.ChargeSign1, match.groups.ChargeSign2].reduce((prev, curr) => curr ? curr : prev, \"\");\r\n          const terminator=[match.groups.EndMatcher1, match.groups.EndMatcher2, match.groups.EndMatcher3, match.groups.EndMatcher4].reduce((prev, curr) => curr ? curr : prev, \"\");\r\n          return (\r\n            <span key={props.children.substring(0, match.index)}>\r\n              {match.groups.WordMatcher}<sub>{match.groups.SubMatcher}</sub><sup>{chargeValue}{chargeSign}</sup>{terminator}\r\n            </span>\r\n          );\r\n        })\r\n        }\r\n    </div>\r\n  );\r\n});\r\nexport default FormattedChemicalCompound;","import { useCallback, useRef } from \"react\";\r\n\r\nconst useCallbackRef=(onUpdate , cleanupOld, onNull=() => {}) => {\r\n  const ref = useRef(null)\r\n  const setRef = useCallback(node => {\r\n    if (ref.current) {\r\n      cleanupOld(ref.current);\r\n    } \r\n    \r\n    if (node) {\r\n      onUpdate(node)\r\n    } else {\r\n      onNull();\r\n    }\r\n    \r\n    ref.current = node\r\n  }, [cleanupOld, onUpdate, onNull])\r\n  \r\n  return setRef\r\n}\r\n\r\nconst mergeRefs = (...refs) => {\r\n  const filteredRefs = refs.filter(Boolean);\r\n  if (!filteredRefs.length) return null;\r\n  if (filteredRefs.length === 0) return filteredRefs[0];\r\n  return inst => {\r\n    for (const ref of filteredRefs) {\r\n      if (typeof ref === 'function') {\r\n        ref(inst);\r\n      } else if (ref) {\r\n        ref.current = inst;\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport {useCallbackRef, mergeRefs};","import React, { useState, useRef, useEffect } from 'react';\r\nimport { mergeRefs } from './ref-utils';\r\n\r\nconst ConstantValidationTextInput=React.memo((props) => {\r\n  const child=React.Children.only(props.children);\r\n  const [value, setValue]=useState(\"\");\r\n  const [selection, setSelection]=useState([0,0]);\r\n  const [validationMisfired, setValidationMisfire]=useState(false);\r\n  const selectRef=useRef(null);\r\n  const onBlur=(e) => {\r\n    props.onBlur(e, setValue);\r\n  }\r\n\r\n  const onChange=(e) => {\r\n    if(props.validation(e.target.value)){\r\n      props.onChange(e);\r\n      setValue(e.target.value);\r\n      setSelection([e.target.selectionStart, e.target.selectionEnd]);\r\n    } else {\r\n      setValidationMisfire(true);\r\n    }\r\n  }\r\n  const onSelect=(e) => {\r\n    if(!validationMisfired){\r\n      setSelection([e.target.selectionStart, e.target.selectionEnd]);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if(validationMisfired) {\r\n      selectRef.current.selectionStart=selection[0];\r\n      selectRef.current.selectionEnd=selection[1];\r\n      setValidationMisfire(false);\r\n    }\r\n  }, [validationMisfired, selection]);\r\n  return(\r\n    <>\r\n      {React.cloneElement(child, { value: value, onSelect: onSelect, onChange: onChange, onBlur: onBlur, ref: mergeRefs(child.ref, selectRef)})}\r\n    </>\r\n  )\r\n});\r\nConstantValidationTextInput.defaultProps={\r\n  onChange: () => {},\r\n  onBlur: () => {},\r\n};\r\n\r\nexport default ConstantValidationTextInput;"],"sourceRoot":""}