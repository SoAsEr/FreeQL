{"version":3,"sources":["features/components/componentsSelectors.js","features/components/componentsSlice.js","features/species/speciesSlice.js","utils/createDiffSelector.js","features/species/speciesSelectors.js","features/common/actions.js","features/species/gases/gasInputSlice.js","features/loadingSlice.js","utils/readCSV.js","features/fetchDBs.js","utils/CenteringDiv.js","utils/useWindowSize.js","features/equilibria/equilibriaSlice.js","features/equilibria/CalculateEquilibriumWorker.js","App.js","serviceWorker.js","index.js"],"names":["getComponentsPresent","state","components","present","getComponentDB","componentDB","getHPlusOption","hPlusOption","getWaterValue","waterValue","getComponentsConc","createSelector","conc","concs","hPlusOptions","ph","update","hPlusValue","is_number","Math","pow","getComponentsAtEquilibrium","atEquilibrium","equilComponents","add","component","componentsAtEquilibrium","has","addComponentsReducer","union","withMutations","set","totalH","value","label","getNewComponentDB","createAsyncThunk","args","thunkAPI","a","fetchComponentDB","initialState","Immutable","componentsSlice","createSlice","name","reducers","addComponents","action","payload","componentValueChanged","numberValue","Number","setComponentConcReducer","putComponentsAtEquilibrium","putComponentsAtEquilibriumReducer","removeComponentsFromEquilibrium","subtract","removeComponentsFromEquilibriumReducer","hPlusOptionChanged","val","hPlusOptionChangedReducer","extraReducers","builder","addCase","pending","Object","assign","fulfilled","db","removeComponentsWithSpecies","deleteAll","removeComponentsReducer","actions","enableSpeciesOfTypeReducer","type","species","speciesEnabled","map","specie","disableSpeciesOfTypeReducer","getNewSpeciesDB","fetchSpeciesDB","aqs","default","solids","gases","logKChanges","speciesDB","speciesSlice","enableSpecies","disableSpecies","addLogKChange","addLogKChangeReducer","removeLogKChange","delete","removeLogKChangeReducer","diffMemoize","fn","initial","addReducer","removeReducer","oldArgs","oldFirstArg","reduceResult","firstArg","shallowEqualArrays","added","removed","size","reduce","prev","curr","createDiffSelector","addFunc","removeFunc","finalFunc","memoize","memoizeOptions","createSelectorCreator","mapmem","defaultMemoize","my_createSelectorCreator","getSpeciesDB","getComponentToSpeciesOfTypeFactory","componentToSpecies","speciesId","oldSet","getSpeciesOfTypeFactory","getSpeciesCouldBePresentOfTypeFactory","speciesOccurences","speciesCouldBePresent","componentToAdd","speciesOfType","componentToSpeciesOfType","newSpeciesCouldBePresent","get","num","componentToRemove","remove","sortBy","index","getSpeciesPresentOfTypeFactory","filter","speciesFactoryFactory","typeFactory","createStructuredSelector","getSpeciesCouldBePresent","getComponentToSpecies","getSpeciesPresent","getLogKChanges","getLogKChange","getIfSpecieEnabled","createAction","removeComponents","dispatch","getState","deleteGasReducer","gasReplacements","partialPressures","getPartialPressures","gasInput","getGasReplacements","getComponentToGases","getErroredGases","componentToGases","erroredSpecies","gasInputSlice","setGasPartialPressure","gas","setGasPartialPressureReducer","setGasReplacement","setGasReplacementReducer","isAsyncAction","endsWith","getNameFromAsyncThunk","thunk","substring","lastIndexOf","actionToName","loadingSlice","addMatcher","getData","item","options","property","row","column","getDataWithStride","i","stride","fetchCSV","url","fetch","then","response","reader","body","getReader","lastLine","csvBuilt","chunkParser","chunk","partial","str","arr","quote","lastLineStart","lastMatchEnd","col","matchAll","match","parseCSVWithPartial","TextDecoder","decode","parsed","thisLastLine","slice","length","Promise","resolve","pump","read","res","done","concat","callback","all","labels","urls","tables","mainTable","labelList","labelTable","linesPerItem","chunkedLabelTable","labelMap","entries","chunkedMainTable","aqSpecies","solidSpecies","gasSpecies","id","dbAddingTo","charge","logK","componentAmt","result","chunks","componentDBDefaultParams","process","speciesDBDefaultParams","numComponents","componentAmts","linesPerId","CenteringDiv","props","className","start","end","children","useWindowSize","useState","width","window","innerWidth","height","innerHeight","windowSize","setWindowSize","useLayoutEffect","handleResize","addEventListener","removeEventListener","getCurrentCalculationArguments","componentsConc","speciesPresent","calculateEquilibriumWorker","Comlink","Worker","calculateEquilibrium","context","console","log","query","variables","Array","from","keys","totalConcentrations","_","includes","componentId","total","concentration","aqueousSpecies","constant","coefficients","coefficient","solidsCouldBePresent","partialPressure","componentReplacing","ret","equilibria","getEquilibria","equilibriaSlice","push","meta","arg","findLastIndex","equilibrium","data","errors","$set","rejected","error","FreeQL","React","lazy","App","footerHeight","Navbar","expand","bg","variant","Brand","href","src","alt","Collapse","Nav","style","Link","target","fallback","headerHeight","Container","Row","Col","Boolean","location","hostname","reducer","combineReducers","loading","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","rootEl","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.dfc4aebd.chunk.js","sourcesContent":["import is_number from 'is-number';\r\nimport { createSelector } from 'reselect';\r\nimport { hPlusOptions } from './componentsSlice';\r\n\r\nconst getComponentsPresent = (state) => state.components.present;\r\nconst getComponentDB = (state) => state.components.componentDB;\r\nconst getHPlusOption = (state) => state.components.hPlusOption;\r\nconst getWaterValue = (state) => getComponentDB(state).waterValue;\r\n\r\nconst getComponentsConc = createSelector(\r\n  [\r\n    (state) => state.components.conc,\r\n    getComponentDB,\r\n    getHPlusOption,\r\n  ],\r\n  (concs, componentDB, hPlusOption) => {\r\n    if(hPlusOption===hPlusOptions.ph){\r\n      return concs.update(componentDB.hPlusValue, ph => is_number(ph) ? Math.pow(10, -ph) : ph);\r\n    } else {\r\n      return concs;\r\n    }\r\n  }\r\n);\r\n\r\nconst getComponentsAtEquilibrium = createSelector(\r\n  [\r\n    (state) => state.components.atEquilibrium,\r\n    getComponentDB,\r\n    getHPlusOption,\r\n  ],\r\n  (equilComponents, componentDB, hPlusOption) => {\r\n    if(hPlusOption===hPlusOptions.ph) {\r\n      return equilComponents.add(componentDB.hPlusValue);\r\n    } else {\r\n      return equilComponents;\r\n    }\r\n  }\r\n);\r\n\r\nconst isComponentAtEquilibrium=createSelector(\r\n  [\r\n    getComponentsAtEquilibrium,\r\n    (state, {component}) => component,\r\n  ],\r\n  (componentsAtEquilibrium, component) => componentsAtEquilibrium.has(component)\r\n);\r\n\r\nexport { getComponentsPresent, getComponentsConc, getComponentsAtEquilibrium, getWaterValue, isComponentAtEquilibrium, getComponentDB, getHPlusOption }\r\n","import * as Immutable from 'immutable';\r\nimport is_number from 'is-number';\r\n\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\nimport {fetchComponentDB} from \"../fetchDBs.js\";\r\nimport { removeComponentsWithSpecies } from '../common/actions.js';\r\n\r\nconst addComponentsReducer=(state, components) => {\r\n  state.present=state.present.union(components);\r\n  state.conc=state.conc.withMutations(conc => {\r\n    for(const component of components){\r\n      conc.set(component,null);\r\n    }\r\n  })\r\n};\r\n\r\nconst removeComponentsReducer=(state, components) => {\r\n  state.present=state.present.subtract(components);\r\n  state.conc=state.conc.deleteAll(components);\r\n\r\n};\r\nconst setComponentConcReducer=(state, component, value) => {\r\n  const numberValue = is_number(value) ? Number(value) : null;\r\n  state.conc=state.conc.set(component, numberValue);\r\n};\r\n\r\nconst putComponentsAtEquilibriumReducer=(state, component) => {\r\n  state.atEquilibrium=state.atEquilibrium.union(component);\r\n};\r\nconst removeComponentsFromEquilibriumReducer=(state, component) => {\r\n  state.atEquilibrium=state.atEquilibrium.subtract(component);\r\n};\r\n\r\nconst hPlusOptions={\r\n  totalH: { value: \"unique_1\", label: 'totalH' },\r\n  ph: { value: \"unique_2\", label: 'pH' },\r\n  //alk: { value: \"unique_3\", label: 'Alkalinity^1' },\r\n  //otherAlk: { value: \"unique_4\", label: 'Other Alkalinity' },\r\n};\r\n\r\nconst hPlusOptionChangedReducer=(state, val) => {\r\n  state.hPlusOption=val;\r\n};\r\n\r\nconst getNewComponentDB=createAsyncThunk(\r\n  \"getNewComponentDB\",\r\n  async (args, thunkAPI) => {\r\n    return fetchComponentDB(args);\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  present: Immutable.OrderedSet(),\r\n  conc: Immutable.Map(),\r\n  atEquilibrium: Immutable.Set(),\r\n  componentDB: {\r\n    components: null,\r\n    hPlusValue: null,\r\n    waterValue: null,\r\n  },\r\n  hPlusOption: hPlusOptions.totalH, \r\n};\r\n\r\nconst componentsSlice= createSlice({\r\n  name: \"components\",\r\n  initialState,\r\n  reducers: {\r\n    addComponents: (state, action) => {\r\n      addComponentsReducer(state, action.payload)\r\n    },\r\n    componentValueChanged: (state, action) => {\r\n      setComponentConcReducer(state, action.payload.component, action.payload.value)\r\n    },\r\n    putComponentsAtEquilibrium: (state, action) => {\r\n      putComponentsAtEquilibriumReducer(state, action.payload)\r\n    },\r\n    removeComponentsFromEquilibrium: (state, action) => {\r\n      removeComponentsFromEquilibriumReducer(state, action.payload)\r\n    },\r\n    hPlusOptionChanged: (state, action) => {\r\n      hPlusOptionChangedReducer(state, action.payload)\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getNewComponentDB.pending, (state, action) => {\r\n        Object.assign(state, initialState);\r\n      })\r\n      .addCase(getNewComponentDB.fulfilled, (state, action) => {\r\n        const db = action.payload;\r\n        state.componentDB=db;\r\n        addComponentsReducer(state, [db.hPlusValue]);\r\n      })\r\n      .addCase(removeComponentsWithSpecies, (state, action) => {\r\n        removeComponentsReducer(state, action.payload.components)\r\n      })\r\n  }\r\n});\r\n\r\nexport const { addComponents, componentValueChanged, putComponentsAtEquilibrium, removeComponentsFromEquilibrium, hPlusOptionChanged } = componentsSlice.actions;\r\nexport { getNewComponentDB };\r\nexport { hPlusOptions };\r\nexport default componentsSlice.reducer;\r\n","import * as Immutable from 'immutable';\r\n\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\nimport { fetchSpeciesDB } from '../fetchDBs.js';\r\n\r\nimport { removeComponentsWithSpecies } from '../common/actions.js';\r\n\r\n\r\nconst enableSpeciesOfTypeReducer=(state, type, species) => {\r\n  if(!species){\r\n    return;\r\n  }\r\n  state.speciesEnabled[type].map=state.speciesEnabled[type].map.withMutations(speciesEnabled => {\r\n    for(const specie of species){\r\n      speciesEnabled.set(specie, true);\r\n    }\r\n  });\r\n}\r\nconst disableSpeciesOfTypeReducer=(state, type, species) => {\r\n  if(!species){\r\n    return;\r\n  }\r\n  state.speciesEnabled[type].map=state.speciesEnabled[type].map.withMutations(speciesEnabled => {\r\n    for(const specie of species){\r\n      speciesEnabled.set(specie, false);\r\n    }\r\n  });\r\n}\r\n\r\nconst addLogKChangeReducer=(state, type, specie, value) => {\r\n  state.logKChanges[type]=state.logKChanges[type].set(specie, value);\r\n}\r\n\r\nconst removeLogKChangeReducer=(state, type, specie) => {\r\n  state.logKChanges[type]=state.logKChanges[type].delete(specie);\r\n}\r\n\r\n\r\nconst getNewSpeciesDB=createAsyncThunk(\r\n  \"getNewSpeciesDB\",\r\n  async (args, thunkAPI) => {\r\n    return fetchSpeciesDB(args);\r\n  }\r\n);\r\n\r\nconst initialState={\r\n  speciesEnabled: {\r\n    aqs: {map: Immutable.Map(), default: true},\r\n    solids: {map: Immutable.Map(), default: false},\r\n    gases: {map: Immutable.Map(), default: false},\r\n  },\r\n  logKChanges: {\r\n    aqs: Immutable.Map(),\r\n    solids: Immutable.Map(),\r\n    gases: Immutable.Map(),\r\n  },\r\n  speciesDB: {\r\n    aqs: null,\r\n    solids: null,\r\n    gases: null,\r\n  }\r\n};\r\n\r\n\r\nconst speciesSlice=createSlice({\r\n  name: \"species\",\r\n  initialState,\r\n  reducers: {\r\n    enableSpecies: (state, action) => {\r\n      enableSpeciesOfTypeReducer(state, \"aqs\", action.payload.aqs);\r\n      enableSpeciesOfTypeReducer(state, \"solids\", action.payload.solids);\r\n      enableSpeciesOfTypeReducer(state, \"gases\", action.payload.gases);\r\n    },\r\n    disableSpecies: (state, action) => {\r\n      disableSpeciesOfTypeReducer(state, \"aqs\", action.payload.aqs);\r\n      disableSpeciesOfTypeReducer(state, \"solids\", action.payload.solids);\r\n      disableSpeciesOfTypeReducer(state, \"gases\", action.payload.gases);\r\n    },\r\n    addLogKChange: (state, action) => {\r\n      addLogKChangeReducer(state, action.payload.type, action.payload.specie, action.payload.value);\r\n    },\r\n    removeLogKChange: (state, action) => {\r\n      removeLogKChangeReducer(state, action.payload.type, action.payload.specie);\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n    .addCase(getNewSpeciesDB.pending, (state, action) => {\r\n      Object.assign(state, initialState);\r\n    })\r\n    .addCase(getNewSpeciesDB.fulfilled, (state, action) => {\r\n      const db = action.payload;\r\n      state.speciesDB = db;\r\n    })\r\n    .addCase(removeComponentsWithSpecies, (state, action) => {\r\n      state.speciesEnabled.aqs.map=state.speciesEnabled.aqs.map.deleteAll(action.payload.species.aqs);\r\n      state.speciesEnabled.solids.map=state.speciesEnabled.solids.map.deleteAll(action.payload.species.solids);\r\n      state.speciesEnabled.gases.map=state.speciesEnabled.gases.map.deleteAll(action.payload.species.gases);\r\n    })\r\n  },\r\n});\r\n\r\n\r\nexport const { enableSpecies, disableSpecies, addLogKChange, removeLogKChange } = speciesSlice.actions;\r\nexport { getNewSpeciesDB };\r\nexport default speciesSlice.reducer;","import * as Immutable from \"immutable\";\r\nimport { createSelectorCreator, defaultMemoize } from \"reselect\";\r\nimport { shallowEqualArrays } from \"shallow-equal\";\r\n\r\nconst diffMemoize=(fn, initial, addReducer, removeReducer) => {\r\n  let oldArgs=null;\r\n  let oldFirstArg=null;\r\n  let reduceResult=null;\r\n  return (firstArg, ...args) => {\r\n    if(!shallowEqualArrays(oldArgs, args)){\r\n      oldFirstArg=Immutable.Set();\r\n      reduceResult=initial;\r\n      oldArgs=args;\r\n    }\r\n    const added=firstArg.subtract(oldFirstArg);\r\n    const removed=oldFirstArg.subtract(firstArg);\r\n    if(added.size){\r\n      reduceResult=added.reduce((prev, curr) => addReducer(prev, curr, ...args), reduceResult);\r\n    }\r\n    if(removed.size){\r\n      reduceResult=removed.reduce((prev, curr) => removeReducer(prev, curr, ...args), reduceResult);\r\n    }\r\n    oldFirstArg=firstArg;\r\n    return fn(reduceResult, ...args);\r\n  }\r\n}\r\n\r\nconst my_createSelectorCreator = (memoize, ...memoizeOptions) => {\r\n  return createSelectorCreator((fn, mapmem) => {\r\n    if(mapmem===true){\r\n      return memoize(fn, ...memoizeOptions);\r\n    } else {\r\n      return defaultMemoize(fn);\r\n    }\r\n  }, true);\r\n}\r\n\r\nconst createDiffSelector=(args, initial, addFunc, removeFunc, finalFunc) => {\r\n  return my_createSelectorCreator(diffMemoize, initial, addFunc, removeFunc)(args, finalFunc);\r\n}\r\nexport {createDiffSelector};","import * as Immutable from 'immutable';\r\n\r\nimport { getComponentsPresent, getWaterValue } from '../components/componentsSelectors.js';\r\nimport { createSelector, createStructuredSelector } from 'reselect';\r\nimport { createDiffSelector } from '../../utils/createDiffSelector.js';\r\nimport memoize from 'fast-memoize';\r\n\r\nconst indexSort=(db) => (specie) => db.get(specie).index;\r\n\r\nconst getSpeciesDB=(state) => state.species.speciesDB;\r\n\r\nconst getComponentToSpeciesOfTypeFactory=memoize((type) => createSelector(\r\n  [getSpeciesDB],\r\n  (speciesDB) => {\r\n    return Immutable.Map().withMutations(componentToSpecies => {\r\n      for(const [speciesId, {components}] of speciesDB[type]) {\r\n        for(const [component] of components) {\r\n          componentToSpecies.update(component, (oldSet=Immutable.Set()) => oldSet.add(speciesId));\r\n        }\r\n      }\r\n    });\r\n  }\r\n))\r\n\r\n\r\nconst getSpeciesOfTypeFactory=memoize((type) => (state) => state.species.speciesDB[type]);\r\n\r\nconst getSpeciesCouldBePresentOfTypeFactory=memoize((type) => createDiffSelector(\r\n  [getComponentsPresent, getSpeciesOfTypeFactory(type), getComponentToSpeciesOfTypeFactory(type), getWaterValue], //deps\r\n  {speciesOccurences: Immutable.Map(), speciesCouldBePresent: Immutable.OrderedSet()}, //initial of reducer\r\n  ({speciesOccurences, speciesCouldBePresent}, componentToAdd, speciesOfType, componentToSpeciesOfType, waterValue) => {  //addReducer\r\n    let newSpeciesOccurences;\r\n    let newSpeciesCouldBePresent;\r\n    newSpeciesOccurences=speciesOccurences.withMutations(speciesOccurences => {\r\n      newSpeciesCouldBePresent=speciesCouldBePresent.withMutations(speciesCouldBePresent => {\r\n        for(const specie of componentToSpeciesOfType.get(componentToAdd) ?? []) {\r\n          speciesOccurences.update(specie, (num=0)=>num+1);\r\n          if(speciesOfType.get(specie).components.delete(waterValue).size===speciesOccurences.get(specie)){\r\n            speciesCouldBePresent.add(specie);\r\n          }\r\n        }\r\n      })\r\n    })\r\n    return {speciesOccurences: newSpeciesOccurences, speciesCouldBePresent: newSpeciesCouldBePresent};\r\n  },\r\n  ({speciesOccurences, speciesCouldBePresent}, componentToRemove, speciesOfType, componentToSpeciesOfType) => {  //removeReducer\r\n    let newSpeciesOccurences;\r\n    let newSpeciesCouldBePresent;\r\n    newSpeciesOccurences=speciesOccurences.withMutations(speciesOccurences => {\r\n      newSpeciesCouldBePresent=speciesCouldBePresent.withMutations(speciesCouldBePresent => {\r\n        for(const specie of componentToSpeciesOfType.get(componentToRemove) ?? []) {\r\n          speciesOccurences.update(specie, (num=0)=>num-1);\r\n          speciesCouldBePresent.remove(specie);\r\n        }\r\n      })\r\n    })\r\n    return {speciesOccurences: newSpeciesOccurences, speciesCouldBePresent: newSpeciesCouldBePresent};\r\n  },\r\n  ({speciesCouldBePresent}, speciesOfType) => speciesCouldBePresent.sortBy(indexSort(speciesOfType)) //final function\r\n));\r\n\r\nconst getSpeciesPresentOfTypeFactory=memoize((type) => createSelector(\r\n  [\r\n    (state) => state.species.speciesEnabled[type],\r\n    getSpeciesCouldBePresentOfTypeFactory(type),\r\n  ],\r\n  (speciesEnabled, speciesCouldBePresent) => {\r\n    return speciesCouldBePresent.filter(specie => speciesEnabled.map.get(specie) ?? speciesEnabled.default);\r\n  }\r\n));\r\n\r\nconst speciesFactoryFactory=(typeFactory) => createStructuredSelector({\r\n  aqs: typeFactory(\"aqs\"),\r\n  solids: typeFactory(\"solids\"),\r\n  gases: typeFactory(\"gases\"),\r\n});\r\n\r\nconst getSpeciesCouldBePresent=speciesFactoryFactory(getSpeciesCouldBePresentOfTypeFactory);\r\nconst getComponentToSpecies=speciesFactoryFactory(getComponentToSpeciesOfTypeFactory);\r\nconst getSpeciesPresent=speciesFactoryFactory(getSpeciesPresentOfTypeFactory);\r\n\r\nconst getLogKChanges=(state) => state.species.logKChanges;\r\nconst getLogKChange=(state, {type, specie}) => state.species.logKChanges[type].get(specie);\r\n\r\nconst getIfSpecieEnabled=(state, {type, specie}) => state.species.speciesEnabled[type].map.get(specie) ?? state.species.speciesEnabled[type].default;\r\n\r\n\r\nexport { getSpeciesCouldBePresent, getSpeciesPresent, getSpeciesDB, getLogKChanges, getIfSpecieEnabled, getLogKChange, getComponentToSpecies, indexSort };\r\n","import * as Immutable from 'immutable';\r\n\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nimport { getComponentToSpecies } from \"../species/speciesSelectors\";\r\n\r\nconst removeComponentsWithSpecies=createAction(\"removeComponentsWithSpecies\");\r\n\r\nconst removeComponents=(components) => {\r\n  return (dispatch, getState) => {\r\n    const componentToSpecies=getComponentToSpecies(getState());\r\n    const species={aqs: Immutable.Set(), solids: Immutable.Set(), gases: Immutable.Set()};\r\n    for(const component of components) {\r\n      species.aqs=species.aqs.union(componentToSpecies.aqs.get(component) ?? []);\r\n      species.solids=species.solids.union(componentToSpecies.solids.get(component) ?? []);\r\n      species.gases=species.gases.union(componentToSpecies.gases.get(component) ?? []);\r\n    }\r\n    dispatch(removeComponentsWithSpecies({components, species}));\r\n  }\r\n}\r\n\r\nexport {removeComponentsWithSpecies, removeComponents}","import * as Immutable from 'immutable';\r\nimport is_number from 'is-number';\r\n\r\nimport { createSlice, createSelector } from '@reduxjs/toolkit'\r\nimport { disableSpecies } from '../speciesSlice';\r\nimport { removeComponentsWithSpecies } from '../../common/actions';\r\n\r\nconst setGasPartialPressureReducer=(state, gas, value) => {\r\n  state.partialPressures=state.partialPressures.set(gas,  is_number(value) ? Number(value) : null);\r\n}\r\n\r\nconst setGasReplacementReducer=(state, gas, component) => {\r\n  state.gasReplacements=state.gasReplacements.set(gas, component);\r\n}\r\n\r\nconst deleteGasReducer=(state, gases) => {\r\n  state.gasReplacements=state.gasReplacements.deleteAll(gases);\r\n  state.partialPressures=state.partialPressures.deleteAll(gases);\r\n}\r\n\r\nconst initialState={\r\n  partialPressures: Immutable.Map(),\r\n  gasReplacements: Immutable.Map(),\r\n}\r\n\r\nconst getPartialPressures=(state) => state.gasInput.partialPressures;\r\nconst getGasReplacements=(state) => state.gasInput.gasReplacements;\r\n\r\nconst getComponentToGases=createSelector(\r\n  [getGasReplacements],\r\n  (gasReplacements) => gasReplacements.reduce(\r\n    (componentToSpecies, component, specie) => componentToSpecies.update(component, (species=Immutable.Set()) => species.add(specie)), Immutable.Map()\r\n  )\r\n)\r\nconst getErroredGases=createSelector(\r\n  [getComponentToGases],\r\n  (componentToGases) => componentToGases.filter(species => species.size>1).reduce(\r\n    (erroredSpecies, species) => erroredSpecies.union(species), Immutable.Set()\r\n  )\r\n);\r\n\r\nconst gasInputSlice = createSlice({\r\n  name: \"gasInput\",\r\n  initialState,\r\n  reducers: {\r\n    setGasPartialPressure: (state, action) => {\r\n      setGasPartialPressureReducer(state, action.payload.gas, action.payload.value)\r\n    },\r\n    setGasReplacement: (state, action) => {\r\n      setGasReplacementReducer(state, action.payload.gas, action.payload.component)\r\n    },\r\n  },\r\n  extraReducers: (builder) =>{\r\n    builder\r\n    .addCase(removeComponentsWithSpecies, (state, action) => {\r\n      deleteGasReducer(state, action.payload.species.gases)\r\n    })\r\n    .addCase(disableSpecies, (state, action) => {\r\n      deleteGasReducer(state, action.payload.gases)\r\n    })\r\n  }\r\n});\r\n\r\nexport const { setGasPartialPressure, setGasReplacement } = gasInputSlice.actions;\r\n\r\nexport { getPartialPressures, getComponentToGases, getGasReplacements, getErroredGases }\r\n\r\nexport default gasInputSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { getNewComponentDB } from './components/componentsSlice.js';\r\nimport { getNewSpeciesDB } from './species/speciesSlice.js';\r\n\r\nconst pending=\"pending\";\r\nconst fulfilled=\"fulfilled\";\r\nconst rejected=\"rejected\";\r\n\r\nconst isAsyncAction=({type})=> {\r\n  return type.endsWith(\"/pending\") ||  type.endsWith(\"/fulfilled\")|| type.endsWith(\"/rejected\");\r\n}\r\n\r\nconst getNameFromAsyncThunk=(thunk) => thunk.pending.type.substring(0, thunk.pending.type.lastIndexOf(\"/\"));\r\nconst actionToName={\r\n  [getNameFromAsyncThunk(getNewComponentDB)] : \"componentDB\",\r\n  [getNameFromAsyncThunk(getNewSpeciesDB)] : \"speciesDB\",\r\n}\r\n\r\nconst loadingSlice=createSlice({\r\n  name: \"loading\",\r\n  initialState: {\r\n    componentDB: pending,\r\n    speciesDB: pending,\r\n  },\r\n  extraReducers: builder => {\r\n    builder\r\n      .addMatcher(isAsyncAction, (state, {type})=>{\r\n        state[actionToName[type.substring(0, type.lastIndexOf(\"/\"))]]=type.substring(type.lastIndexOf(\"/\")+1);\r\n      })\r\n  }\r\n});\r\nexport {pending, fulfilled, rejected};\r\n\r\nexport default loadingSlice.reducer;","const getData=(item, options, property) => {\r\n  return item[options[property].row][options[property].column];\r\n}\r\nconst getDataWithStride=(item, options, property, i) => {\r\n  return item[options[property].row][options[property].column+i*options[property].stride];\r\n}\r\n\r\nfunction parseCSVWithPartial(str) {\r\n  let arr = [];\r\n  let quote = false;\r\n\r\n  let lastLineStart=0;\r\n  let lastMatchEnd=0;\r\n  let row=0;\r\n  let col=0;\r\n  for(const match of str.matchAll(/(\"\")|(\")|(,)|(?:(\\r\\n)|(\\n)|(\\r))($)?|$/g)){\r\n    arr[row] = arr[row] || [];\r\n    arr[row][col] = arr[row][col] || '';\r\n    if(match[7]){\r\n      break;\r\n    }\r\n    arr[row][col]+=str.substring(lastMatchEnd, match.index);\r\n    if(match[1]){\r\n      if(quote){\r\n        arr[row][col]+='\"';\r\n      }\r\n      lastMatchEnd=match.index+2;\r\n    } else if(match[2]){\r\n      quote=!quote;\r\n      lastMatchEnd=match.index+1;\r\n    } else if(match[3]){\r\n      ++col;\r\n      lastMatchEnd=match.index+1;\r\n    } else if(match[4]) {\r\n      ++row;\r\n      col=0;\r\n      lastMatchEnd=match.index+2;\r\n      lastLineStart=lastMatchEnd;\r\n    } else if(match[5] || match[6]) {\r\n      ++row;\r\n      col=0;\r\n      lastMatchEnd=match.index+1;\r\n      lastLineStart=lastMatchEnd;\r\n    }\r\n  }\r\n  return [arr, str.substring(lastLineStart)];\r\n}\r\n\r\nconst fetchCSV=(url) => {\r\n  return fetch(url)\r\n    .then(\r\n      response => {\r\n        const reader=response.body.getReader();\r\n        let lastLine=\"\";\r\n        let csvBuilt=[];\r\n        const chunkParser=(chunk, partial) => {\r\n          const decodedChunk=lastLine+new TextDecoder(\"utf-8\").decode(chunk);\r\n          const [parsed, thisLastLine] = parseCSVWithPartial(decodedChunk);\r\n          if(!partial) {\r\n            lastLine=thisLastLine;\r\n            return parsed.slice(0, parsed.length-1);\r\n          } else {\r\n            return parsed;\r\n          }\r\n        }\r\n        return new Promise(resolve => {\r\n          pump();\r\n          function pump() {\r\n            return reader.read().then(res => {\r\n              if(res.done) {\r\n                csvBuilt=csvBuilt.concat(chunkParser(res.value, true));\r\n                resolve(csvBuilt);\r\n                return;\r\n              }\r\n              csvBuilt=csvBuilt.concat(chunkParser(res.value));\r\n              pump();\r\n            })\r\n          }\r\n        })\r\n      }\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport {getData, getDataWithStride, fetchCSV};","import { fetchCSV, getData, getDataWithStride } from '../utils/readCSV.js';\r\nimport chunk from \"chunk\";\r\n\r\nimport * as Immutable from 'immutable';\r\n\r\n\r\nconst fetchSpeciesDB=({url, options, type, callback}) => {\r\n  if(type===\"link\") {\r\n    return Promise.all([url, ...options.labels.urls].map(url => fetchCSV(url))).then(tables => {\r\n      const [mainTable, ...labelTables]=tables;\r\n      const labelList=labelTables.map(labelTable => chunk(labelTable, options.linesPerItem)).map(chunkedLabelTable => chunkedLabelTable.map(labelTable => getData(labelTable, options.labels, \"id\")));\r\n\r\n      const labelMap=Immutable.Map().withMutations((labelMap) => {\r\n        for(const [index, labelTable] of labelList.entries()) {\r\n          for(const specie of labelTable){\r\n            labelMap.set(specie, options.labels.labelMap[index]);\r\n          }\r\n        };\r\n      });\r\n      \r\n      const chunkedMainTable=chunk(mainTable, options.linesPerItem).filter(chunk => Number(chunk[0][0]));\r\n      const db={\r\n        aqs: null,\r\n        solids: null,\r\n        gases: null,\r\n      }\r\n      db.aqs=Immutable.Map().withMutations(aqSpecies => {  \r\n        db.solids=Immutable.Map().withMutations(solidSpecies => {\r\n          db.gases=Immutable.Map().withMutations(gasSpecies => {\r\n            const db={aqs: aqSpecies, solids: solidSpecies, gases: gasSpecies};\r\n            for(const item of chunkedMainTable){\r\n              const id=getData(item, options, \"id\");\r\n              const dbAddingTo=db[labelMap.get(id) ?? \"aqs\"]\r\n              dbAddingTo.set(id, \r\n                {\r\n                  name: getData(item, options, \"name\"),\r\n                  charge: Number(getData(item, options, \"charge\")),\r\n                  logK: Number(getData(item, options, \"logK\")),\r\n                  label: labelMap.get(id) ?? 0,\r\n                  index: dbAddingTo.size,\r\n                  components: Immutable.OrderedMap().withMutations((components) => {\r\n                    for(let i=0; i<getData(item, options, \"numComponents\"); ++i){\r\n                      const component=getDataWithStride(item, options, \"components\", i);\r\n                      const componentAmt=Number(getDataWithStride(item, options, \"componentAmts\", i));\r\n                      components.set(component, componentAmt);\r\n                    }\r\n                  }),\r\n                }\r\n              )\r\n            }\r\n          });\r\n        });\r\n      });\r\n      \r\n      return db;\r\n    })\r\n  }\r\n}\r\n\r\nconst fetchComponentDB=({url, options, type, callback}) => {\r\n  if(type===\"link\") {\r\n    return fetchCSV(url).then(result => chunk(result, options.linesPerItem))\r\n    .then(chunks => \r\n      ({\r\n        hPlusValue: options.hPlusValue, \r\n        waterValue: options.waterValue,\r\n        components: Immutable.OrderedMap(chunks.filter(item => getData(item, options, \"id\")).map(item => [\r\n          getData(item, options, \"id\"),\r\n          {\r\n            name: getData(item, options, \"name\"), \r\n            charge: Number(getData(item, options, \"charge\")),\r\n          }\r\n        ]))\r\n      })\r\n    )\r\n    \r\n  }\r\n}\r\n\r\nconst componentDBDefaultParams={\r\n  url: process.env.PUBLIC_URL+\"/assets/defaultdb/comp.vdb\", \r\n  type: \"link\",\r\n  options: {\r\n    linesPerItem: 1,\r\n    id: {row: 0, column: 0},\r\n    name: {row: 0, column: 1},\r\n    charge: {row: 0, column: 2},\r\n    hPlusValue: \"330\",\r\n    waterValue: \"2\",\r\n  }, \r\n};\r\n\r\nconst speciesDBDefaultParams={\r\n  url: process.env.PUBLIC_URL+\"/assets/defaultdb/thermo.vdb\", \r\n  type: \"link\",\r\n  options: {\r\n    linesPerItem: 3,\r\n    id: {row: 0, column: 0},\r\n    name: {row: 0, column: 1},\r\n    charge: {row: 0, column: 6},\r\n    logK: {row: 0, column: 3},\r\n    numComponents: {row: 0, column: 10},\r\n    components: {row: 1, column: 1, stride: 2},\r\n    componentAmts: {row: 1, column: 0, stride: 2},\r\n    labels: {\r\n      urls: [process.env.PUBLIC_URL+\"/assets/defaultdb/type6.vdb\", process.env.PUBLIC_URL+\"/assets/defaultdb/gases.vdb\"],\r\n      linesPerId: 3,\r\n      id: {row: 0, column: 0},\r\n      labelMap: [\"solids\", \"gases\"]\r\n    }\r\n  }, \r\n};\r\n\r\nexport {fetchSpeciesDB, fetchComponentDB, speciesDBDefaultParams, componentDBDefaultParams};","import React from 'react';\r\n\r\nconst CenteringDiv=(props) => {\r\n  return (\r\n    <div className={\"flex-\"+(props.start ? props.start+\"-\" : \"\")+\"grow-1 \"+(props.end ? \"flex-\"+props.end+\"-grow-0\" : \"\")}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\nexport default CenteringDiv;","import { useState, useLayoutEffect } from \"react\";\r\n\r\n\r\nconst useWindowSize=() => {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    // Handler to call on window resize\r\n     const handleResize=()=>{\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    \r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n    \r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n\r\n  return windowSize;\r\n}\r\n\r\nexport default useWindowSize;","import * as Immutable from 'immutable';\r\nimport { createAsyncThunk, createSelector, createSlice } from \"@reduxjs/toolkit\";\r\n\r\n//eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport ConcentrationCalculator from 'worker-loader!./CalculateEquilibriumWorker.js'\r\nimport { getComponentDB, getComponentsAtEquilibrium, getComponentsConc } from '../components/componentsSelectors';\r\nimport { getLogKChanges, getSpeciesDB, getSpeciesPresent } from '../species/speciesSelectors';\r\n\r\nimport * as Comlink from \"comlink\";\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { pending } from '../loadingSlice';\r\nimport update from \"immutability-helper\";\r\nimport { getGasReplacements, getPartialPressures } from '../species/gases/gasInputSlice';\r\n\r\n\r\nconst getCurrentCalculationArguments=createStructuredSelector(\r\n  {\r\n    componentsConc: getComponentsConc,\r\n    componentsAtEquilibrium: getComponentsAtEquilibrium,\r\n    speciesPresent: getSpeciesPresent,\r\n    logKChanges: getLogKChanges,\r\n    speciesDB: getSpeciesDB,\r\n    componentDB: getComponentDB,\r\n    partialPressures: getPartialPressures,\r\n    gasReplacements: getGasReplacements,\r\n  }\r\n)\r\n\r\nconst calculateEquilibriumQuery=`\r\nquery getResults($components: [ID!]!, $totalConcentrations: [TotalConcentrationInput!]!, $componentsAtEquilibrium: [ComponentAtEquilibriumInput!], $aqueousSpecies: [SpecieInput!]!, $solidsCouldBePresent: [SolidCouldBePresentInput!], $solidsAtEquilibrium: [SolidAtEquilibriumInput], $gases: [GasInput!], $extraSolubilityProductsToCheck: [SpecieInput!]){\r\n  equilibrium(components: $components, totalConcentrations: $totalConcentrations, componentsAtEquilibrium: $componentsAtEquilibrium, aqueousSpecies: $aqueousSpecies, solidsCouldBePresent: $solidsCouldBePresent, solidsAtEquilibrium: $solidsAtEquilibrium, gases: $gases){\r\n    species {\r\n      component{\r\n        componentId,\r\n        concentration,\r\n      },\r\n      aqueous{\r\n        id,\r\n        concentration,\r\n      },\r\n      solid{\r\n        present{\r\n          id,\r\n          concentration\r\n        },\r\n        notPresent{\r\n          id,\r\n          solubilityProduct\r\n        }\r\n      }\r\n    },\r\n    totalConcentrations{\r\n      componentId,\r\n      total\r\n    },\r\n    extraSolubilityProducts(species: $extraSolubilityProductsToCheck){\r\n      id,\r\n      solubilityProduct\r\n    }\r\n  }\r\n}\r\n`\r\nconst calculateEquilibriumWorker=Comlink.wrap(new ConcentrationCalculator());\r\n\r\nconst calculateEquilibrium=createAsyncThunk(\r\n  \"calculateEquilibrium\",\r\n  async (context) => {\r\n    const {componentsConc, componentsAtEquilibrium, speciesPresent, logKChanges, speciesDB, partialPressures, gasReplacements, componentDB}=context;\r\n    console.log(context);\r\n    const args={\r\n      query: calculateEquilibriumQuery,\r\n      variables: {\r\n        components: Array.from(componentsConc.keys()),\r\n        totalConcentrations: Array.from(componentsConc.filter((_, component) => !componentsAtEquilibrium.has(component) && !gasReplacements.includes(component))).map(([component, conc]) => ({componentId: component, total: conc})),\r\n        componentsAtEquilibrium: Array.from(componentsAtEquilibrium.keys()).map(component => ({componentId: component, concentration: componentsConc.get(component)})),\r\n        aqueousSpecies: Array.from(speciesPresent.aqs).map(specie => ({id: specie, row: {constant: Math.pow(10, logKChanges.aqs.get(specie) ?? speciesDB.aqs.get(specie).logK), coefficients: Array.from(speciesDB.aqs.get(specie).components).map(([component, amt]) => ({componentId: component, coefficient: amt}))}})),\r\n        solidsCouldBePresent: Array.from(speciesPresent.solids).map(specie => ({id: specie, row: {constant: Math.pow(10, logKChanges.solids.get(specie) ?? speciesDB.solids.get(specie).logK), coefficients: Array.from(speciesDB.solids.get(specie).components).map(([component, amt]) => ({componentId: component, coefficient: amt}))}})),\r\n        gases: Array.from(speciesPresent.gases).map(specie => ({id: specie, partialPressure: partialPressures.get(specie), componentReplacing: gasReplacements.get(specie), row: {constant: Math.pow(10, logKChanges.gases.get(specie) ?? speciesDB.gases.get(specie).logK), coefficients: Array.from(speciesDB.gases.get(specie).components).map(([component, amt]) => ({componentId: component, coefficient: amt}))}})),\r\n      }\r\n    };\r\n    const ret=await calculateEquilibriumWorker(\r\n      args\r\n    );\r\n    return ret;\r\n  }\r\n);\r\n\r\nconst initialState={\r\n  equilibria: Immutable.List(),\r\n}\r\n\r\nconst getEquilibria=state=> state.equilibria.equilibria;\r\n\r\nconst equilibriaSlice=createSlice({\r\n  name: \"equilibria\",\r\n  initialState,\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(calculateEquilibrium.pending, (state, action) => {\r\n        state.equilibria=state.equilibria.push({context: action.meta.arg, result: pending});\r\n      })\r\n      .addCase(calculateEquilibrium.fulfilled, (state, action) => {\r\n        const index=state.equilibria.findLastIndex(equilibrium => equilibrium.context===action.meta.arg);\r\n        console.log(index);\r\n        let result={};\r\n        if(action.payload.data?.equilibrium){\r\n          result.equilibrium=action.payload.data.equilibrium;\r\n        } else if(action.payload.errors){\r\n          result.errors=action.payload.errors\r\n        }\r\n        state.equilibria=state.equilibria.update(index, equilibrium => update(equilibrium, {result: {$set: result}}));\r\n      })\r\n      .addCase(calculateEquilibrium.rejected, (state, action) => {\r\n        const index=state.equilibria.findLastIndex(equilibrium => equilibrium.context===action.meta.arg);\r\n        console.log(index);\r\n        console.log(action.error);\r\n        state.equilibria=state.equilibria.update(index, equilibrium => update(equilibrium, {result: {$set: { errors: [action.error]}}}))\r\n      })\r\n  }\r\n});\r\n\r\nexport {calculateEquilibrium};\r\nexport {getCurrentCalculationArguments, getEquilibria};\r\nexport default equilibriaSlice.reducer;","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/CalculateEquilibriumWorker.4a2b4452.worker.js\");\n}\n","import React, { Suspense } from 'react';\r\n\r\nimport './App.scss';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport CenteringDiv from './utils/CenteringDiv.js';\r\nimport useWindowSize from './utils/useWindowSize.js';\r\n\r\nconst FreeQL = React.lazy(() => import(\"./FreeQL.js\"));\r\n\r\nfunction App() {\r\n  const windowSize=useWindowSize();\r\n  const headerHeight=56;\r\n  const footerHeight=windowSize.width>=768 ? 120 : 72;\r\n  return (\r\n    <>\r\n      <Navbar expand=\"sm\" bg=\"dark\" variant=\"dark\">\r\n        <CenteringDiv end=\"sm\">\r\n          <Navbar.Brand href=\"/\">\r\n            <img src={process.env.PUBLIC_URL+\"/assets/img/logo.svg\"} width=\"65\" alt=\"FreeQL\"/>\r\n          </Navbar.Brand>\r\n        </CenteringDiv>\r\n        <Navbar.Brand href=\"/\">FreeQL</Navbar.Brand>\r\n        <CenteringDiv end=\"sm\"/>\r\n        <Navbar.Collapse id=\"navbarTogglerDemo02\">\r\n          <Nav className=\"mr-auto\" style={{\"fontSize\": \"1.025rem\"}}>\r\n            <Nav.Link href=\"https://stephmorel8910.gitbook.io/freeql/\" target=\"_blank\">Help</Nav.Link>\r\n            <Nav.Link href=\"https://github.com/SoAsEr/FreeQL/blob/master/README.md\" target=\"_blank\">README</Nav.Link>\r\n            <Nav.Link href=\"https://github.com/SoAsEr/FreeQL/\" target=\"_blank\">Github</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <Suspense fallback={<div style={{\"height\" : \"calc(100vh - \"+(headerHeight+footerHeight)+\"px)\"}}/>}>\r\n        <FreeQL headerHeight={headerHeight} footerHeight={footerHeight}/>\r\n      </Suspense>\r\n      <footer className=\"bg-dark p-4 p-md-5 text-center\">\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <span className=\"text-light\">Created by Stephane Morel</span>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </footer>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) { \n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport components from \"./features/components/componentsSlice.js\";\r\nimport loading from \"./features/loadingSlice.js\";\r\nimport species from \"./features/species/speciesSlice.js\";\r\nimport gasInput from \"./features/species/gases/gasInputSlice.js\";\r\nimport equilibria from \"./features/equilibria/equilibriaSlice.js\";\r\n\r\nimport { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport { Provider } from 'react-redux'\r\nimport { StrictMode } from 'react';\r\n\r\nconst reducer=combineReducers({\r\n  components,\r\n  loading,\r\n  species,\r\n  gasInput,\r\n  equilibria,\r\n});\r\nconst store = configureStore({\r\n  reducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: false,\r\n    immutableCheck: false,\r\n  }),\r\n});\r\n\r\n/*\r\nReactDOM.render(\r\n  //<React.StrictMode>\r\n    <App />,\r\n  //</React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n*/\r\nconst rootEl = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <StrictMode>\r\n      <App />\r\n    </StrictMode>\r\n  </Provider>, rootEl\r\n);\r\n//ReactDOM.unstable_createRoot(rootEl).render(<App />);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}