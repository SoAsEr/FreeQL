{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapRegExp.js","../node_modules/react-table/index.js","../node_modules/react-bootstrap/esm/Table.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../../src/plugin-hooks/useGridLayout.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","Class","_cache","Map","undefined","fn","Function","toString","call","indexOf","TypeError","has","get","set","Wrapper","construct","arguments","this","create","value","enumerable","writable","configurable","_inherits","subClass","superClass","_wrapRegExp","re","groups","BabelRegExp","_RegExp","RegExp","_super","_groups","WeakMap","flags","_this","buildGroups","result","g","keys","reduce","name","exec","str","replace","substitution","_","args","push","apply","length","module","exports","require","Table","React","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","actions","init","defaultRenderer","emptyRenderer","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","next","style","makePropGetter","hooks","meta","userProps","prev","handlePropGetter","prevProps","Array","isArray","reduceHooks","initial","allowUndefined","loopHooks","context","forEach","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","deps","mountedRef","makeRenderer","instance","column","type","Comp","console","info","Error","flexRender","component","proto","isReactComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","split","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","flattenDeep","arr","newArr","i","String","d","join","reOpenBracket","reCloseBracket","cursor","pathPart","e","row","error","assign","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","getFirstDefined","isFunction","a","key","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","values","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","mid","floor","nums","sort","b","from","Set","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","col","nonGroupByColumns","isGrouped","groupedIndex","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","getRowValueByColumnID","isNaN","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","getTime","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","slice","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","u","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","supported","options","window","addEventListener","err","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","totalColumnsMinWidth","flex","useGridLayout","gridTemplateColumns","gridLayout","w","columnIndex","elWidth","getElementById","offsetWidth","startingWidth","newWidth","columnWidthsCopy","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","instanceRef","userColumns","getStateReducer","s","handler","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups"],"mappings":"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","file":"static/js/0.819b4cef.chunk.js","sourcesContent":["export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeFunction from \"./isNativeFunction\";\nimport construct from \"./construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport wrapNativeSuper from \"./wrapNativeSuper\";\nimport getPrototypeOf from \"./getPrototypeOf\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nimport inherits from \"./inherits\";\nexport default function _wrapRegExp(re, groups) {\n  _wrapRegExp = function _wrapRegExp(re, groups) {\n    return new BabelRegExp(re, undefined, groups);\n  };\n\n  var _RegExp = wrapNativeSuper(RegExp);\n\n  var _super = RegExp.prototype;\n\n  var _groups = new WeakMap();\n\n  function BabelRegExp(re, flags, groups) {\n    var _this = _RegExp.call(this, re, flags);\n\n    _groups.set(_this, groups || _groups.get(re));\n\n    return _this;\n  }\n\n  inherits(BabelRegExp, _RegExp);\n\n  BabelRegExp.prototype.exec = function (str) {\n    var result = _super.exec.call(this, str);\n\n    if (result) result.groups = buildGroups(result, this);\n    return result;\n  };\n\n  BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {\n    if (typeof substitution === \"string\") {\n      var groups = _groups.get(this);\n\n      return _super[Symbol.replace].call(this, str, substitution.replace(/\\$<([^>]+)>/g, function (_, name) {\n        return \"$\" + groups[name];\n      }));\n    } else if (typeof substitution === \"function\") {\n      var _this = this;\n\n      return _super[Symbol.replace].call(this, str, function () {\n        var args = [];\n        args.push.apply(args, arguments);\n\n        if (_typeof(args[args.length - 1]) !== \"object\") {\n          args.push(buildGroups(args, _this));\n        }\n\n        return substitution.apply(this, args);\n      });\n    } else {\n      return _super[Symbol.replace].call(this, str, substitution);\n    }\n  };\n\n  function buildGroups(result, re) {\n    var g = _groups.get(re);\n\n    return Object.keys(g).reduce(function (groups, name) {\n      groups[name] = result[g[name]];\n      return groups;\n    }, Object.create(null));\n  }\n\n  return _wrapRegExp.apply(this, arguments);\n}","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\n\nexport function datetime(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValueByColumnID(row, columnId) {\n  return row.values[columnId]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","export function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: `grid`,\n      gridTemplateColumns: instance.state.gridLayout.columnWidths.map(w => w).join(` `),\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky` //enables a scroll wrapper to be placed around the table and have sticky headers\n    },\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === `init`) {\n    return {\n      gridLayout: {\n        columnWidths: instance.columns.map(() => `auto`),\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === `columnStartResizing`) {\n    const { columnId } = action\n    const columnIndex = instance.visibleColumns.findIndex(col => col.id === columnId)\n    const elWidth = getElementWidth(columnId)\n\n    if (elWidth !== undefined) {\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          columnId,\n          columnIndex,\n          startingWidth: elWidth\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === `columnResizing`) {\n    const {\n      columnIndex,\n      startingWidth,\n      columnWidths,\n    } = state.gridLayout\n\n    const change = state.columnResizing.startX - action.clientX\n    const newWidth = startingWidth - change\n    const columnWidthsCopy = [...columnWidths]\n    columnWidthsCopy[columnIndex] = `${newWidth}px`\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: columnWidthsCopy,\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}"],"sourceRoot":""}