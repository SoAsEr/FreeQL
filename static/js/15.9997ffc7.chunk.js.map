{"version":3,"sources":["utils/ref-utils.js","utils/ConstantValidationTextInput.js","utils/useResizeObserver.js","reusable_components/EditDefault.js","features/species/tableau/Tableau.js","reusable_components/formatting/FormattedChemicalCompound.js"],"names":["useCallbackRef","onUpdate","cleanupOld","onNull","ref","useRef","setRef","useCallback","node","current","mergeRefs","refs","filteredRefs","filter","Boolean","length","inst","ConstantValidationTextInput","React","memo","props","child","Children","only","children","useState","value","setValue","selection","setSelection","validationMisfired","setValidationMisfire","selectRef","useEffect","selectionStart","selectionEnd","cloneElement","onSelect","e","target","onChange","validation","onBlur","defaultProps","useResizeObserver","callback","resizeObserverRef","getResizeObserverRef","ResizeObserver","entries","boundingRect","getBoundingClientRect","width","height","observe","unobserve","EditDefault","constantValidation","onSubmitValidation","onResetToDefault","onEdit","defaultValue","changedValue","showDefault","editing","setEditing","editBoxVal","setEditBoxVal","editBoxRef","focus","onCancelEdit","onSubmitEdit","preventDefault","Form","onSubmit","Control","style","onKeyDown","keyCode","stopPropagation","className","onClick","viewBox","fill","xmlns","fillRule","d","LogKEditor","dbLogK","specie","type","dispatch","useDispatch","input","match","is_number","useSelector","state","getLogKChange","addLogKChange","Number","removeLogKChange","TableauTable","windowWidth","componentsPresent","getComponentsPresent","componentsAtEquilibium","getComponentsAtEquilibrium","componentsConc","getComponentsConc","componentDB","getComponentDB","speciesPresent","getSpeciesPresent","speciesDB","getSpeciesDB","topLeftWidth","setTopLeftWidth","topLeftHeight","setTopLeftHeight","logKWidth","setLogKWidth","lg","headerColumn","useMemo","Header","Footer","id","accessor","name","FormattedChemicalCompound","dataColumns","Immutable","map","component","components","get","logKColumn","logK","columns","unshift","push","data","aqs","solids","gases","flatten","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","topLeftRef","logKRef","autoHide","autoHeight","autoHeightMax","renderTrackHorizontal","finalStyle","update","$merge","right","bottom","left","borderRadius","marginLeft","marginRight","renderTrackVertical","top","marginTop","Table","striped","bordered","hover","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","group","getFooterGroupProps","getFooterProps","regex","Array","from","matchAll","chargeValue","groups","ChargeValue1","ChargeValue2","reduce","prev","curr","chargeSign","ChargeSign1","ChargeSign2","terminator","EndMatcher1","EndMatcher2","EndMatcher3","EndMatcher4","key","substring","index","WordMatcher","SubMatcher"],"mappings":"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","file":"static/js/15.9997ffc7.chunk.js","sourcesContent":["import { useCallback, useRef } from \"react\";\r\n\r\nconst useCallbackRef=(onUpdate , cleanupOld, onNull=() => {}) => {\r\n  const ref = useRef(null)\r\n  const setRef = useCallback(node => {\r\n    if (ref.current) {\r\n      cleanupOld(ref.current);\r\n    } \r\n    \r\n    if (node) {\r\n      onUpdate(node)\r\n    } else {\r\n      onNull();\r\n    }\r\n    \r\n    ref.current = node\r\n  }, [cleanupOld, onUpdate, onNull])\r\n  \r\n  return setRef\r\n}\r\n\r\nconst mergeRefs = (...refs) => {\r\n  const filteredRefs = refs.filter(Boolean);\r\n  if (!filteredRefs.length) return null;\r\n  if (filteredRefs.length === 0) return filteredRefs[0];\r\n  return inst => {\r\n    for (const ref of filteredRefs) {\r\n      if (typeof ref === 'function') {\r\n        ref(inst);\r\n      } else if (ref) {\r\n        ref.current = inst;\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport {useCallbackRef, mergeRefs};","import React, { useState, useRef, useEffect } from 'react';\r\nimport { mergeRefs } from './ref-utils';\r\n\r\nconst ConstantValidationTextInput=React.memo((props) => {\r\n  const child=React.Children.only(props.children);\r\n  const [value, setValue]=useState(\"\");\r\n  const [selection, setSelection]=useState([0,0]);\r\n  const [validationMisfired, setValidationMisfire]=useState(false);\r\n  const selectRef=useRef(null);\r\n  const onBlur=(e) => {\r\n    props.onBlur(e, setValue);\r\n  }\r\n\r\n  const onChange=(e) => {\r\n    if(props.validation(e.target.value)){\r\n      props.onChange(e);\r\n      setValue(e.target.value);\r\n      setSelection([e.target.selectionStart, e.target.selectionEnd]);\r\n    } else {\r\n      setValidationMisfire(true);\r\n    }\r\n  }\r\n  const onSelect=(e) => {\r\n    if(!validationMisfired){\r\n      setSelection([e.target.selectionStart, e.target.selectionEnd]);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if(validationMisfired) {\r\n      selectRef.current.selectionStart=selection[0];\r\n      selectRef.current.selectionEnd=selection[1];\r\n      setValidationMisfire(false);\r\n    }\r\n  }, [validationMisfired, selection]);\r\n  return(\r\n    <>\r\n      {React.cloneElement(child, { value: value, onSelect: onSelect, onChange: onChange, onBlur: onBlur, ref: mergeRefs(child.ref, selectRef)})}\r\n    </>\r\n  )\r\n});\r\nConstantValidationTextInput.defaultProps={\r\n  onChange: () => {},\r\n  onBlur: () => {},\r\n};\r\n\r\nexport default ConstantValidationTextInput;","import { useRef, useCallback } from \"react\";\r\nimport { useCallbackRef } from \"./ref-utils\";\r\n\r\nconst useResizeObserver=(callback) => {\r\n  const resizeObserverRef=useRef(null);\r\n  const getResizeObserverRef=useCallback(() => {\r\n    if(!resizeObserverRef.current){\r\n      resizeObserverRef.current=new ResizeObserver((entries) => {\r\n        const boundingRect=entries[0].target.getBoundingClientRect();\r\n        callback({width: boundingRect.width, height: boundingRect.height})\r\n      })\r\n    }\r\n    return resizeObserverRef;\r\n  }, [resizeObserverRef, callback])\r\n  const nodeRef=useCallbackRef(\r\n    useCallback((node) => {\r\n      getResizeObserverRef().current.observe(node)\r\n    },[getResizeObserverRef]),\r\n    useCallback((node) => {\r\n      getResizeObserverRef().current.unobserve(node)\r\n    },[getResizeObserverRef])\r\n  )\r\n  return nodeRef;\r\n}\r\n\r\nexport default useResizeObserver;","import React, { useState, useRef, useEffect} from \"react\";\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport ConstantValidationTextInput from \"../utils/ConstantValidationTextInput\";\r\n\r\nconst EditDefault = React.memo(({constantValidation, onSubmitValidation, onResetToDefault, onEdit, defaultValue, changedValue }) => {\r\n  const showDefault = !changedValue;\r\n  const [editing, setEditing] = useState(false);\r\n  const [editBoxVal, setEditBoxVal] = useState(\"\");\r\n\r\n  const editBoxRef=useRef();\r\n\r\n  useEffect(() => {\r\n    if(editing){\r\n      editBoxRef.current.focus();\r\n    }\r\n  }, [editing, editBoxRef]);\r\n\r\n  const onCancelEdit=(e) => {\r\n    setEditing(false);\r\n    setEditBoxVal(\"\");\r\n  };\r\n  const onSubmitEdit=(e) => {\r\n    e.preventDefault();\r\n    if(onSubmitValidation(editBoxVal)) {\r\n      onEdit(editBoxVal);\r\n    }\r\n    onCancelEdit(e);\r\n  }\r\n  const beginEdit=(e) => {\r\n    setEditing(true);\r\n  }\r\n  const resetToDefault=(e) => {\r\n    onResetToDefault();\r\n  }\r\n\r\n  if(editing){\r\n    return (\r\n      <Form onSubmit={onSubmitEdit}>\r\n        <ConstantValidationTextInput \r\n          validation={constantValidation} \r\n          onChange={(e) => {\r\n            setEditBoxVal(e.target.value);\r\n          }} \r\n          onBlur={onSubmitEdit}\r\n        >\r\n          <Form.Control \r\n            ref={editBoxRef}\r\n            style={{\"width\": \"80px\"}} \r\n            onKeyDown={(e) => {\r\n              if(e.keyCode===27){\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                onCancelEdit(e);\r\n              }\r\n            }}/>\r\n        </ConstantValidationTextInput>\r\n      </Form>\r\n    )\r\n  } else if(showDefault) {\r\n    return (\r\n      <span className=\"text-nowrap\">\r\n        {defaultValue}\r\n        <svg onClick={beginEdit} className=\"logK-editor\" style={{\"marginTop\": \"-0.2rem\"}} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path fillRule=\"evenodd\" d=\"M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z\"></path>\r\n          <path fillRule=\"evenodd\" d=\"M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z\"></path>\r\n        </svg>\r\n      </span>\r\n    )\r\n  } else {\r\n    return (\r\n      <span className=\"text-nowrap\">\r\n        {changedValue}\r\n        <svg onClick={resetToDefault} className=\"logK-reset\" style={{\"marginTop\" : \"-0.12rem\"}} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path fillRule=\"evenodd\" d=\"M12.83 6.706a5 5 0 0 0-7.103-3.16.5.5 0 1 1-.454-.892A6 6 0 1 1 2.545 5.5a.5.5 0 1 1 .91.417 5 5 0 1 0 9.375.789z\"></path>\r\n          <path fillRule=\"evenodd\" d=\"M7.854.146a.5.5 0 0 0-.708 0l-2.5 2.5a.5.5 0 0 0 0 .708l2.5 2.5a.5.5 0 1 0 .708-.708L5.707 3 7.854.854a.5.5 0 0 0 0-.708z\"></path>\r\n        </svg>\r\n      </span>\r\n    )\r\n  }\r\n});\r\n\r\nexport default EditDefault;","import React, { useState, useMemo, useCallback } from 'react';\r\n\r\nimport useResizeObserver from '../../../utils/useResizeObserver.js';\r\n\r\n\r\nimport * as Immutable from \"immutable\";\r\nimport update from \"immutability-helper\";\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport { useTable } from 'react-table';\r\n\r\nimport Table from 'react-bootstrap/Table';\r\nimport is_number from 'is-number';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addLogKChange, getLogKChange, getSpeciesDB, getSpeciesPresent, removeLogKChange } from '../speciesSlice';\r\nimport { getComponentDB, getComponentsAtEquilibrium, getComponentsConc, getComponentsPresent } from '../../components/componentsSlice';\r\nimport EditDefault from '../../../reusable_components/EditDefault';\r\nimport FormattedChemicalCompound from '../../../reusable_components/formatting/FormattedChemicalCompound.js';\r\n\r\nconst LogKEditor=React.memo((props) => {\r\n  const { dbLogK, specie, type} = props;\r\n  const dispatch=useDispatch();\r\n  return  (\r\n    <EditDefault\r\n      constantValidation={(input) => input.match(/^-?\\d*\\.?\\d*$/)}\r\n      onSubmitValidation={is_number}\r\n      defaultValue={dbLogK}\r\n      changedValue={useSelector(state => getLogKChange(state, {specie, type}))}\r\n      onEdit={(value) => {\r\n        dispatch(addLogKChange({specie, type, value: Number(value)}));\r\n      }}\r\n      onResetToDefault={() => {\r\n        dispatch(removeLogKChange({specie, type}));\r\n      }}\r\n    />\r\n  )\r\n});\r\n\r\nconst TableauTable=React.memo((props) => {\r\n  const {windowWidth}=props;\r\n\r\n  const componentsPresent=useSelector(getComponentsPresent);\r\n  const componentsAtEquilibium=useSelector(getComponentsAtEquilibrium);\r\n  const componentsConc=useSelector(getComponentsConc);\r\n  const componentDB=useSelector(getComponentDB);\r\n\r\n  const speciesPresent=useSelector(getSpeciesPresent);\r\n  const speciesDB=useSelector(getSpeciesDB);\r\n\r\n  const [topLeftWidth, setTopLeftWidth]=useState(0);\r\n  const [topLeftHeight, setTopLeftHeight]=useState(0);\r\n  const [logKWidth, setLogKWidth]=useState(0);\r\n  const lg=windowWidth>=992;\r\n  const headerColumn=useMemo(() => ({\r\n    Header: \"\",\r\n    Footer: () => (<><span className=\"d-none d-xl-block\">Total Concentration</span><span className=\"d-block d-xl-none\">Total Conc.</span></>),\r\n    id: \"name\",\r\n    accessor: ([specie, {name}]) => (<FormattedChemicalCompound>{name}</FormattedChemicalCompound>),\r\n  }), []);\r\n  const dataColumns=useMemo(() => Immutable.List(componentsPresent).map(component => {\r\n    return {\r\n      Header: () => (<FormattedChemicalCompound>{componentDB.components.get(component).name}</FormattedChemicalCompound>),\r\n      Footer: () => componentsAtEquilibium.get(component) ? \"TBC\" : componentsConc.get(component) ?? \"\", \r\n      id: component,\r\n      accessor: ([specie, {components}]) => { return components.get(component) ?? 0},\r\n    }\r\n  }), [componentsPresent, componentsAtEquilibium, componentsConc, componentDB]);\r\n  const logKColumn=useMemo(() => ({\r\n    Header: \"logK\",\r\n    Footer: \"\",\r\n    id: \"logK\",\r\n    accessor: ([specie, {logK, type}]) => {return <LogKEditor dbLogK={logK} type={type} specie={specie}/>},\r\n  }), []);\r\n  const columns=useMemo(() => {\r\n    if(lg){\r\n      return dataColumns.unshift(headerColumn).push(logKColumn);\r\n    } else {\r\n      return dataColumns.unshift(logKColumn).unshift(headerColumn);\r\n    }\r\n  }, [headerColumn, dataColumns, logKColumn, lg]);\r\n  const data=useMemo(() => \r\n    Immutable.List([\r\n      Immutable.List(speciesPresent.aqs).map(specie => ([specie, {...speciesDB.aqs.get(specie), type: \"aqs\"}])),\r\n      Immutable.List(speciesPresent.solids).map(specie => ([specie, {...speciesDB.solids.get(specie), type: \"solids\"}])),\r\n      Immutable.List(speciesPresent.gases).map(specie => ([specie, {...speciesDB.gases.get(specie), type: \"gases\"}])),\r\n    ]).flatten(true)\r\n  , [speciesPresent, speciesDB]);\r\n\r\n  const tableInstance = useTable({ columns, data });\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    footerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = tableInstance;\r\n\r\n  const topLeftRef=useResizeObserver(useCallback(({width, height}) => {\r\n    setTopLeftWidth(width);\r\n    setTopLeftHeight(height);\r\n  }, [setTopLeftHeight]));\r\n  \r\n  const logKRef=useResizeObserver(useCallback(({width}) => {\r\n    setLogKWidth(width);\r\n  }, [setLogKWidth]));\r\n  \r\n  return(\r\n    <Scrollbars \r\n      autoHide\r\n      style={{width: \"100%\"}}\r\n      autoHeight\r\n      autoHeightMax=\"calc(90vh - 63px - 71px - 2rem)\"\r\n      renderTrackHorizontal={props => {\r\n        const finalStyle = update(props.style,{ $merge: {\r\n          right: 2,\r\n          bottom: 2,\r\n          left: 2,\r\n          borderRadius: 3,\r\n          marginLeft: topLeftWidth,\r\n          marginRight: lg ? logKWidth : 0,\r\n        }});\r\n        return <div {...props} style={finalStyle}/>;\r\n        }\r\n      }\r\n      renderTrackVertical={props => {\r\n        const finalStyle = update(props.style,{ $merge: {\r\n          right: 2,\r\n          bottom: 2,\r\n          top: 2,\r\n          borderRadius: 3,\r\n          marginTop: topLeftHeight,\r\n        }});\r\n        return <div {...props} style={finalStyle}/>;\r\n        }\r\n      }\r\n    >\r\n      <Table striped bordered hover {...getTableProps({\r\n        style: {}\r\n      })}>\r\n        <thead>\r\n          {\r\n            headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {\r\n                  headerGroup.headers.map(column => {\r\n                    if(!column.Header){\r\n                      return <th {...column.getHeaderProps({className: \"sticky sticky-header-y sticky-header-x-lg bg-white\"})} ref={topLeftRef} />\r\n                    } else if(column.id===\"logK\"){\r\n                      return (\r\n                        <th {...column.getHeaderProps({\r\n                          className: \"vertical-align-middle sticky-header-y sticky-column-lg sticky\",\r\n                        })} ref={logKRef}>\r\n                          {\r\n                            column.render('Header')\r\n                          }\r\n                        </th>\r\n                      )\r\n                    } else {\r\n                      return (\r\n                        <th {...column.getHeaderProps({\r\n                          className: \"vertical-align-middle sticky-header-y sticky\",\r\n                        })}>\r\n                          {\r\n                            column.render('Header')\r\n                          }\r\n                        </th>\r\n                      )\r\n                    }\r\n                  })\r\n                }\r\n              </tr>\r\n            ))\r\n          }\r\n        </thead>\r\n        \r\n        <tbody {...getTableBodyProps()}>\r\n          {\r\n          rows.map(row => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {\r\n                  row.cells.map(cell => {\r\n                    if(cell.column.id===\"name\"){\r\n                      return (\r\n                        <th {...cell.getCellProps({\r\n                          className: \"vertical-align-middle sticky-header-lg sticky\",\r\n                        })}>\r\n                          {\r\n                            cell.render('Cell')\r\n                          }\r\n                        </th>\r\n                      )\r\n                    } else if(cell.column.id===\"logK\"){\r\n                      return (\r\n                        <td {...cell.getCellProps({\r\n                          className: \"vertical-align-middle sticky-column-lg sticky\",\r\n                        })}>\r\n                          {\r\n                            cell.render('Cell')\r\n                          }\r\n                        </td>\r\n                      )\r\n                    } else {\r\n                      return (\r\n                        <td {...cell.getCellProps({\r\n                          className: \"vertical-align-middle\",\r\n                        })}>\r\n                          {\r\n                            cell.render('Cell')\r\n                          }\r\n                        </td>\r\n                      )\r\n                    }\r\n                  })\r\n                }\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n        <tfoot>\r\n          {footerGroups.map(group => (\r\n            <tr {...group.getFooterGroupProps()}>\r\n              {\r\n                group.headers.map(column => {\r\n                  if(column.id===\"name\"){\r\n                    return (\r\n                      <th {...column.getFooterProps({\r\n                        className: \"vertical-align-middle sticky-header-lg sticky\",\r\n                      })}>\r\n                        {\r\n                          column.render('Footer')\r\n                        }\r\n                      </th>\r\n                    );\r\n                  } else if(column.id===\"logK\"){\r\n                    return (\r\n                      <th {...column.getFooterProps({\r\n                        className: \"vertical-align-middle crossed-out sticky-column-lg sticky\",\r\n                      })}>\r\n                        {\r\n                          column.render('Footer')\r\n                        }\r\n                      </th>\r\n                    )\r\n                  } else {\r\n                    return (\r\n                      <td {...column.getFooterProps({\r\n                        className: \"vertical-align-middle sticky\",\r\n                      })}>\r\n                        {\r\n                          column.render('Footer')\r\n                        }\r\n                      </td>\r\n                    );\r\n                  }\r\n                  \r\n                })\r\n              }\r\n            </tr>\r\n          ))}\r\n        </tfoot>\r\n      </Table>\r\n    </Scrollbars>\r\n  )\r\n});\r\n\r\nexport default TableauTable;","import React from \"react\";\r\n\r\nconst FormattedChemicalCompound=React.memo((props) => {\r\n  /*\r\n  WordMatcher=(.*?[^0-9\\[\\(])\r\n  SubMatcher=([0-9])\r\n  EndMatcher=([$\\s])\r\n  SupMatcher=([+-])(?:(?:1|([2-9]))|{EndMatcher})\r\n  WholeExp={WordMatcher}(?:{EndMatcher}|{SubMatcher}{SupMatcher}?|{SupMatcher})\r\n  (WordMatcher[0])_(SubMatcher[0])^(SupMatcher[1]SupMatcher[0])EndMatcher[0]\r\n  That would only work with ruby where the capture groups are changed on every recursion\r\n  */\r\n  //https://regex101.com/r/POrbvL/4\r\n  const regex=/(?<WordMatcher>.*?[^0-9[(\\s])(?:(?<EndMatcher1>$|[:.\\s])|(?<Charge1>(?<ChargeSign1>[+-])(?:(?:1|(?<ChargeValue1>[2-9]))|(?<EndMatcher2>$|[:.\\s])))|(?<SubMatcher>[0-9]+)(?<Charge2>(?<ChargeSign2>[+-])(?:(?:1|(?<ChargeValue2>[2-9]))|(?<EndMatcher3>$|[:.\\s])))?)(?<EndMatcher4>$|[:.\\s])?/g;\r\n  //$<WordMatcher>_($<SubMatcher>)^($<ChargeValue1>$<ChargeValue2>$<ChargeSign1>$<ChargeSign2>)$<EndMatcher1>$<EndMatcher2>$<EndMatcher3>\r\n  return(\r\n    <div {...props}>\r\n        {Array.from(props.children.matchAll(regex)).map((match) => {\r\n          const chargeValue=[match.groups.ChargeValue1, match.groups.ChargeValue2].reduce((prev, curr) => curr ? curr : prev, \"\");\r\n          const chargeSign=[match.groups.ChargeSign1, match.groups.ChargeSign2].reduce((prev, curr) => curr ? curr : prev, \"\");\r\n          const terminator=[match.groups.EndMatcher1, match.groups.EndMatcher2, match.groups.EndMatcher3, match.groups.EndMatcher4].reduce((prev, curr) => curr ? curr : prev, \"\");\r\n          return (\r\n            <span key={props.children.substring(0, match.index)}>\r\n              {match.groups.WordMatcher}<sub>{match.groups.SubMatcher}</sub><sup>{chargeValue}{chargeSign}</sup>{terminator}\r\n            </span>\r\n          );\r\n        })\r\n        }\r\n    </div>\r\n  );\r\n});\r\nexport default FormattedChemicalCompound;"],"sourceRoot":""}