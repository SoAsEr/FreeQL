{"version":3,"sources":["features/components/componentsSlice.js","features/species/speciesSlice.js","utils/createDiffSelector.js","utils/serialize-immutable-deep.js","features/result/resultsSlice.js","features/result/CalculateResultWorker.js","utils/readCSV.js","features/fetchDBs.js","utils/CenteringDiv.js","features/species/gases/gasInputSlice.js","utils/useWindowSize.js","App.js","serviceWorker.js","features/loadingSlice.js","index.js"],"names":["addComponentsReducer","state","components","present","union","hPlusOptions","totalH","value","label","ph","alk","otherAlk","getNewComponentDB","createAsyncThunk","args","thunkAPI","a","fetchComponentDB","initialState","Immutable","conc","atEquilibrium","componentDB","hPlusValue","waterValue","hPlusOption","getComponentsPresent","getComponentDB","getHPlusOption","getWaterValue","getComponentsConc","createSelector","concs","update","is_number","Math","pow","getComponentsAtEquilibrium","equilComponents","add","componentsSlice","component","componentsAtEquilibrium","has","createSlice","name","reducers","addComponents","action","payload","removeComponents","subtract","deleteAll","removeComponentsReducer","componentValueChanged","numberValue","Number","set","setComponentConcReducer","putComponentsAtEquilibrium","putComponentsAtEquilibriumReducer","removeComponentsFromEquilibrium","removeComponentsFromEquilibriumReducer","hPlusOptionChanged","val","hPlusOptionChangedReducer","extraReducers","builder","addCase","pending","Object","assign","fulfilled","db","actions","typeFactory","diffMemoize","fn","initial","addReducer","removeReducer","oldArgs","oldFirstArg","reduceResult","firstArg","shallowEqualArrays","added","removed","size","reduce","prev","curr","createDiffSelector","addFunc","removeFunc","finalFunc","memoize","memoizeOptions","createSelectorCreator","mapmem","defaultMemoize","my_createSelectorCreator","getNewSpeciesDB","fetchSpeciesDB","speciesEnabled","aqs","solids","gases","logKChanges","speciesDB","getSpeciesDB","species","getComponentsToSpeciesOfTypeFactory","type","withMutations","componentToSpecies","speciesId","oldSet","getSpeciesPresent","getSpeciesOfTypeFactory","getSpeciesCouldBePresent","speciesOccurences","speciesCouldBePresent","componentToAdd","speciesOfType","componentToSpeciesOfType","newSpeciesCouldBePresent","get","specie","num","delete","componentToRemove","remove","sortBy","index","createStructuredSelector","getLogKChanges","getLogKChange","getIfSpecieEnabled","speciesSlice","enableSpecies","enableSpeciesReducer","disableSpecies","disableSpeciesReducer","addLogKChange","addLogKChangeReducer","removeLogKChange","removeLogKChangeReducer","parse","str","toImmutable","immu","data","Array","isArray","map","ret","prop","JSON","getCurrentContext","componentsConc","speciesPresent","worker","Comlink","Worker","calculateNewResult","context","getState","getResult","calculate","obj","stringify","toPlainObj","isList","from","isMap","entries","isOrderedMap","isSet","isOrderedSet","result","calculations","results","getCalculations","_","resultsSlice","push","meta","arg","rejected","console","log","error","changeComponentDB","changeSpeciesDB","getData","item","options","property","row","column","getDataWithStride","i","stride","fetchCSV","url","fetch","then","response","reader","body","getReader","lastLine","csvBuilt","chunkParser","chunk","partial","arr","quote","lastLineStart","lastMatchEnd","col","matchAll","match","substring","parseCSVWithPartial","TextDecoder","decode","parsed","thisLastLine","slice","length","Promise","resolve","pump","read","res","done","concat","callback","all","labels","urls","tables","mainTable","labelList","labelTable","linesPerItem","chunkedLabelTable","labelMap","chunkedMainTable","filter","aqSpecies","solidSpecies","gasSpecies","id","dbAddingTo","charge","logK","componentAmt","chunks","componentDBDefaultParams","process","speciesDBDefaultParams","numComponents","componentAmts","linesPerId","CenteringDiv","props","className","start","end","children","partialPressures","gasReplacements","getPartialPressures","gasInput","getGasReplacements","getComponentToGases","getErroredGases","componentToGases","erroredSpecies","gasInputSlice","setGasPartialPressure","gas","setGasPartialPressureReducer","setGasReplacement","setGasReplacementReducer","removeEnabledGas","deleteGasReducer","useWindowSize","useState","width","window","innerWidth","height","innerHeight","windowSize","setWindowSize","useLayoutEffect","handleResize","addEventListener","removeEventListener","FreeQL","React","lazy","App","footerHeight","Navbar","expand","bg","variant","Brand","href","src","alt","Collapse","Nav","style","Link","target","fallback","headerHeight","Container","Row","Col","Boolean","location","hostname","isAsyncAction","endsWith","getNameFromAsyncThunk","thunk","lastIndexOf","actionToName","loadingSlice","calculateResult","addMatcher","reducer","combineReducers","loading","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","rootEl","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"woBAOMA,EAAqB,SAACC,EAAOC,GACjCD,EAAME,QAAQF,EAAME,QAAQC,MAAMF,IAoB9BG,EAAa,CACjBC,OAAQ,CAAEC,MAAO,WAAYC,MAAO,UACpCC,GAAI,CAAEF,MAAO,WAAYC,MAAO,MAChCE,IAAK,CAAEH,MAAO,WAAYC,MAAO,gBACjCG,SAAU,CAAEJ,MAAO,WAAYC,MAAO,qBAOlCI,EAAkBC,YACtB,oBADsC,uCAEtC,WAAOC,EAAMC,GAAb,SAAAC,EAAA,+EACSC,YAAiBH,IAD1B,2CAFsC,yDAOlCI,EAAe,CACnBf,QAASgB,MACTC,KAAMD,MACNE,cAAeF,MACfG,YAAa,CACXpB,WAAY,KACZqB,WAAY,KACZC,WAAY,MAEdC,YAAapB,EAAaC,QAGtBoB,EAAuB,SAACzB,GAAD,OAAWA,EAAMC,WAAWC,SACnDwB,EAAiB,SAAC1B,GAAD,OAAWA,EAAMC,WAAWoB,aAC7CM,EAAiB,SAAC3B,GAAD,OAAWA,EAAMC,WAAWuB,aAC7CI,EAAgB,SAAC5B,GAAD,OAAW0B,EAAe1B,GAAOuB,YAEjDM,EAAoBC,YACxB,CACE,SAAC9B,GAAD,OAAWA,EAAMC,WAAWkB,MAC5BO,EACAC,IAEF,SAACI,EAAOV,EAAaG,GACnB,OAAGA,IAAcpB,EAAaI,GACrBuB,EAAMC,OAAOX,EAAYC,YAAY,SAAAd,GAAE,OAAIyB,IAAUzB,GAAM0B,KAAKC,IAAI,IAAK3B,GAAMA,KAE/EuB,KAKPK,EAA6BN,YACjC,CACE,SAAC9B,GAAD,OAAWA,EAAMC,WAAWmB,eAC5BM,EACAC,IAEF,SAACU,EAAiBhB,EAAaG,GAC7B,OAAGA,IAAcpB,EAAaI,GACrB6B,EAAgBC,IAAIjB,EAAYC,YAEhCe,KAePE,GAVyBT,YAC7B,CACEM,EACA,SAACpC,EAAD,YAASwC,aAEX,SAACC,EAAyBD,GAA1B,OAAwCC,EAAwBC,IAAIF,MAK/CG,YAAY,CACjCC,KAAM,aACN3B,eACA4B,SAAU,CACRC,cAAe,SAAC9C,EAAO+C,GACrBhD,EAAqBC,EAAO+C,EAAOC,UAErCC,iBAAkB,SAACjD,EAAO+C,IAnGA,SAAC/C,EAAOC,GACpCD,EAAME,QAAQF,EAAME,QAAQgD,SAASjD,GACrCD,EAAMmB,KAAKnB,EAAMmB,KAAKgC,UAAUlD,GAkG5BmD,CAAwBpD,EAAO+C,EAAOC,UAExCK,sBAAuB,SAACrD,EAAO+C,IAjGL,SAAC/C,EAAOwC,EAAWlC,GAC/C,IAAMgD,EAAcrB,IAAU3B,GAASiD,OAAOjD,GAAS,KACvDN,EAAMmB,KAAKnB,EAAMmB,KAAKqC,IAAIhB,EAAWc,GAgGjCG,CAAwBzD,EAAO+C,EAAOC,QAAQR,UAAWO,EAAOC,QAAQ1C,QAE1EoD,2BAA4B,SAAC1D,EAAO+C,IA/FA,SAAC/C,EAAOwC,GAC9CxC,EAAMoB,cAAcpB,EAAMoB,cAAcjB,MAAMqC,GA+F1CmB,CAAkC3D,EAAO+C,EAAOC,UAElDY,gCAAiC,SAAC5D,EAAO+C,IA/FA,SAAC/C,EAAOwC,GACnDxC,EAAMoB,cAAcpB,EAAMoB,cAAc8B,SAASV,GA+F7CqB,CAAuC7D,EAAO+C,EAAOC,UAEvDc,mBAAoB,SAAC9D,EAAO+C,IAvFA,SAAC/C,EAAO+D,GACtC/D,EAAMwB,YAAYuC,EAuFdC,CAA0BhE,EAAO+C,EAAOC,WAG5CiB,cAAe,SAACC,GACdA,EACGC,QAAQxD,EAAkByD,SAAS,SAACpE,EAAO+C,GAC1CsB,OAAOC,OAAOtE,EAAOiB,MAEtBkD,QAAQxD,EAAkB4D,WAAW,SAACvE,EAAO+C,GAC5C,IAAMyB,EAAKzB,EAAOC,QAClBhD,EAAMqB,YAAYmD,EAClBzE,EAAqBC,EAAO,CAACwE,EAAGlD,oB,EAKmHiB,EAAgBkC,QAA5J3B,E,EAAAA,cAAeG,E,EAAAA,iBAAkBI,E,EAAAA,sBAAuBK,E,EAAAA,2BAA4BE,E,EAAAA,gCAAiCE,E,EAAAA,mBAIrHvB,MAAf,S,0ZCxC6BmC,E,6ECnGvBC,EAAY,SAACC,EAAIC,EAASC,EAAYC,GAC1C,IAAIC,EAAQ,KACRC,EAAY,KACZC,EAAa,KACjB,OAAO,SAACC,GAAuB,IAAD,uBAATtE,EAAS,iCAATA,EAAS,kBACxBuE,YAAmBJ,EAASnE,KAC9BoE,EAAY/D,MACZgE,EAAaL,EACbG,EAAQnE,GAEV,IAAMwE,EAAMF,EAASjC,SAAS+B,GACxBK,EAAQL,EAAY/B,SAASiC,GAQnC,OAPGE,EAAME,OACPL,EAAaG,EAAMG,QAAO,SAACC,EAAMC,GAAP,OAAgBZ,EAAU,WAAV,GAAWW,EAAMC,GAAjB,OAA0B7E,MAAOqE,IAE1EI,EAAQC,OACTL,EAAaI,EAAQE,QAAO,SAACC,EAAMC,GAAP,OAAgBX,EAAa,WAAb,GAAcU,EAAMC,GAApB,OAA6B7E,MAAOqE,IAElFD,EAAYE,EACLP,EAAE,WAAF,GAAGM,GAAH,OAAoBrE,MAczB8E,EAAmB,SAAC9E,EAAMgE,EAASe,EAASC,EAAYC,GAC5D,OAX+B,SAACC,GAAgC,IAAD,uBAAnBC,EAAmB,iCAAnBA,EAAmB,kBAC/D,OAAOC,aAAsB,SAACrB,EAAIsB,GAChC,OAAY,IAATA,EACMH,EAAO,WAAP,GAAQnB,GAAR,OAAeoB,IAEfG,YAAevB,MAEvB,GAIIwB,CAAyBzB,EAAaE,EAASe,EAASC,EAAxDO,CAAoEvF,EAAMiF,I,QDb7EO,EAAgBzF,YACpB,kBADoC,uCAEpC,WAAOC,EAAMC,GAAb,SAAAC,EAAA,+EACSuF,YAAezF,IADxB,2CAFoC,yDAOhCI,EAAa,CACjBsF,eAAgB,CACdC,IAAKtF,MACLuF,OAAQvF,MACRwF,MAAOxF,OAETyF,YAAa,CACXH,IAAKtF,MACLuF,OAAQvF,MACRwF,MAAOxF,OAET0F,UAAW,CACTJ,IAAK,KACLC,OAAQ,KACRC,MAAO,OAILG,EAAa,SAAC7G,GAAD,OAAWA,EAAM8G,QAAQF,WAEtCG,EAAqC,SAACC,GAAD,OAAUlF,YACnD,CAAC+E,IACD,SAACD,GACC,OAAO1F,MAAgB+F,eAAc,SAAAC,GAAuB,IAAD,gBAClBN,EAAUI,IADQ,oDAC9CG,EAD8C,KAClClH,EADkC,KAClCA,WADkC,cAE9BA,GAF8B,IAEvD,IAAI,EAAJ,qBAAqC,CAAC,IAA3BuC,EAA0B,0BACnC0E,EAAmBlF,OAAOQ,GAAW,eAAC4E,EAAD,uDAAQlG,MAAR,OAA4BkG,EAAO9E,IAAI6E,OAHvB,gCACzD,IAAI,EAAJ,qBAAyD,IADA,sCAUzDE,EAAkB,SAACrH,GAAD,OAAWA,EAAM8G,QAAQP,gBAE3Ce,EAAwB,SAACN,GAAD,OAAU,SAAChH,GAAD,OAAWA,EAAM8G,QAAQF,UAAUI,KA0CrEO,GANuB7C,EAlCe,SAACsC,GAAD,OAAUrB,EACpD,CAAClE,IAAsB6F,EAAwBN,GAAOD,EAAoCC,GAAOpF,KACjG,CAAC4F,kBAAmBtG,MAAiBuG,sBAAuBvG,QAC5D,WAA6CwG,EAAgBC,EAAeC,EAA0BrG,GAAgB,IAEhHsG,EAFJL,EAAmH,EAAnHA,kBAAmBC,EAAgG,EAAhGA,sBAanB,MAAO,CAACD,kBAVaA,EAAkBP,eAAc,SAAAO,GACnDK,EAAyBJ,EAAsBR,eAAc,SAAAQ,GAA0B,IAAD,4BAChEG,EAAyBE,IAAIJ,UADmC,QAChB,IADgB,IACpF,IAAI,EAAJ,qBAAwE,CAAC,IAA/DK,EAA8D,QACtEP,EAAkBxF,OAAO+F,GAAQ,eAACC,EAAD,uDAAK,EAAL,OAASA,EAAI,KAC3CL,EAAcG,IAAIC,GAAQ9H,WAAWgI,OAAO1G,GAAYgE,OAAOiC,EAAkBM,IAAIC,IACtFN,EAAsBnF,IAAIyF,IAJsD,qCASvCN,sBAAuBI,MAE1E,WAA6CK,EAAmBP,EAAeC,GAA8B,IAEvGC,EAFJL,EAA0G,EAA1GA,kBAAmBC,EAAuF,EAAvFA,sBAWnB,MAAO,CAACD,kBARaA,EAAkBP,eAAc,SAAAO,GACnDK,EAAyBJ,EAAsBR,eAAc,SAAAQ,GAA0B,IAAD,4BAChEG,EAAyBE,IAAII,UADmC,QACb,IADa,IACpF,IAAI,EAAJ,qBAA2E,CAAC,IAAlEH,EAAiE,QACzEP,EAAkBxF,OAAO+F,GAAQ,eAACC,EAAD,uDAAK,EAAL,OAASA,EAAI,KAC9CP,EAAsBU,OAAOJ,IAHqD,qCAOvCN,sBAAuBI,MAE1E,WAA0BF,GAA1B,IA5FenD,EA4Ff,SAAEiD,sBAAgEW,QA5FnD5D,EA4FoEmD,EA5F7D,SAACI,GAAD,OAAYvD,EAAGsD,IAAIC,GAAQM,aA+FNC,YAAyB,CACpE9B,IAAK9B,EAAY,OACjB+B,OAAQ/B,EAAY,UACpBgC,MAAOhC,EAAY,YAMf6D,EAAe,SAACvI,GAAD,OAAWA,EAAM8G,QAAQH,aACxC6B,EAAc,SAACxI,EAAD,OAASgH,EAAT,EAASA,KAAMe,EAAf,EAAeA,OAAf,OAA2B/H,EAAM8G,QAAQH,YAAYK,GAAMc,IAAIC,IAG7EU,EAAmB,SAACzI,EAAD,OAASgH,EAAT,EAASA,KAAMe,EAAf,EAAeA,OAAf,OAA2B/H,EAAM8G,QAAQP,eAAeS,GAAMtE,IAAIqF,IAGrFW,EAAa/F,YAAY,CAC7BC,KAAM,UACN3B,eACA4B,SAAU,CACR8F,cAAe,SAAC3I,EAAO+C,GACrB/C,EAlHqB,SAACA,EAAOgH,EAAMF,GACvC9G,EAAMuG,eAAeS,GAAMhH,EAAMuG,eAAeS,GAAM7G,MAAM2G,GAiHlD8B,CAAqB5I,EAAO+C,EAAOC,QAAQgE,KAAMjE,EAAOC,QAAQ8D,UAExE+B,eAAgB,SAAC7I,EAAO+C,GACtB/C,EAlHsB,SAACA,EAAOgH,EAAMF,GACxC9G,EAAMuG,eAAeS,GAAMhH,EAAMuG,eAAeS,GAAM9D,SAAS4D,GAiHrDgC,CAAsB9I,EAAO+C,EAAOC,QAAQgE,KAAMjE,EAAOC,QAAQ8D,UAEzEiC,cAAe,SAAC/I,EAAO+C,GACrB/C,EAjHqB,SAACA,EAAOgH,EAAMe,EAAQzH,GAC/CN,EAAM2G,YAAYK,GAAMhH,EAAM2G,YAAYK,GAAMxD,IAAIuE,EAAQzH,GAgHlD0I,CAAqBhJ,EAAO+C,EAAOC,QAAQgE,KAAMjE,EAAOC,QAAQ+E,OAAQhF,EAAOC,QAAQ1C,QAE/F2I,iBAAkB,SAACjJ,EAAO+C,GACxB/C,EAhHwB,SAACA,EAAOgH,EAAMe,GAC1C/H,EAAM2G,YAAYK,GAAMhH,EAAM2G,YAAYK,GAAMiB,OAAOF,GA+G7CmB,CAAwBlJ,EAAO+C,EAAOC,QAAQgE,KAAMjE,EAAOC,QAAQ+E,UAG7E9D,cAAe,SAACC,GACdA,EACCC,QAAQkC,EAAgBjC,SAAS,SAACpE,EAAO+C,GACxCsB,OAAOC,OAAOtE,EAAOiB,MAEtBkD,QAAQkC,EAAgB9B,WAAW,SAACvE,EAAO+C,GAC1C,IAAMyB,EAAKzB,EAAOC,QAClBhD,EAAM4G,UAAYpC,Q,EAK0DkE,EAAajE,QAAhFkE,E,EAAAA,cAAeE,E,EAAAA,eAAgBE,E,EAAAA,cAAeE,E,EAAAA,iBAG9CP,MAAf,S,yOEnHA,SAASS,EAAMC,GAyBb,OAxBA,SAASC,EAAYC,GAAO,IACnBC,EAAQD,EAARC,KACP,GAAU,OAAPD,GAA8B,kBAARA,EACvB,OAAOA,EACF,GAAGA,EAAI,QACZ,OAAOpI,IAAemI,EAAYE,IAC7B,GAAGD,EAAI,OACZ,OAAOpI,IAAcmI,EAAYE,IAC5B,GAAGD,EAAI,OACZ,OAAOpI,IAAqBmI,EAAYE,IACnC,GAAGD,EAAI,OACZ,OAAOpI,IAAcmI,EAAYE,IAC5B,GAAGD,EAAI,UACZ,OAAOpI,IAAqBmI,EAAYE,IACnC,GAAGC,MAAMC,QAAQH,GACtB,OAAOA,EAAKI,IAAIL,GAEhB,IAAIM,EAAI,GACR,IAAI,IAAMC,KAAQN,EAChBK,EAAIC,GAAMP,EAAYC,EAAKM,IAE7B,OAAOD,EAGJN,CAAYQ,KAAKV,MAAMC,I,4BCjD1BU,EAAkBxB,YACtB,CACEyB,eAAgBlI,IAChBY,wBAAyBL,IACzB4H,eAAgB3C,IAChBV,YAAa4B,IACb3B,UAAWC,IACXxF,YAAaK,MAIXuI,EAAOC,IAAa,ICvBX,WACb,OAAO,IAAIC,OAAO,IAA0B,wDDwBxCC,EAAmBxJ,YACvB,qBADuC,uCAEvC,WAAOyJ,EAAP,wBAAAtJ,EAAA,yDAAiBuJ,EAAjB,EAAiBA,SACyBD,EAAjCzD,UAAiCyD,EAAtBhJ,YAAgBR,EADpC,YAC0CwJ,EAD1C,uCAEeE,EAAUD,IAAY,CAACD,mBAFtC,gEAEmDlB,EAFnD,SAE+Dc,EAAOO,WDrBrDC,ECqByE5J,EDGnFgJ,KAAKa,UAvBZ,SAASC,EAAWrB,GAClB,GAAU,OAAPA,GAA8B,kBAARA,EACvB,OAAOA,EAC8B,IAAD,EAEF,EAEc,EAEd,EAEc,EAR3C,GAAGpI,IAAe0J,OAAOtB,GAC9B,OAAO,EAAP,iBAXa,WAWS,GAAtB,qBAAkCE,MAAMqB,KAAKvB,GAAMI,IAAIiB,IAAvD,EACK,GAAGzJ,IAAc4J,MAAMxB,GAC5B,OAAO,EAAP,iBAZY,UAYS,GAArB,qBAAiCE,MAAMqB,KAAKvB,EAAKyB,WAAWrB,IAAIiB,IAAhE,EACK,GAAGzJ,IAAqB8J,aAAa1B,GAC1C,OAAO,EAAP,iBAbmB,UAaS,GAA5B,qBAAwCE,MAAMqB,KAAKvB,EAAKyB,WAAWrB,IAAIiB,IAAvE,EACK,GAAGzJ,IAAc+J,MAAM3B,GAC5B,OAAO,EAAP,iBAdY,UAcS,GAArB,qBAAiCE,MAAMqB,KAAKvB,GAAMI,IAAIiB,IAAtD,EACK,GAAGzJ,IAAqBgK,aAAa5B,GAC1C,OAAO,EAAP,iBAfmB,aAeS,GAA5B,qBAAwCE,MAAMqB,KAAKvB,GAAMI,IAAIiB,IAA7D,EACK,GAAGnB,MAAMC,QAAQH,GACtB,OAAOA,EAAKI,IAAIiB,GAEhB,IAAIhB,EAAI,GACR,IAAI,IAAMC,KAAQN,EAChBK,EAAIC,GAAMe,EAAWrB,EAAKM,IAE5B,OAAOD,EAGWgB,CAAWF,MCLjC,sDAEQU,EAFR,uBAGS,CAACA,WAHV,kCDnBF,IAAmBV,ICmBjB,OAFuC,yDASnCxJ,EAAa,CACjBmK,aAAclK,MACdmK,QAASnK,OAILoK,EAAgB,SAAAtL,GAAK,OAAGA,EAAMqL,QAAQD,cAGtCb,EAAUzI,YACd,CALe,SAAA9B,GAAK,OAAGA,EAAMqL,QAAQA,SAKzB,SAACE,EAAD,YAAKlB,WACjB,SAACgB,EAAShB,GACR,OAAOgB,EAAQvD,IAAI5G,IAAiBmJ,OAIlCmB,EAAa7I,YAAY,CAC7BC,KAAM,UACN3B,eACAgD,cAAe,SAACC,GACdA,EACGC,QAAQiG,EAAmBhG,SAAS,SAACpE,EAAO+C,GAC3C/C,EAAMoL,aAAapL,EAAMoL,aAAaK,KAAK1I,EAAO2I,KAAKC,QAExDxH,QAAQiG,EAAmB7F,WAAW,SAACvE,EAAO+C,GAC7C/C,EAAMqL,QAAQrL,EAAMqL,QAAQ7H,IAAItC,IAAiB6B,EAAO2I,KAAKC,KAAM5I,EAAOC,QAAQmI,WAEnFhH,QAAQiG,EAAmBwB,UAAU,SAAC5L,EAAO+C,GAC5C8I,QAAQC,IAAI/I,EAAOgJ,OACnB/L,EAAMqL,QAAQrL,EAAMqL,QAAQ7H,IAAItC,IAAiB6B,EAAO2I,KAAKC,KAAM5I,EAAOgJ,UAE3E5H,QAAQxD,IAAkByD,SAAS,SAACpE,EAAO+C,GAC1CkH,EAAO+B,kBAAkBjJ,EAAO2I,KAAKC,QAEtCxH,QAAQkC,IAAgBjC,SAAS,SAACpE,EAAO+C,GACxCkH,EAAOgC,gBAAgBlJ,EAAO2I,KAAKC,WAO5BH,MAAf,S,2ME5EMU,EAAQ,SAACC,EAAMC,EAASC,GAC5B,OAAOF,EAAKC,EAAQC,GAAUC,KAAKF,EAAQC,GAAUE,SAEjDC,EAAkB,SAACL,EAAMC,EAASC,EAAUI,GAChD,OAAON,EAAKC,EAAQC,GAAUC,KAAKF,EAAQC,GAAUE,OAAOE,EAAEL,EAAQC,GAAUK,SA4ClF,IAAMC,EAAS,SAACC,GACd,OAAOC,MAAMD,GACVE,MACC,SAAAC,GACE,IAAMC,EAAOD,EAASE,KAAKC,YACvBC,EAAS,GACTC,EAAS,GACPC,EAAY,SAACC,EAAOC,GACxB,IADoC,EAhD9C,SAA6BnE,GAC3B,IADgC,EAC5BoE,EAAM,GACNC,GAAQ,EAERC,EAAc,EACdC,EAAa,EACbrB,EAAI,EACJsB,EAAI,EAPwB,cAQbxE,EAAIyE,SAAS,6CARA,IAQhC,IAAI,EAAJ,qBAA4E,CAAC,IAAnEC,EAAkE,QAG1E,GAFAN,EAAIlB,GAAOkB,EAAIlB,IAAQ,GACvBkB,EAAIlB,GAAKsB,GAAOJ,EAAIlB,GAAKsB,IAAQ,GAC9BE,EAAM,GACP,MAEFN,EAAIlB,GAAKsB,IAAMxE,EAAI2E,UAAUJ,EAAcG,EAAMzF,OAC9CyF,EAAM,IACJL,IACDD,EAAIlB,GAAKsB,IAAM,KAEjBD,EAAaG,EAAMzF,MAAM,GACjByF,EAAM,IACdL,GAAOA,EACPE,EAAaG,EAAMzF,MAAM,GACjByF,EAAM,MACZF,EACFD,EAAaG,EAAMzF,MAAM,GACjByF,EAAM,MACZxB,EACFsB,EAAI,EAEJF,EADAC,EAAaG,EAAMzF,MAAM,IAEjByF,EAAM,IAAMA,EAAM,QACxBxB,EACFsB,EAAI,EAEJF,EADAC,EAAaG,EAAMzF,MAAM,IAlCG,8BAsChC,MAAO,CAACmF,EAAKpE,EAAI2E,UAAUL,IAYYM,CADZb,EAAS,IAAIc,YAAY,SAASC,OAAOZ,IADxB,mBAE7Ba,EAF6B,KAErBC,EAFqB,KAGpC,OAAIb,EAIKY,GAHPhB,EAASiB,EACFD,EAAOE,MAAM,EAAGF,EAAOG,OAAO,KAKzC,OAAO,IAAIC,SAAQ,SAAAC,IAEjB,SAASC,IACP,OAAOzB,EAAO0B,OAAO5B,MAAK,SAAA6B,GACxB,GAAGA,EAAIC,KAGL,OAFAxB,EAASA,EAASyB,OAAOxB,EAAYsB,EAAIrO,OAAO,SAChDkO,EAAQpB,GAGVA,EAASA,EAASyB,OAAOxB,EAAYsB,EAAIrO,QACzCmO,OATJA,U,wBC5DJnI,EAAe,SAAC,GAAoC,IAAnCsG,EAAkC,EAAlCA,IAAKR,EAA6B,EAA7BA,QAASpF,EAAoB,EAApBA,KAAoB,EAAd8H,SACzC,GAAU,SAAP9H,EACD,OAAOuH,QAAQQ,IAAI,CAACnC,GAAD,mBAASR,EAAQ4C,OAAOC,OAAMvF,KAAI,SAAAkD,GAAG,OAAID,EAASC,OAAOE,MAAK,SAAAoC,GAAW,IAAD,cACvDA,GAA3BC,EADkF,KAEnFC,EAFmF,WAE7D1F,KAAI,SAAA2F,GAAU,OAAI/B,IAAM+B,EAAYjD,EAAQkD,iBAAe5F,KAAI,SAAA6F,GAAiB,OAAIA,EAAkB7F,KAAI,SAAA2F,GAAU,OAAInD,EAAQmD,EAAYjD,EAAQ4C,OAAQ,YAElLQ,EAAStO,MAAgB+F,eAAc,SAACuI,GAAc,IAAD,gBACxBJ,EAAUrE,WADc,IACzD,IAAI,EAAJ,qBAAsD,CAAC,IAAD,2BAA3C1C,EAA2C,KAApCgH,EAAoC,mBAChCA,GADgC,IACpD,IAAI,EAAJ,qBAA+B,CAAC,IAAtBtH,EAAqB,QAC7ByH,EAAShM,IAAID,OAAOwE,GAASqE,EAAQ4C,OAAOQ,SAASnH,KAFH,gCADG,kCAQrDoH,EAAiBnC,IAAM6B,EAAW/C,EAAQkD,cAAcI,QAAO,SAAApC,GAAK,OAAI/J,OAAO+J,EAAM,GAAG,OACxF9I,EAAG,CACPgC,IAAK,KACLC,OAAQ,KACRC,MAAO,MA8BT,OA5BAlC,EAAGgC,IAAItF,MAAgB+F,eAAc,SAAA0I,GACnCnL,EAAGiC,OAAOvF,MAAgB+F,eAAc,SAAA2I,GACtCpL,EAAGkC,MAAMxF,MAAgB+F,eAAc,SAAA4I,GACrC,IADmD,EAC7CrL,EAAG,CAACgC,IAAKmJ,EAAWlJ,OAAQmJ,EAAclJ,MAAOmJ,GADJ,cAEjCJ,GAFiC,6BAEzCtD,EAFyC,QAG3C2D,EAAGvM,OAAO2I,EAAQC,EAAMC,EAAS,OACjC2D,EAAWvL,EAAE,UAACgL,EAAS1H,IAAIgI,UAAd,QAAqB,OACxCC,EAAWvM,IAAIsM,EACb,CACElN,KAAMsJ,EAAQC,EAAMC,EAAS,QAC7B4D,OAAQzM,OAAO2I,EAAQC,EAAMC,EAAS,WACtC6D,KAAM1M,OAAO2I,EAAQC,EAAMC,EAAS,SACpC7L,MAAK,UAAEiP,EAAS1H,IAAIgI,UAAf,QAAsB,EAC3BzH,MAAO0H,EAAWxK,KAClBtF,WAAYiB,MAAuB+F,eAAc,SAAChH,GAChD,IAAI,IAAIwM,EAAE,EAAGA,EAAEP,EAAQC,EAAMC,EAAS,mBAAoBK,EAAE,CAC1D,IAAMjK,EAAUe,OAAOiJ,EAAkBL,EAAMC,EAAS,aAAcK,IAChEyD,EAAa3M,OAAOiJ,EAAkBL,EAAMC,EAAS,gBAAiBK,IAC5ExM,EAAWuD,IAAIhB,EAAW0N,UAdpC,IAAI,EAAJ,qBAAoC,IAFe,wCA0BlD1L,MAKPxD,EAAiB,SAAC,GAAoC,IAAnC4L,EAAkC,EAAlCA,IAAKR,EAA6B,EAA7BA,QAASpF,EAAoB,EAApBA,KAAoB,EAAd8H,SAC3C,GAAU,SAAP9H,EACD,OAAO2F,EAASC,GAAKE,MAAK,SAAA3B,GAAM,OAAImC,IAAMnC,EAAQiB,EAAQkD,iBACzDxC,MAAK,SAAAqD,GAAM,MACT,CACC7O,WAAY8K,EAAQ9K,WACpBC,WAAY6K,EAAQ7K,WACpBtB,WAAYiB,IAAqBiP,EAAOT,QAAO,SAAAvD,GAAI,OAAI5I,OAAO2I,EAAQC,EAAMC,EAAS,UAAQ1C,KAAI,SAAAyC,GAAI,MAAI,CACvG5I,OAAO2I,EAAQC,EAAMC,EAAS,OAC9B,CACExJ,KAAMsJ,EAAQC,EAAMC,EAAS,QAC7B4D,OAAQzM,OAAO2I,EAAQC,EAAMC,EAAS,sBAS5CgE,EAAyB,CAC7BxD,IAAKyD,oCACLrJ,KAAM,OACNoF,QAAS,CACPkD,aAAc,EACdQ,GAAI,CAACxD,IAAK,EAAGC,OAAQ,GACrB3J,KAAM,CAAC0J,IAAK,EAAGC,OAAQ,GACvByD,OAAQ,CAAC1D,IAAK,EAAGC,OAAQ,GACzBjL,WAAY,IACZC,WAAY,IAIV+O,EAAuB,CAC3B1D,IAAKyD,sCACLrJ,KAAM,OACNoF,QAAS,CACPkD,aAAc,EACdQ,GAAI,CAACxD,IAAK,EAAGC,OAAQ,GACrB3J,KAAM,CAAC0J,IAAK,EAAGC,OAAQ,GACvByD,OAAQ,CAAC1D,IAAK,EAAGC,OAAQ,GACzB0D,KAAM,CAAC3D,IAAK,EAAGC,OAAQ,GACvBgE,cAAe,CAACjE,IAAK,EAAGC,OAAQ,IAChCtM,WAAY,CAACqM,IAAK,EAAGC,OAAQ,EAAGG,OAAQ,GACxC8D,cAAe,CAAClE,IAAK,EAAGC,OAAQ,EAAGG,OAAQ,GAC3CsC,OAAQ,CACNC,KAAM,CAACoB,qCAAsDA,sCAC7DI,WAAY,EACZX,GAAI,CAACxD,IAAK,EAAGC,OAAQ,GACrBiD,SAAU,CAAC,SAAU,a,gCC5G3B,oBASekB,IAPI,SAACC,GAClB,OACE,yBAAKC,UAAW,SAASD,EAAME,MAAQF,EAAME,MAAM,IAAM,IAAI,WAAWF,EAAMG,IAAM,QAAQH,EAAMG,IAAI,UAAY,KAC/GH,EAAMI,Y,gCCLb,wRAkBM9P,EAAa,CACjB+P,iBAAkB9P,MAClB+P,gBAAiB/P,OAGbgQ,EAAoB,SAAClR,GAAD,OAAWA,EAAMmR,SAASH,kBAC9CI,EAAmB,SAACpR,GAAD,OAAWA,EAAMmR,SAASF,iBAE7CI,EAAoBvP,YACxB,CAACsP,IACD,SAACH,GAAD,OAAqBA,EAAgBzL,QACnC,SAAC0B,EAAoB1E,EAAWuF,GAAhC,OAA2Cb,EAAmBlF,OAAOQ,GAAW,eAACsE,EAAD,uDAAS5F,MAAT,OAA6B4F,EAAQxE,IAAIyF,QAAU7G,UAGjIoQ,EAAgBxP,YACpB,CAACuP,IACD,SAACE,GAAD,OAAsBA,EAAiB7B,QAAO,SAAA5I,GAAO,OAAIA,EAAQvB,KAAK,KAAGC,QACvE,SAACgM,EAAgB1K,GAAjB,OAA6B0K,EAAerR,MAAM2G,KAAU5F,UAI1DuQ,EAAgB9O,YAAY,CAChCC,KAAM,WACN3B,eACA4B,SAAU,CACR6O,sBAAuB,SAAC1R,EAAO+C,IAtCA,SAAC/C,EAAO2R,EAAKrR,GAC9CN,EAAMgR,iBAAiBhR,EAAMgR,iBAAiBxN,IAAImO,EAAM1P,IAAU3B,GAASiD,OAAOjD,GAAS,MAsCvFsR,CAA6B5R,EAAO+C,EAAOC,QAAQ2O,IAAK5O,EAAOC,QAAQ1C,QAEzEuR,kBAAmB,SAAC7R,EAAO+C,IArCA,SAAC/C,EAAO2R,EAAKnP,GAC1CxC,EAAMiR,gBAAgBjR,EAAMiR,gBAAgBzN,IAAImO,EAAKnP,GAqCjDsP,CAAyB9R,EAAO+C,EAAOC,QAAQ2O,IAAK5O,EAAOC,QAAQR,YAErEuP,iBAAkB,SAAC/R,EAAO+C,IApCP,SAAC/C,EAAO2R,GAC7B3R,EAAMiR,gBAAgBjR,EAAMiR,gBAAgBhJ,OAAO0J,GACnD3R,EAAMgR,iBAAiBhR,EAAMgR,iBAAiB/I,OAAO0J,GAmCjDK,CAAiBhS,EAAO+C,EAAOC,QAAQ2O,S,EAKiCF,EAAchN,QAA7EiN,E,EAAAA,sBAAuBG,E,EAAAA,kBAAmBE,E,EAAAA,iBAI1CN,MAAf,S,kDC5BeQ,IA5BK,WAAM,MAGYC,mBAAS,CAC3CC,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,cALO,mBAGjBC,EAHiB,KAGLC,EAHK,KAyBxB,OAjBAC,2BAAgB,WAEb,IAAMC,EAAa,WAElBF,EAAc,CACZN,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,eAQnB,OAHAH,OAAOQ,iBAAiB,SAAUD,GAG3B,kBAAMP,OAAOS,oBAAoB,SAAUF,MACjD,IAEIH,I,gOCfHM,EAASC,IAAMC,MAAK,kBAAM,wDAyCjBC,MAvCf,WACE,IAEMC,EAFWjB,cAEaE,OAAO,IAAM,IAAM,GACjD,OACE,oCACE,kBAACgB,EAAA,EAAD,CAAQC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,QACpC,kBAAC5C,EAAA,EAAD,CAAcI,IAAI,MAChB,kBAACqC,EAAA,EAAOI,MAAR,CAAcC,KAAK,KACjB,yBAAKC,IAAKpD,8BAA+C8B,MAAM,KAAKuB,IAAI,aAG5E,kBAACP,EAAA,EAAOI,MAAR,CAAcC,KAAK,KAAnB,UACA,kBAAC9C,EAAA,EAAD,CAAcI,IAAI,OAClB,kBAACqC,EAAA,EAAOQ,SAAR,CAAiB7D,GAAG,uBAClB,kBAAC8D,EAAA,EAAD,CAAKhD,UAAU,UAAUiD,MAAO,CAAC,SAAY,aAC3C,kBAACD,EAAA,EAAIE,KAAL,CAAUN,KAAK,4CAA4CO,OAAO,UAAlE,QACA,kBAACH,EAAA,EAAIE,KAAL,CAAUN,KAAK,yDAAyDO,OAAO,UAA/E,UACA,kBAACH,EAAA,EAAIE,KAAL,CAAUN,KAAK,oCAAoCO,OAAO,UAA1D,aAIN,kBAAC,WAAD,CAAUC,SAAU,yBAAKH,MAAO,CAAC,OAAW,iBApB7B,GAoB2DX,GAAc,UACtF,kBAACJ,EAAD,CAAQmB,aArBK,GAqBuBf,aAAcA,KAEpD,4BAAQtC,UAAU,kCAChB,kBAACsD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,0BAAMxD,UAAU,cAAhB,mCChCMyD,QACW,cAA7BjC,OAAOkC,SAASC,UAEe,UAA7BnC,OAAOkC,SAASC,UAEhBnC,OAAOkC,SAASC,SAASzG,MACvB,2D,4CCTA0G,EAAc,SAAC,GAAW,IAAVxN,EAAS,EAATA,KACpB,OAAOA,EAAKyN,SAAS,aAAgBzN,EAAKyN,SAAS,eAAgBzN,EAAKyN,SAAS,cAG7EC,EAAsB,SAACC,GAAD,OAAWA,EAAMvQ,QAAQ4C,KAAK+G,UAAU,EAAG4G,EAAMvQ,QAAQ4C,KAAK4N,YAAY,OAChGC,GAAY,mBACfH,EAAsB/T,KAAsB,eAD7B,cAEf+T,EAAsBrO,KAAoB,aAF3B,cAGfqO,EAAsBtK,KAAuB,mBAH9B,GA4BH0K,EAtBInS,YAAY,CAC7BC,KAAM,UACN3B,aAAc,CACZI,YAlBU,UAmBVuF,UAnBU,UAoBVmO,gBAnBY,aAqBd9Q,cAAe,SAAAC,GACbA,EACG8Q,WAAWR,GAAe,SAACxU,EAAD,GAAkB,IAATgH,EAAQ,EAARA,KAClChH,EAAM6U,EAAa7N,EAAK+G,UAAU,EAAG/G,EAAK4N,YAAY,QAAQ5N,EAAK+G,UAAU/G,EAAK4N,YAAY,KAAK,SAY3G,Q,wBC3BMK,EAAQC,YAAgB,CAC5BjV,eACAkV,UACArO,YACAqK,aACA9F,cAEI+J,EAAQC,YAAe,CAC3BJ,UACAK,WAAYC,YAAqB,CAC/BC,mBAAmB,EACnBC,gBAAgB,MAYdC,EAASC,SAASC,eAAe,QACvCC,IAASC,OACP,kBAAC,IAAD,CAAUV,MAAOA,GACf,kBAAC,EAAD,OACWM,GFyFT,kBAAmBK,WACrBA,UAAUC,cAAcC,MACrBnJ,MAAK,SAAAoJ,GACJA,EAAaC,gBAEdC,OAAM,SAAArK,GACLF,QAAQE,MAAMA,EAAMsK,c","file":"static/js/main.4a871afd.chunk.js","sourcesContent":["import * as Immutable from 'immutable';\r\nimport is_number from 'is-number';\r\n\r\nimport { createSlice, createAsyncThunk, createSelector } from '@reduxjs/toolkit'\r\n\r\nimport {fetchComponentDB} from \"../fetchDBs.js\";\r\n\r\nconst addComponentsReducer=(state, components) => {\r\n  state.present=state.present.union(components);\r\n};\r\n\r\nconst removeComponentsReducer=(state, components) => {\r\n  state.present=state.present.subtract(components);\r\n  state.conc=state.conc.deleteAll(components);\r\n\r\n};\r\nconst setComponentConcReducer=(state, component, value) => {\r\n  const numberValue = is_number(value) ? Number(value) : null;\r\n  state.conc=state.conc.set(component, numberValue);\r\n};\r\n\r\nconst putComponentsAtEquilibriumReducer=(state, component) => {\r\n  state.atEquilibrium=state.atEquilibrium.union(component);\r\n};\r\nconst removeComponentsFromEquilibriumReducer=(state, component) => {\r\n  state.atEquilibrium=state.atEquilibrium.subtract(component);\r\n};\r\n\r\nconst hPlusOptions={\r\n  totalH: { value: \"unique_1\", label: 'totalH' },\r\n  ph: { value: \"unique_2\", label: 'pH' },\r\n  alk: { value: \"unique_3\", label: 'Alkalinity^1' },\r\n  otherAlk: { value: \"unique_4\", label: 'Other Alkalinity' },\r\n};\r\n\r\nconst hPlusOptionChangedReducer=(state, val) => {\r\n  state.hPlusOption=val;\r\n};\r\n\r\nconst getNewComponentDB=createAsyncThunk(\r\n  \"getNewComponentDB\",\r\n  async (args, thunkAPI) => {\r\n    return fetchComponentDB(args);\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  present: Immutable.OrderedSet(),\r\n  conc: Immutable.Map(),\r\n  atEquilibrium: Immutable.Set(),\r\n  componentDB: {\r\n    components: null,\r\n    hPlusValue: null,\r\n    waterValue: null,\r\n  },\r\n  hPlusOption: hPlusOptions.totalH, \r\n};\r\n\r\nconst getComponentsPresent = (state) => state.components.present;\r\nconst getComponentDB = (state) => state.components.componentDB;\r\nconst getHPlusOption = (state) => state.components.hPlusOption;\r\nconst getWaterValue = (state) => getComponentDB(state).waterValue;\r\n\r\nconst getComponentsConc = createSelector(\r\n  [\r\n    (state) => state.components.conc,\r\n    getComponentDB,\r\n    getHPlusOption,\r\n  ],\r\n  (concs, componentDB, hPlusOption) => {\r\n    if(hPlusOption===hPlusOptions.ph){\r\n      return concs.update(componentDB.hPlusValue, ph => is_number(ph) ? Math.pow(10, -ph) : ph);\r\n    } else {\r\n      return concs;\r\n    }\r\n  }\r\n);\r\n\r\nconst getComponentsAtEquilibrium = createSelector(\r\n  [\r\n    (state) => state.components.atEquilibrium,\r\n    getComponentDB,\r\n    getHPlusOption,\r\n  ],\r\n  (equilComponents, componentDB, hPlusOption) => {\r\n    if(hPlusOption===hPlusOptions.ph) {\r\n      return equilComponents.add(componentDB.hPlusValue);\r\n    } else {\r\n      return equilComponents;\r\n    }\r\n  }\r\n);\r\n\r\nconst isComponentAtEquilibrium=createSelector(\r\n  [\r\n    getComponentsAtEquilibrium,\r\n    (state, {component}) => component,\r\n  ],\r\n  (componentsAtEquilibrium, component) => componentsAtEquilibrium.has(component)\r\n);\r\n\r\n\r\n\r\nconst componentsSlice= createSlice({\r\n  name: \"components\",\r\n  initialState,\r\n  reducers: {\r\n    addComponents: (state, action) => {\r\n      addComponentsReducer(state, action.payload)\r\n    },\r\n    removeComponents: (state, action) => {\r\n      removeComponentsReducer(state, action.payload)\r\n    },\r\n    componentValueChanged: (state, action) => {\r\n      setComponentConcReducer(state, action.payload.component, action.payload.value)\r\n    },\r\n    putComponentsAtEquilibrium: (state, action) => {\r\n      putComponentsAtEquilibriumReducer(state, action.payload)\r\n    },\r\n    removeComponentsFromEquilibrium: (state, action) => {\r\n      removeComponentsFromEquilibriumReducer(state, action.payload)\r\n    },\r\n    hPlusOptionChanged: (state, action) => {\r\n      hPlusOptionChangedReducer(state, action.payload)\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getNewComponentDB.pending, (state, action) => {\r\n        Object.assign(state, initialState);\r\n      })\r\n      .addCase(getNewComponentDB.fulfilled, (state, action) => {\r\n        const db = action.payload;\r\n        state.componentDB=db;\r\n        addComponentsReducer(state, [db.hPlusValue]);\r\n      })\r\n  }\r\n});\r\n\r\nexport const { addComponents, removeComponents, componentValueChanged, putComponentsAtEquilibrium, removeComponentsFromEquilibrium, hPlusOptionChanged } = componentsSlice.actions;\r\nexport { getComponentsPresent, getComponentsConc, getComponentsAtEquilibrium, getWaterValue, isComponentAtEquilibrium, getComponentDB, getHPlusOption }\r\nexport { getNewComponentDB };\r\nexport { hPlusOptions };\r\nexport default componentsSlice.reducer;\r\n","import * as Immutable from 'immutable';\r\n\r\nimport { createSlice, createAsyncThunk, createSelector } from '@reduxjs/toolkit'\r\nimport { getComponentsPresent, getWaterValue } from '../components/componentsSlice.js';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { createDiffSelector } from '../../utils/createDiffSelector.js';\r\nimport { fetchSpeciesDB } from '../fetchDBs.js';\r\n\r\nconst indexSort=(db) => (specie) => db.get(specie).index;\r\n\r\nconst enableSpeciesReducer=(state, type, species) => {\r\n  state.speciesEnabled[type]=state.speciesEnabled[type].union(species);\r\n}\r\nconst disableSpeciesReducer=(state, type, species) => {\r\n  state.speciesEnabled[type]=state.speciesEnabled[type].subtract(species);\r\n}\r\n\r\nconst addLogKChangeReducer=(state, type, specie, value) => {\r\n  state.logKChanges[type]=state.logKChanges[type].set(specie, value);\r\n}\r\n\r\nconst removeLogKChangeReducer=(state, type, specie) => {\r\n  state.logKChanges[type]=state.logKChanges[type].delete(specie);\r\n}\r\n\r\nconst getNewSpeciesDB=createAsyncThunk(\r\n  \"getNewSpeciesDB\",\r\n  async (args, thunkAPI) => {\r\n    return fetchSpeciesDB(args);\r\n  }\r\n);\r\n\r\nconst initialState={\r\n  speciesEnabled: {\r\n    aqs: Immutable.Set(),\r\n    solids: Immutable.Set(),\r\n    gases: Immutable.Set(),\r\n  },\r\n  logKChanges: {\r\n    aqs: Immutable.Map(),\r\n    solids: Immutable.Map(),\r\n    gases: Immutable.Map(),\r\n  },\r\n  speciesDB: {\r\n    aqs: null,\r\n    solids: null,\r\n    gases: null,\r\n  }\r\n};\r\n\r\nconst getSpeciesDB=(state) => state.species.speciesDB;\r\n\r\nconst getComponentsToSpeciesOfTypeFactory= (type) => createSelector(\r\n  [getSpeciesDB],\r\n  (speciesDB) => {\r\n    return Immutable.Map().withMutations(componentToSpecies => {\r\n      for(const [speciesId, {components}] of speciesDB[type]) {\r\n        for(const [component] of components) {\r\n          componentToSpecies.update(component, (oldSet=Immutable.Set()) => oldSet.add(speciesId));\r\n        }\r\n      }\r\n    });\r\n  }\r\n)\r\n\r\nconst getSpeciesPresent=(state) => state.species.speciesEnabled;\r\n\r\nconst getSpeciesOfTypeFactory=(type) => (state) => state.species.speciesDB[type];\r\n\r\nconst getSpeciesCouldBePresentOfTypeFactory=(type) => createDiffSelector(\r\n  [getComponentsPresent, getSpeciesOfTypeFactory(type), getComponentsToSpeciesOfTypeFactory(type), getWaterValue], //deps\r\n  {speciesOccurences: Immutable.Map(), speciesCouldBePresent: Immutable.OrderedSet()}, //initial of reducer\r\n  ({speciesOccurences, speciesCouldBePresent}, componentToAdd, speciesOfType, componentToSpeciesOfType, waterValue) => {  //addReducer\r\n    let newSpeciesOccurences;\r\n    let newSpeciesCouldBePresent;\r\n    newSpeciesOccurences=speciesOccurences.withMutations(speciesOccurences => {\r\n      newSpeciesCouldBePresent=speciesCouldBePresent.withMutations(speciesCouldBePresent => {\r\n        for(const specie of componentToSpeciesOfType.get(componentToAdd) ?? []) {\r\n          speciesOccurences.update(specie, (num=0)=>num+1);\r\n          if(speciesOfType.get(specie).components.delete(waterValue).size===speciesOccurences.get(specie)){\r\n            speciesCouldBePresent.add(specie);\r\n          }\r\n        }\r\n      })\r\n    })\r\n    return {speciesOccurences: newSpeciesOccurences, speciesCouldBePresent: newSpeciesCouldBePresent};\r\n  },\r\n  ({speciesOccurences, speciesCouldBePresent}, componentToRemove, speciesOfType, componentToSpeciesOfType) => {  //removeReducer\r\n    let newSpeciesOccurences;\r\n    let newSpeciesCouldBePresent;\r\n    newSpeciesOccurences=speciesOccurences.withMutations(speciesOccurences => {\r\n      newSpeciesCouldBePresent=speciesCouldBePresent.withMutations(speciesCouldBePresent => {\r\n        for(const specie of componentToSpeciesOfType.get(componentToRemove) ?? []) {\r\n          speciesOccurences.update(specie, (num=0)=>num-1);\r\n          speciesCouldBePresent.remove(specie);\r\n        }\r\n      })\r\n    })\r\n    return {speciesOccurences: newSpeciesOccurences, speciesCouldBePresent: newSpeciesCouldBePresent};\r\n  },\r\n  ({speciesCouldBePresent}, speciesOfType) => speciesCouldBePresent.sortBy(indexSort(speciesOfType)) //final function\r\n);\r\n\r\nconst speciesFactoryFactory=(typeFactory) => createStructuredSelector({\r\n  aqs: typeFactory(\"aqs\"),\r\n  solids: typeFactory(\"solids\"),\r\n  gases: typeFactory(\"gases\"),\r\n})\r\n\r\nconst getSpeciesCouldBePresent=speciesFactoryFactory(getSpeciesCouldBePresentOfTypeFactory);\r\n\r\n\r\nconst getLogKChanges=(state) => state.species.logKChanges;\r\nconst getLogKChange=(state, {type, specie}) => state.species.logKChanges[type].get(specie);\r\n\r\n\r\nconst getIfSpecieEnabled=(state, {type, specie}) => state.species.speciesEnabled[type].has(specie);\r\n\r\n\r\nconst speciesSlice=createSlice({\r\n  name: \"species\",\r\n  initialState,\r\n  reducers: {\r\n    enableSpecies: (state, action) => {\r\n      state=enableSpeciesReducer(state, action.payload.type, action.payload.species);\r\n    },\r\n    disableSpecies: (state, action) => {\r\n      state=disableSpeciesReducer(state, action.payload.type, action.payload.species);\r\n    },\r\n    addLogKChange: (state, action) => {\r\n      state=addLogKChangeReducer(state, action.payload.type, action.payload.specie, action.payload.value);\r\n    },\r\n    removeLogKChange: (state, action) => {\r\n      state=removeLogKChangeReducer(state, action.payload.type, action.payload.specie);\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n    .addCase(getNewSpeciesDB.pending, (state, action) => {\r\n      Object.assign(state, initialState);\r\n    })\r\n    .addCase(getNewSpeciesDB.fulfilled, (state, action) => {\r\n      const db = action.payload;\r\n      state.speciesDB = db;\r\n    })\r\n  },\r\n});\r\n\r\nexport const { enableSpecies, disableSpecies, addLogKChange, removeLogKChange } = speciesSlice.actions;\r\nexport { getSpeciesCouldBePresent, getSpeciesPresent, getSpeciesDB, getLogKChanges, getIfSpecieEnabled, getLogKChange };\r\nexport { getNewSpeciesDB };\r\nexport default speciesSlice.reducer;","import * as Immutable from \"immutable\";\r\nimport { createSelectorCreator, defaultMemoize } from \"reselect\";\r\nimport { shallowEqualArrays } from \"shallow-equal\";\r\n\r\nconst diffMemoize=(fn, initial, addReducer, removeReducer) => {\r\n  let oldArgs=null;\r\n  let oldFirstArg=null;\r\n  let reduceResult=null;\r\n  return (firstArg, ...args) => {\r\n    if(!shallowEqualArrays(oldArgs, args)){\r\n      oldFirstArg=Immutable.Set();\r\n      reduceResult=initial;\r\n      oldArgs=args;\r\n    }\r\n    const added=firstArg.subtract(oldFirstArg);\r\n    const removed=oldFirstArg.subtract(firstArg);\r\n    if(added.size){\r\n      reduceResult=added.reduce((prev, curr) => addReducer(prev, curr, ...args), reduceResult);\r\n    }\r\n    if(removed.size){\r\n      reduceResult=removed.reduce((prev, curr) => removeReducer(prev, curr, ...args), reduceResult);\r\n    }\r\n    oldFirstArg=firstArg;\r\n    return fn(reduceResult, ...args);\r\n  }\r\n}\r\n\r\nconst my_createSelectorCreator = (memoize, ...memoizeOptions) => {\r\n  return createSelectorCreator((fn, mapmem) => {\r\n    if(mapmem===true){\r\n      return memoize(fn, ...memoizeOptions);\r\n    } else {\r\n      return defaultMemoize(fn);\r\n    }\r\n  }, true);\r\n}\r\n\r\nconst createDiffSelector=(args, initial, addFunc, removeFunc, finalFunc) => {\r\n  return my_createSelectorCreator(diffMemoize, initial, addFunc, removeFunc)(args, finalFunc);\r\n}\r\nexport {createDiffSelector};","import * as Immutable from \"immutable\";\r\n\r\nconst isImmuList = \"_ImList\";\r\nconst isImmuMap = \"_ImMap\";\r\nconst isImmuOrderedMap = \"_ImOrd\";\r\nconst isImmuSet = \"_ImSet\";\r\nconst isImmuOrderedSet = \"_ImOrdSet\";\r\n\r\nfunction stringify(obj) {\r\n  function toPlainObj(immu) {\r\n    if(immu===null || typeof immu !==\"object\"){\r\n      return immu\r\n    } else if(Immutable.List.isList(immu)){\r\n      return {[isImmuList]: true, data: Array.from(immu).map(toPlainObj)};\r\n    } else if(Immutable.Map.isMap(immu)){\r\n      return {[isImmuMap]: true, data: Array.from(immu.entries()).map(toPlainObj)};\r\n    } else if(Immutable.OrderedMap.isOrderedMap(immu)){\r\n      return {[isImmuOrderedMap]: true, data: Array.from(immu.entries()).map(toPlainObj)};\r\n    } else if(Immutable.Set.isSet(immu)){\r\n      return {[isImmuSet]: true, data: Array.from(immu).map(toPlainObj)};\r\n    } else if(Immutable.OrderedSet.isOrderedSet(immu)){\r\n      return {[isImmuOrderedSet]: true, data: Array.from(immu).map(toPlainObj)};\r\n    } else if(Array.isArray(immu)){\r\n      return immu.map(toPlainObj);\r\n    } else {\r\n      let ret={};\r\n      for(const prop in immu){\r\n        ret[prop]=toPlainObj(immu[prop]);\r\n      }\r\n      return ret;\r\n    }\r\n  }\r\n  return JSON.stringify(toPlainObj(obj))\r\n}\r\n\r\n\r\nfunction parse(str) {\r\n  function toImmutable(immu) {\r\n    const {data} = immu;\r\n    if(immu===null || typeof immu !==\"object\"){\r\n      return immu;\r\n    } else if(immu[isImmuList]) {\r\n      return Immutable.List(toImmutable(data));\r\n    } else if(immu[isImmuMap]){\r\n      return Immutable.Map(toImmutable(data));\r\n    } else if(immu[isImmuOrderedMap]){\r\n      return Immutable.OrderedMap(toImmutable(data));\r\n    } else if(immu[isImmuSet]){\r\n      return Immutable.Set(toImmutable(data))\r\n    } else if(immu[isImmuOrderedSet]){\r\n      return Immutable.OrderedSet(toImmutable(data));\r\n    } else if(Array.isArray(immu)){\r\n      return immu.map(toImmutable);\r\n    } else {\r\n      let ret={};\r\n      for(const prop in immu){\r\n        ret[prop]=toImmutable(immu[prop]);\r\n      }\r\n      return ret;\r\n    }\r\n  }\r\n  return toImmutable(JSON.parse(str));\r\n}\r\n\r\nexport {stringify, parse};","import * as Immutable from 'immutable';\r\nimport { createAsyncThunk, createSelector, createSlice } from \"@reduxjs/toolkit\";\r\nimport {stringify, parse} from \"../../utils/serialize-immutable-deep.js\";\r\n\r\n//eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport ConcentrationCalculator from 'worker-loader!./CalculateResultWorker.js'\r\nimport { getComponentDB, getComponentsAtEquilibrium, getComponentsConc, getNewComponentDB } from '../components/componentsSlice';\r\nimport { getLogKChanges, getSpeciesDB, getNewSpeciesDB, getSpeciesPresent } from '../species/speciesSlice';\r\n\r\nimport * as Comlink from \"comlink\";\r\nimport { createStructuredSelector } from 'reselect';\r\n\r\nconst getCurrentContext=createStructuredSelector(\r\n  {\r\n    componentsConc: getComponentsConc,\r\n    componentsAtEquilibrium: getComponentsAtEquilibrium,\r\n    speciesPresent: getSpeciesPresent,\r\n    logKChanges: getLogKChanges,\r\n    speciesDB: getSpeciesDB,\r\n    componentDB: getComponentDB,\r\n  }\r\n)\r\n\r\nconst worker=Comlink.wrap(new ConcentrationCalculator());\r\n\r\nconst calculateNewResult=createAsyncThunk(\r\n  \"calculateNewResult\",\r\n  async (context, {getState}) => {\r\n    const {speciesDB, componentDB, ...args}=context;\r\n    const result=getResult(getState(), {context}) ?? parse(await worker.calculate(stringify(args)));\r\n    return {result};\r\n  }\r\n);\r\n\r\nconst initialState={\r\n  calculations: Immutable.List(),\r\n  results: Immutable.Map(),\r\n}\r\n\r\nconst getResults=state=> state.results.results;\r\nconst getCalculations=state=> state.results.calculations;\r\n\r\n\r\nconst getResult=createSelector(\r\n  [getResults,(_, {context}) => context],\r\n  (results, context) => {\r\n    return results.get(Immutable.fromJS(context));\r\n  }\r\n)\r\n\r\nconst resultsSlice=createSlice({\r\n  name: \"results\",\r\n  initialState,\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(calculateNewResult.pending, (state, action) => {\r\n        state.calculations=state.calculations.push(action.meta.arg);\r\n      })\r\n      .addCase(calculateNewResult.fulfilled, (state, action) => {\r\n        state.results=state.results.set(Immutable.fromJS(action.meta.arg), action.payload.result);\r\n      })   \r\n      .addCase(calculateNewResult.rejected, (state, action) => {\r\n        console.log(action.error);\r\n        state.results=state.results.set(Immutable.fromJS(action.meta.arg), action.error);\r\n      })\r\n      .addCase(getNewComponentDB.pending, (state, action) => {\r\n        worker.changeComponentDB(action.meta.arg)\r\n      })   \r\n      .addCase(getNewSpeciesDB.pending, (state, action) => {\r\n        worker.changeSpeciesDB(action.meta.arg)\r\n      })   \r\n  }\r\n});\r\n\r\nexport {calculateNewResult};\r\nexport {getResult, getCurrentContext, getCalculations};\r\nexport default resultsSlice.reducer;","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/CalculateResultWorker.0713872e.worker.js\");\n}\n","const getData=(item, options, property) => {\r\n  return item[options[property].row][options[property].column];\r\n}\r\nconst getDataWithStride=(item, options, property, i) => {\r\n  return item[options[property].row][options[property].column+i*options[property].stride];\r\n}\r\n\r\nfunction parseCSVWithPartial(str) {\r\n  let arr = [];\r\n  let quote = false;\r\n\r\n  let lastLineStart=0;\r\n  let lastMatchEnd=0;\r\n  let row=0;\r\n  let col=0;\r\n  for(const match of str.matchAll(/(\"\")|(\")|(,)|(?:(\\r\\n)|(\\n)|(\\r))($)?|$/g)){\r\n    arr[row] = arr[row] || [];\r\n    arr[row][col] = arr[row][col] || '';\r\n    if(match[7]){\r\n      break;\r\n    }\r\n    arr[row][col]+=str.substring(lastMatchEnd, match.index);\r\n    if(match[1]){\r\n      if(quote){\r\n        arr[row][col]+='\"';\r\n      }\r\n      lastMatchEnd=match.index+2;\r\n    } else if(match[2]){\r\n      quote=!quote;\r\n      lastMatchEnd=match.index+1;\r\n    } else if(match[3]){\r\n      ++col;\r\n      lastMatchEnd=match.index+1;\r\n    } else if(match[4]) {\r\n      ++row;\r\n      col=0;\r\n      lastMatchEnd=match.index+2;\r\n      lastLineStart=lastMatchEnd;\r\n    } else if(match[5] || match[6]) {\r\n      ++row;\r\n      col=0;\r\n      lastMatchEnd=match.index+1;\r\n      lastLineStart=lastMatchEnd;\r\n    }\r\n  }\r\n  return [arr, str.substring(lastLineStart)];\r\n}\r\n\r\nconst fetchCSV=(url) => {\r\n  return fetch(url)\r\n    .then(\r\n      response => {\r\n        const reader=response.body.getReader();\r\n        let lastLine=\"\";\r\n        let csvBuilt=[];\r\n        const chunkParser=(chunk, partial) => {\r\n          const decodedChunk=lastLine+new TextDecoder(\"utf-8\").decode(chunk);\r\n          const [parsed, thisLastLine] = parseCSVWithPartial(decodedChunk);\r\n          if(!partial) {\r\n            lastLine=thisLastLine;\r\n            return parsed.slice(0, parsed.length-1);\r\n          } else {\r\n            return parsed;\r\n          }\r\n        }\r\n        return new Promise(resolve => {\r\n          pump();\r\n          function pump() {\r\n            return reader.read().then(res => {\r\n              if(res.done) {\r\n                csvBuilt=csvBuilt.concat(chunkParser(res.value, true));\r\n                resolve(csvBuilt);\r\n                return;\r\n              }\r\n              csvBuilt=csvBuilt.concat(chunkParser(res.value));\r\n              pump();\r\n            })\r\n          }\r\n        })\r\n      }\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport {getData, getDataWithStride, fetchCSV};","import { fetchCSV, getData, getDataWithStride } from '../utils/readCSV.js';\r\nimport chunk from \"chunk\";\r\n\r\nimport * as Immutable from 'immutable';\r\n\r\n\r\nconst fetchSpeciesDB=({url, options, type, callback}) => {\r\n  if(type===\"link\") {\r\n    return Promise.all([url, ...options.labels.urls].map(url => fetchCSV(url))).then(tables => {\r\n      const [mainTable, ...labelTables]=tables;\r\n      const labelList=labelTables.map(labelTable => chunk(labelTable, options.linesPerItem)).map(chunkedLabelTable => chunkedLabelTable.map(labelTable => getData(labelTable, options.labels, \"id\")));\r\n\r\n      const labelMap=Immutable.Map().withMutations((labelMap) => {\r\n        for(const [index, labelTable] of labelList.entries()) {\r\n          for(const specie of labelTable){\r\n            labelMap.set(Number(specie), options.labels.labelMap[index]);\r\n          }\r\n        };\r\n      });\r\n      \r\n      const chunkedMainTable=chunk(mainTable, options.linesPerItem).filter(chunk => Number(chunk[0][0]));\r\n      const db={\r\n        aqs: null,\r\n        solids: null,\r\n        gases: null,\r\n      }\r\n      db.aqs=Immutable.Map().withMutations(aqSpecies => {  \r\n        db.solids=Immutable.Map().withMutations(solidSpecies => {\r\n          db.gases=Immutable.Map().withMutations(gasSpecies => {\r\n            const db={aqs: aqSpecies, solids: solidSpecies, gases: gasSpecies};\r\n            for(const item of chunkedMainTable){\r\n              const id=Number(getData(item, options, \"id\"));\r\n              const dbAddingTo=db[labelMap.get(id) ?? \"aqs\"]\r\n              dbAddingTo.set(id, \r\n                {\r\n                  name: getData(item, options, \"name\"),\r\n                  charge: Number(getData(item, options, \"charge\")),\r\n                  logK: Number(getData(item, options, \"logK\")),\r\n                  label: labelMap.get(id) ?? 0,\r\n                  index: dbAddingTo.size,\r\n                  components: Immutable.OrderedMap().withMutations((components) => {\r\n                    for(let i=0; i<getData(item, options, \"numComponents\"); ++i){\r\n                      const component=Number(getDataWithStride(item, options, \"components\", i));\r\n                      const componentAmt=Number(getDataWithStride(item, options, \"componentAmts\", i));\r\n                      components.set(component, componentAmt);\r\n                    }\r\n                  }),\r\n                }\r\n              )\r\n            }\r\n          });\r\n        });\r\n      });\r\n      \r\n      return db;\r\n    })\r\n  }\r\n}\r\n\r\nconst fetchComponentDB=({url, options, type, callback}) => {\r\n  if(type===\"link\") {\r\n    return fetchCSV(url).then(result => chunk(result, options.linesPerItem))\r\n    .then(chunks => \r\n      ({\r\n        hPlusValue: options.hPlusValue, \r\n        waterValue: options.waterValue,\r\n        components: Immutable.OrderedMap(chunks.filter(item => Number(getData(item, options, \"id\"))).map(item => [\r\n          Number(getData(item, options, \"id\")),\r\n          {\r\n            name: getData(item, options, \"name\"), \r\n            charge: Number(getData(item, options, \"charge\")),\r\n          }\r\n        ]))\r\n      })\r\n    )\r\n    \r\n  }\r\n}\r\n\r\nconst componentDBDefaultParams={\r\n  url: process.env.PUBLIC_URL+\"/assets/defaultdb/comp.vdb\", \r\n  type: \"link\",\r\n  options: {\r\n    linesPerItem: 1,\r\n    id: {row: 0, column: 0},\r\n    name: {row: 0, column: 1},\r\n    charge: {row: 0, column: 2},\r\n    hPlusValue: 330,\r\n    waterValue: 2,\r\n  }, \r\n};\r\n\r\nconst speciesDBDefaultParams={\r\n  url: process.env.PUBLIC_URL+\"/assets/defaultdb/thermo.vdb\", \r\n  type: \"link\",\r\n  options: {\r\n    linesPerItem: 3,\r\n    id: {row: 0, column: 0},\r\n    name: {row: 0, column: 1},\r\n    charge: {row: 0, column: 6},\r\n    logK: {row: 0, column: 3},\r\n    numComponents: {row: 0, column: 10},\r\n    components: {row: 1, column: 1, stride: 2},\r\n    componentAmts: {row: 1, column: 0, stride: 2},\r\n    labels: {\r\n      urls: [process.env.PUBLIC_URL+\"/assets/defaultdb/type6.vdb\", process.env.PUBLIC_URL+\"/assets/defaultdb/gases.vdb\"],\r\n      linesPerId: 3,\r\n      id: {row: 0, column: 0},\r\n      labelMap: [\"solids\", \"gases\"]\r\n    }\r\n  }, \r\n};\r\n\r\nexport {fetchSpeciesDB, fetchComponentDB, speciesDBDefaultParams, componentDBDefaultParams};","import React from 'react';\r\n\r\nconst CenteringDiv=(props) => {\r\n  return (\r\n    <div className={\"flex-\"+(props.start ? props.start+\"-\" : \"\")+\"grow-1 \"+(props.end ? \"flex-\"+props.end+\"-grow-0\" : \"\")}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\nexport default CenteringDiv;","import * as Immutable from 'immutable';\r\nimport is_number from 'is-number';\r\n\r\nimport { createSlice, createSelector } from '@reduxjs/toolkit'\r\n\r\nconst setGasPartialPressureReducer=(state, gas, value) => {\r\n  state.partialPressures=state.partialPressures.set(gas,  is_number(value) ? Number(value) : null);\r\n}\r\n\r\nconst setGasReplacementReducer=(state, gas, component) => {\r\n  state.gasReplacements=state.gasReplacements.set(gas, component);\r\n}\r\n\r\nconst deleteGasReducer=(state, gas) => {\r\n  state.gasReplacements=state.gasReplacements.delete(gas);\r\n  state.partialPressures=state.partialPressures.delete(gas);\r\n}\r\n\r\nconst initialState={\r\n  partialPressures: Immutable.Map(),\r\n  gasReplacements: Immutable.Map(),\r\n}\r\n\r\nconst getPartialPressures=(state) => state.gasInput.partialPressures;\r\nconst getGasReplacements=(state) => state.gasInput.gasReplacements;\r\n\r\nconst getComponentToGases=createSelector(\r\n  [getGasReplacements],\r\n  (gasReplacements) => gasReplacements.reduce(\r\n    (componentToSpecies, component, specie) => componentToSpecies.update(component, (species=Immutable.Set()) => species.add(specie)), Immutable.Map()\r\n  )\r\n)\r\nconst getErroredGases=createSelector(\r\n  [getComponentToGases],\r\n  (componentToGases) => componentToGases.filter(species => species.size>1).reduce(\r\n    (erroredSpecies, species) => erroredSpecies.union(species), Immutable.Set()\r\n  )\r\n);\r\n\r\nconst gasInputSlice = createSlice({\r\n  name: \"gasInput\",\r\n  initialState,\r\n  reducers: {\r\n    setGasPartialPressure: (state, action) => {\r\n      setGasPartialPressureReducer(state, action.payload.gas, action.payload.value)\r\n    },\r\n    setGasReplacement: (state, action) => {\r\n      setGasReplacementReducer(state, action.payload.gas, action.payload.component)\r\n    },\r\n    removeEnabledGas: (state, action) => {\r\n      deleteGasReducer(state, action.payload.gas)\r\n    }\r\n  },\r\n});\r\n\r\nexport const { setGasPartialPressure, setGasReplacement, removeEnabledGas } = gasInputSlice.actions;\r\n\r\nexport { getPartialPressures, getComponentToGases, getGasReplacements, getErroredGases }\r\n\r\nexport default gasInputSlice.reducer;","import { useState, useLayoutEffect } from \"react\";\r\n\r\n\r\nconst useWindowSize=() => {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    // Handler to call on window resize\r\n     const handleResize=()=>{\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    \r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n    \r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n\r\n  return windowSize;\r\n}\r\n\r\nexport default useWindowSize;","import React, { Suspense } from 'react';\r\n\r\nimport './App.scss';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport CenteringDiv from './utils/CenteringDiv.js';\r\nimport useWindowSize from './utils/useWindowSize.js';\r\n\r\nconst FreeQL = React.lazy(() => import(\"./FreeQL.js\"));\r\n\r\nfunction App() {\r\n  const windowSize=useWindowSize();\r\n  const headerHeight=56;\r\n  const footerHeight=windowSize.width>=768 ? 120 : 72;\r\n  return (\r\n    <>\r\n      <Navbar expand=\"sm\" bg=\"dark\" variant=\"dark\">\r\n        <CenteringDiv end=\"sm\">\r\n          <Navbar.Brand href=\"/\">\r\n            <img src={process.env.PUBLIC_URL+\"/assets/img/logo.svg\"} width=\"65\" alt=\"FreeQL\"/>\r\n          </Navbar.Brand>\r\n        </CenteringDiv>\r\n        <Navbar.Brand href=\"/\">FreeQL</Navbar.Brand>\r\n        <CenteringDiv end=\"sm\"/>\r\n        <Navbar.Collapse id=\"navbarTogglerDemo02\">\r\n          <Nav className=\"mr-auto\" style={{\"fontSize\": \"1.025rem\"}}>\r\n            <Nav.Link href=\"https://stephmorel8910.gitbook.io/freeql/\" target=\"_blank\">Help</Nav.Link>\r\n            <Nav.Link href=\"https://github.com/SoAsEr/FreeQL/blob/master/README.md\" target=\"_blank\">README</Nav.Link>\r\n            <Nav.Link href=\"https://github.com/SoAsEr/FreeQL/\" target=\"_blank\">Github</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <Suspense fallback={<div style={{\"height\" : \"calc(100vh - \"+(headerHeight+footerHeight)+\"px)\"}}/>}>\r\n        <FreeQL headerHeight={headerHeight} footerHeight={footerHeight}/>\r\n      </Suspense>\r\n      <footer className=\"bg-dark p-4 p-md-5 text-center\">\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <span className=\"text-light\">Created by Stephane Morel</span>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </footer>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createSlice } from '@reduxjs/toolkit'\r\nimport { getNewComponentDB } from './components/componentsSlice.js';\r\nimport { calculateNewResult } from './result/resultsSlice.js';\r\nimport { getNewSpeciesDB } from './species/speciesSlice.js';\r\n\r\nconst pending=\"pending\";\r\nconst fulfilled=\"fulfilled\";\r\nconst rejected=\"rejected\";\r\n\r\nconst isAsyncAction=({type})=> {\r\n  return type.endsWith(\"/pending\") ||  type.endsWith(\"/fulfilled\")|| type.endsWith(\"/rejected\");\r\n}\r\n\r\nconst getNameFromAsyncThunk=(thunk) => thunk.pending.type.substring(0, thunk.pending.type.lastIndexOf(\"/\"));\r\nconst actionToName={\r\n  [getNameFromAsyncThunk(getNewComponentDB)] : \"componentDB\",\r\n  [getNameFromAsyncThunk(getNewSpeciesDB)] : \"speciesDB\",\r\n  [getNameFromAsyncThunk(calculateNewResult)] : \"calculateResult\",\r\n}\r\n\r\nconst loadingSlice=createSlice({\r\n  name: \"loading\",\r\n  initialState: {\r\n    componentDB: pending,\r\n    speciesDB: pending,\r\n    calculateResult: fulfilled,\r\n  },\r\n  extraReducers: builder => {\r\n    builder\r\n      .addMatcher(isAsyncAction, (state, {type})=>{\r\n        state[actionToName[type.substring(0, type.lastIndexOf(\"/\"))]]=type.substring(type.lastIndexOf(\"/\")+1);\r\n      })\r\n  }\r\n});\r\n\r\nconst getComponentDBLoadingState=(state) => state.loading.componentDB;\r\nconst getSpeciesDBLoadingState=(state) => state.loading.speciesDB;\r\nconst getCalculateResultLoadingState=(state) => state.loading.calculateResult;\r\n\r\nexport {getComponentDBLoadingState, getSpeciesDBLoadingState, getCalculateResultLoadingState};\r\nexport {pending, fulfilled, rejected};\r\n\r\nexport default loadingSlice.reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport components from \"./features/components/componentsSlice.js\";\r\nimport loading from \"./features/loadingSlice.js\";\r\nimport species from \"./features/species/speciesSlice.js\";\r\nimport gasInput from \"./features/species/gases/gasInputSlice.js\";\r\nimport results from \"./features/result/resultsSlice.js\";\r\n\r\nimport { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport { Provider } from 'react-redux'\r\n\r\nconst reducer=combineReducers({\r\n  components,\r\n  loading,\r\n  species,\r\n  gasInput,\r\n  results,\r\n});\r\nconst store = configureStore({\r\n  reducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: false,\r\n    immutableCheck: false,\r\n  }),\r\n});\r\n\r\n/*\r\nReactDOM.render(\r\n  //<React.StrictMode>\r\n    <App />,\r\n  //</React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n*/\r\nconst rootEl = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>, rootEl\r\n);\r\n//ReactDOM.unstable_createRoot(rootEl).render(<App />);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}