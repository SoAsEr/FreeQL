{"version":3,"sources":["../node_modules/react-table/index.js","../node_modules/react-bootstrap/esm/Table.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../../src/plugin-hooks/useGridLayout.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapRegExp.js"],"names":["module","exports","require","Table","React","forwardRef","_ref","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","createElement","_extends","responsiveClass","actions","init","defaultRenderer","value","emptyRenderer","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","reduce","next","style","makePropGetter","hooks","meta","userProps","prev","handlePropGetter","prevProps","Array","isArray","reduceHooks","initial","allowUndefined","loopHooks","context","forEach","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","fn","deps","mountedRef","makeRenderer","instance","column","type","Comp","console","info","Error","flexRender","component","proto","Object","getPrototypeOf","prototype","isReactComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","split","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","arr","newArr","i","length","push","String","d","replace","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","e","row","error","assign","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","a","key","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","values","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","keys","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","useMemo","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","undefined","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","mid","floor","nums","sort","b","from","Set","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","col","g","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","getRowValueByColumnID","toString","isNaN","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","getTime","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","slice","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","u","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","supported","options","window","addEventListener","err","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","totalColumnsMinWidth","flex","useGridLayout","gridTemplateColumns","gridLayout","w","columnIndex","elWidth","getElementById","offsetWidth","startingWidth","newWidth","columnWidthsCopy","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","instanceRef","userColumns","getStateReducer","s","handler","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups","_typeof","Symbol","iterator","constructor","_getPrototypeOf","o","setPrototypeOf","__proto__","Class","_cache","Function","call","TypeError","has","Wrapper","construct","arguments","this","create","enumerable","writable","configurable","_inherits","subClass","superClass","_wrapRegExp","re","groups","BabelRegExp","_RegExp","RegExp","_super","_groups","WeakMap","flags","_this","buildGroups","result","name","exec","str","substitution","_","apply"],"mappings":"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","file":"static/js/0.af9c8223.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Table = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      striped = _ref.striped,\n      bordered = _ref.bordered,\n      borderless = _ref.borderless,\n      hover = _ref.hover,\n      size = _ref.size,\n      variant = _ref.variant,\n      responsive = _ref.responsive,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"striped\", \"bordered\", \"borderless\", \"hover\", \"size\", \"variant\", \"responsive\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  var classes = classNames(className, decoratedBsPrefix, variant && decoratedBsPrefix + \"-\" + variant, size && decoratedBsPrefix + \"-\" + size, striped && decoratedBsPrefix + \"-striped\", bordered && decoratedBsPrefix + \"-bordered\", borderless && decoratedBsPrefix + \"-borderless\", hover && decoratedBsPrefix + \"-hover\");\n  var table = /*#__PURE__*/React.createElement(\"table\", _extends({}, props, {\n    className: classes,\n    ref: ref\n  }));\n\n  if (responsive) {\n    var responsiveClass = decoratedBsPrefix + \"-responsive\";\n\n    if (typeof responsive === 'string') {\n      responsiveClass = responsiveClass + \"-\" + responsive;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: responsiveClass\n    }, table);\n  }\n\n  return table;\n});\nexport default Table;","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(originalRow, rowIndex, row)\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\n\nexport function datetime(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let a = getRowValueByColumnID(rowA, columnId)\n  let b = getRowValueByColumnID(rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValueByColumnID(row, columnId) {\n  return row.values[columnId]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","export function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: `grid`,\n      gridTemplateColumns: instance.state.gridLayout.columnWidths.map(w => w).join(` `),\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky` //enables a scroll wrapper to be placed around the table and have sticky headers\n    },\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === `init`) {\n    return {\n      gridLayout: {\n        columnWidths: instance.columns.map(() => `auto`),\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === `columnStartResizing`) {\n    const { columnId } = action\n    const columnIndex = instance.visibleColumns.findIndex(col => col.id === columnId)\n    const elWidth = getElementWidth(columnId)\n\n    if (elWidth !== undefined) {\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          columnId,\n          columnIndex,\n          startingWidth: elWidth\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === `columnResizing`) {\n    const {\n      columnIndex,\n      startingWidth,\n      columnWidths,\n    } = state.gridLayout\n\n    const change = state.columnResizing.startX - action.clientX\n    const newWidth = startingWidth - change\n    const columnWidthsCopy = [...columnWidths]\n    columnWidthsCopy[columnIndex] = `${newWidth}px`\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: columnWidthsCopy,\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeFunction from \"./isNativeFunction\";\nimport construct from \"./construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport wrapNativeSuper from \"./wrapNativeSuper\";\nimport getPrototypeOf from \"./getPrototypeOf\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nimport inherits from \"./inherits\";\nexport default function _wrapRegExp(re, groups) {\n  _wrapRegExp = function _wrapRegExp(re, groups) {\n    return new BabelRegExp(re, undefined, groups);\n  };\n\n  var _RegExp = wrapNativeSuper(RegExp);\n\n  var _super = RegExp.prototype;\n\n  var _groups = new WeakMap();\n\n  function BabelRegExp(re, flags, groups) {\n    var _this = _RegExp.call(this, re, flags);\n\n    _groups.set(_this, groups || _groups.get(re));\n\n    return _this;\n  }\n\n  inherits(BabelRegExp, _RegExp);\n\n  BabelRegExp.prototype.exec = function (str) {\n    var result = _super.exec.call(this, str);\n\n    if (result) result.groups = buildGroups(result, this);\n    return result;\n  };\n\n  BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {\n    if (typeof substitution === \"string\") {\n      var groups = _groups.get(this);\n\n      return _super[Symbol.replace].call(this, str, substitution.replace(/\\$<([^>]+)>/g, function (_, name) {\n        return \"$\" + groups[name];\n      }));\n    } else if (typeof substitution === \"function\") {\n      var _this = this;\n\n      return _super[Symbol.replace].call(this, str, function () {\n        var args = [];\n        args.push.apply(args, arguments);\n\n        if (_typeof(args[args.length - 1]) !== \"object\") {\n          args.push(buildGroups(args, _this));\n        }\n\n        return substitution.apply(this, args);\n      });\n    } else {\n      return _super[Symbol.replace].call(this, str, substitution);\n    }\n  };\n\n  function buildGroups(result, re) {\n    var g = _groups.get(re);\n\n    return Object.keys(g).reduce(function (groups, name) {\n      groups[name] = result[g[name]];\n      return groups;\n    }, Object.create(null));\n  }\n\n  return _wrapRegExp.apply(this, arguments);\n}"],"sourceRoot":""}