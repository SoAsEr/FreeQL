{"version":3,"sources":["features/components/componentsSelectors.js","features/components/componentsSlice.js","utils/createDiffSelector.js","features/species/speciesSelectors.js","features/species/speciesSlice.js","features/common/actions.js","features/species/gases/gasInputSlice.js","features/loading/loadingSlice.js","utils/readCSV.js","features/fetchDBs.js","reusable_components/CenteringDiv.js","utils/useWindowSize.js","features/equilibria/equilibriaSlice.js","features/equilibria/CalculateEquilibriumWorker.js","App.js","serviceWorker.js","index.js"],"names":["getComponentsPresent","state","components","present","getComponentDB","componentDB","getHPlusOption","hPlusOption","getWaterValue","waterValue","getComponentsConc","createSelector","conc","concs","hPlusOptions","ph","update","hPlusValue","is_number","Math","pow","getComponentsAtEquilibrium","atEquilibrium","equilComponents","add","component","componentsAtEquilibrium","has","addComponentsReducer","union","withMutations","set","totalH","value","label","getNewComponentDB","createAsyncThunk","args","thunkAPI","a","fetchComponentDB","initialState","Immutable","componentsSlice","createSlice","name","reducers","addComponents","action","payload","componentValueChanged","numberValue","Number","setComponentConcReducer","putComponentsAtEquilibrium","putComponentsAtEquilibriumReducer","removeComponentsFromEquilibrium","subtract","removeComponentsFromEquilibriumReducer","hPlusOptionChanged","val","hPlusOptionChangedReducer","extraReducers","builder","addCase","pending","Object","assign","fulfilled","db","removeComponentsWithSpecies","deleteAll","removeComponentsReducer","actions","diffMemoize","fn","initial","addReducer","removeReducer","oldArgs","oldFirstArg","reduceResult","firstArg","shallowEqualArrays","added","removed","size","reduce","prev","curr","createDiffSelector","addFunc","removeFunc","finalFunc","memoize","memoizeOptions","createSelectorCreator","mapmem","defaultMemoize","my_createSelectorCreator","getSpeciesDB","species","speciesDB","getComponentToSpeciesOfTypeFactory","type","componentToSpecies","speciesId","oldSet","getSpeciesOfTypeFactory","getSpeciesCouldBePresentOfTypeFactory","speciesOccurences","speciesCouldBePresent","componentToAdd","speciesOfType","componentToSpeciesOfType","newSpeciesCouldBePresent","get","specie","num","delete","componentToRemove","remove","getSpeciesPresentOfTypeFactory","speciesEnabled","filter","map","default","speciesFactoryFactory","typeFactory","createStructuredSelector","aqs","solids","gases","getSpeciesCouldBePresent","getComponentToSpecies","getSpeciesPresent","getLogKChanges","logKChanges","getLogKChange","getIfSpecieEnabled","enableSpeciesOfTypeReducer","disableSpeciesOfTypeReducer","getNewSpeciesDB","fetchSpeciesDB","speciesSlice","enableSpecies","disableSpecies","addLogKChange","addLogKChangeReducer","removeLogKChange","removeLogKChangeReducer","createAction","removeComponents","dispatch","getState","deleteGasReducer","gasReplacements","partialPressures","getPartialPressures","gasInput","getGasReplacements","getComponentToGases","getErroredGases","componentToGases","erroredSpecies","gasInputSlice","setGasPartialPressure","gas","setGasPartialPressureReducer","setGasReplacement","setGasReplacementReducer","isAsyncAction","endsWith","getNameFromAsyncThunk","thunk","substring","lastIndexOf","actionToName","loadingSlice","addMatcher","getData","item","options","property","row","column","getDataWithStride","i","stride","fetchCSV","url","fetch","then","response","reader","body","getReader","lastLine","csvBuilt","chunkParser","chunk","partial","str","arr","quote","lastLineStart","lastMatchEnd","col","matchAll","match","index","parseCSVWithPartial","TextDecoder","decode","parsed","thisLastLine","slice","length","Promise","resolve","pump","read","res","done","concat","callback","all","labels","urls","tables","mainTable","labelList","labelTable","linesPerItem","chunkedLabelTable","labelMap","entries","chunkedMainTable","aqSpecies","solidSpecies","gasSpecies","id","dbAddingTo","charge","logK","componentAmt","result","chunks","componentDBDefaultParams","process","speciesDBDefaultParams","numComponents","componentAmts","linesPerId","CenteringDiv","props","className","start","end","children","useWindowSize","useState","width","window","innerWidth","height","innerHeight","windowSize","setWindowSize","useLayoutEffect","handleResize","addEventListener","removeEventListener","getCurrentCalculationArguments","componentsConc","speciesPresent","calculateEquilibriumWorker","Comlink","Worker","calculateEquilibrium","context","console","log","query","variables","Array","from","keys","totalConcentrations","_","includes","componentId","total","concentration","aqueousSpecies","constant","coefficients","coefficient","solidsCouldBePresent","partialPressure","componentReplacing","extraSolubilityProductsToCheck","solid","ret","equilibria","getEquilibria","equilibriaSlice","push","meta","arg","findLastIndex","equilibrium","data","errors","$set","rejected","error","FreeQL","React","lazy","App","footerHeight","Navbar","expand","bg","variant","Brand","href","src","alt","Collapse","Nav","style","Link","target","fallback","headerHeight","Container","Row","Col","Boolean","location","hostname","reducer","combineReducers","loading","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","rootEl","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.35d6526d.chunk.js","sourcesContent":["import is_number from 'is-number';\r\nimport { createSelector } from 'reselect';\r\nimport { hPlusOptions } from './componentsSlice';\r\n\r\nconst getComponentsPresent = (state) => state.components.present;\r\nconst getComponentDB = (state) => state.components.componentDB;\r\nconst getHPlusOption = (state) => state.components.hPlusOption;\r\nconst getWaterValue = (state) => getComponentDB(state).waterValue;\r\n\r\nconst getComponentsConc = createSelector(\r\n  [\r\n    (state) => state.components.conc,\r\n    getComponentDB,\r\n    getHPlusOption,\r\n  ],\r\n  (concs, componentDB, hPlusOption) => {\r\n    if(hPlusOption===hPlusOptions.ph){\r\n      return concs.update(componentDB.hPlusValue, ph => is_number(ph) ? Math.pow(10, -ph) : ph);\r\n    } else {\r\n      return concs;\r\n    }\r\n  }\r\n);\r\n\r\nconst getComponentsAtEquilibrium = createSelector(\r\n  [\r\n    (state) => state.components.atEquilibrium,\r\n    getComponentDB,\r\n    getHPlusOption,\r\n  ],\r\n  (equilComponents, componentDB, hPlusOption) => {\r\n    if(hPlusOption===hPlusOptions.ph) {\r\n      return equilComponents.add(componentDB.hPlusValue);\r\n    } else {\r\n      return equilComponents;\r\n    }\r\n  }\r\n);\r\n\r\nconst isComponentAtEquilibrium=createSelector(\r\n  [\r\n    getComponentsAtEquilibrium,\r\n    (state, {component}) => component,\r\n  ],\r\n  (componentsAtEquilibrium, component) => componentsAtEquilibrium.has(component)\r\n);\r\n\r\nexport { getComponentsPresent, getComponentsConc, getComponentsAtEquilibrium, getWaterValue, isComponentAtEquilibrium, getComponentDB, getHPlusOption }\r\n","import * as Immutable from 'immutable';\r\nimport is_number from 'is-number';\r\n\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\nimport {fetchComponentDB} from \"../fetchDBs.js\";\r\nimport { removeComponentsWithSpecies } from '../common/actions.js';\r\n\r\nconst addComponentsReducer=(state, components) => {\r\n  state.present=state.present.union(components);\r\n  state.conc=state.conc.withMutations(conc => {\r\n    for(const component of components){\r\n      conc.set(component,null);\r\n    }\r\n  })\r\n};\r\n\r\nconst removeComponentsReducer=(state, components) => {\r\n  state.present=state.present.subtract(components);\r\n  state.conc=state.conc.deleteAll(components);\r\n\r\n};\r\nconst setComponentConcReducer=(state, component, value) => {\r\n  const numberValue = is_number(value) ? Number(value) : null;\r\n  state.conc=state.conc.set(component, numberValue);\r\n};\r\n\r\nconst putComponentsAtEquilibriumReducer=(state, component) => {\r\n  state.atEquilibrium=state.atEquilibrium.union(component);\r\n};\r\nconst removeComponentsFromEquilibriumReducer=(state, component) => {\r\n  state.atEquilibrium=state.atEquilibrium.subtract(component);\r\n};\r\n\r\nconst hPlusOptions={\r\n  totalH: { value: \"unique_1\", label: 'totalH' },\r\n  ph: { value: \"unique_2\", label: 'pH' },\r\n  //alk: { value: \"unique_3\", label: 'Alkalinity^1' },\r\n  //otherAlk: { value: \"unique_4\", label: 'Other Alkalinity' },\r\n};\r\n\r\nconst hPlusOptionChangedReducer=(state, val) => {\r\n  state.hPlusOption=val;\r\n};\r\n\r\nconst getNewComponentDB=createAsyncThunk(\r\n  \"getNewComponentDB\",\r\n  async (args, thunkAPI) => {\r\n    return fetchComponentDB(args);\r\n  }\r\n);\r\n\r\nconst initialState = {\r\n  present: Immutable.OrderedSet(),\r\n  conc: Immutable.Map(),\r\n  atEquilibrium: Immutable.Set(),\r\n  componentDB: {\r\n    components: null,\r\n    hPlusValue: null,\r\n    waterValue: null,\r\n  },\r\n  hPlusOption: hPlusOptions.totalH, \r\n};\r\n\r\nconst componentsSlice= createSlice({\r\n  name: \"components\",\r\n  initialState,\r\n  reducers: {\r\n    addComponents: (state, action) => {\r\n      addComponentsReducer(state, action.payload)\r\n    },\r\n    componentValueChanged: (state, action) => {\r\n      setComponentConcReducer(state, action.payload.component, action.payload.value)\r\n    },\r\n    putComponentsAtEquilibrium: (state, action) => {\r\n      putComponentsAtEquilibriumReducer(state, action.payload)\r\n    },\r\n    removeComponentsFromEquilibrium: (state, action) => {\r\n      removeComponentsFromEquilibriumReducer(state, action.payload)\r\n    },\r\n    hPlusOptionChanged: (state, action) => {\r\n      hPlusOptionChangedReducer(state, action.payload)\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getNewComponentDB.pending, (state, action) => {\r\n        Object.assign(state, initialState);\r\n      })\r\n      .addCase(getNewComponentDB.fulfilled, (state, action) => {\r\n        const db = action.payload;\r\n        state.componentDB=db;\r\n        addComponentsReducer(state, [db.hPlusValue]);\r\n      })\r\n      .addCase(removeComponentsWithSpecies, (state, action) => {\r\n        removeComponentsReducer(state, action.payload.components)\r\n      })\r\n  }\r\n});\r\n\r\nexport const { addComponents, componentValueChanged, putComponentsAtEquilibrium, removeComponentsFromEquilibrium, hPlusOptionChanged } = componentsSlice.actions;\r\nexport { getNewComponentDB };\r\nexport { hPlusOptions };\r\nexport default componentsSlice.reducer;\r\n","import * as Immutable from \"immutable\";\r\nimport { createSelectorCreator, defaultMemoize } from \"reselect\";\r\nimport { shallowEqualArrays } from \"shallow-equal\";\r\n\r\nconst diffMemoize=(fn, initial, addReducer, removeReducer) => {\r\n  let oldArgs=null;\r\n  let oldFirstArg=null;\r\n  let reduceResult=null;\r\n  return (firstArg, ...args) => {\r\n    if(!shallowEqualArrays(oldArgs, args)){\r\n      oldFirstArg=Immutable.Set();\r\n      reduceResult=initial;\r\n      oldArgs=args;\r\n    }\r\n    const added=firstArg.subtract(oldFirstArg);\r\n    const removed=oldFirstArg.subtract(firstArg);\r\n    if(added.size){\r\n      reduceResult=added.reduce((prev, curr) => addReducer(prev, curr, ...args), reduceResult);\r\n    }\r\n    if(removed.size){\r\n      reduceResult=removed.reduce((prev, curr) => removeReducer(prev, curr, ...args), reduceResult);\r\n    }\r\n    oldFirstArg=firstArg;\r\n    return fn(reduceResult, ...args);\r\n  }\r\n}\r\n\r\nconst my_createSelectorCreator = (memoize, ...memoizeOptions) => {\r\n  return createSelectorCreator((fn, mapmem) => {\r\n    if(mapmem===true){\r\n      return memoize(fn, ...memoizeOptions);\r\n    } else {\r\n      return defaultMemoize(fn);\r\n    }\r\n  }, true);\r\n}\r\n\r\nconst createDiffSelector=(args, initial, addFunc, removeFunc, finalFunc) => {\r\n  return my_createSelectorCreator(diffMemoize, initial, addFunc, removeFunc)(args, finalFunc);\r\n}\r\nexport {createDiffSelector};","import * as Immutable from 'immutable';\r\n\r\nimport { getComponentsPresent, getWaterValue } from '../components/componentsSelectors.js';\r\nimport { createSelector, createStructuredSelector } from 'reselect';\r\nimport { createDiffSelector } from '../../utils/createDiffSelector.js';\r\nimport memoize from 'fast-memoize';\r\n\r\nconst indexSort=(db) => (specie) => db.get(specie).index;\r\n\r\nconst getSpeciesDB=(state) => state.species.speciesDB;\r\n\r\nconst getComponentToSpeciesOfTypeFactory=memoize((type) => createSelector(\r\n  [getSpeciesDB],\r\n  (speciesDB) => {\r\n    return Immutable.Map().withMutations(componentToSpecies => {\r\n      for(const [speciesId, {components}] of speciesDB[type]) {\r\n        for(const [component] of components) {\r\n          componentToSpecies.update(component, (oldSet=Immutable.Set()) => oldSet.add(speciesId));\r\n        }\r\n      }\r\n    });\r\n  }\r\n))\r\n\r\n\r\nconst getSpeciesOfTypeFactory=memoize((type) => (state) => state.species.speciesDB[type]);\r\n\r\nconst getSpeciesCouldBePresentOfTypeFactory=memoize((type) => createDiffSelector(\r\n  [getComponentsPresent, getSpeciesOfTypeFactory(type), getComponentToSpeciesOfTypeFactory(type), getWaterValue], //deps\r\n  {speciesOccurences: Immutable.Map(), speciesCouldBePresent: Immutable.OrderedSet()}, //initial of reducer\r\n  ({speciesOccurences, speciesCouldBePresent}, componentToAdd, speciesOfType, componentToSpeciesOfType, waterValue) => {  //addReducer\r\n    let newSpeciesOccurences;\r\n    let newSpeciesCouldBePresent;\r\n    newSpeciesOccurences=speciesOccurences.withMutations(speciesOccurences => {\r\n      newSpeciesCouldBePresent=speciesCouldBePresent.withMutations(speciesCouldBePresent => {\r\n        for(const specie of componentToSpeciesOfType.get(componentToAdd) ?? []) {\r\n          speciesOccurences.update(specie, (num=0)=>num+1);\r\n          if(speciesOfType.get(specie).components.delete(waterValue).size===speciesOccurences.get(specie)){\r\n            speciesCouldBePresent.add(specie);\r\n          }\r\n        }\r\n      })\r\n    })\r\n    return {speciesOccurences: newSpeciesOccurences, speciesCouldBePresent: newSpeciesCouldBePresent};\r\n  },\r\n  ({speciesOccurences, speciesCouldBePresent}, componentToRemove, speciesOfType, componentToSpeciesOfType) => {  //removeReducer\r\n    let newSpeciesOccurences;\r\n    let newSpeciesCouldBePresent;\r\n    newSpeciesOccurences=speciesOccurences.withMutations(speciesOccurences => {\r\n      newSpeciesCouldBePresent=speciesCouldBePresent.withMutations(speciesCouldBePresent => {\r\n        for(const specie of componentToSpeciesOfType.get(componentToRemove) ?? []) {\r\n          speciesOccurences.update(specie, (num=0)=>num-1);\r\n          speciesCouldBePresent.remove(specie);\r\n        }\r\n      })\r\n    })\r\n    return {speciesOccurences: newSpeciesOccurences, speciesCouldBePresent: newSpeciesCouldBePresent};\r\n  },\r\n  ({speciesCouldBePresent}) => speciesCouldBePresent //final function\r\n));\r\n\r\nconst getSpeciesPresentOfTypeFactory=memoize((type) => createSelector(\r\n  [\r\n    (state) => state.species.speciesEnabled[type],\r\n    getSpeciesCouldBePresentOfTypeFactory(type),\r\n  ],\r\n  (speciesEnabled, speciesCouldBePresent) => {\r\n    return speciesCouldBePresent.filter(specie => speciesEnabled.map.get(specie) ?? speciesEnabled.default);\r\n  }\r\n));\r\n\r\nconst speciesFactoryFactory=(typeFactory) => createStructuredSelector({\r\n  aqs: typeFactory(\"aqs\"),\r\n  solids: typeFactory(\"solids\"),\r\n  gases: typeFactory(\"gases\"),\r\n});\r\n\r\nconst getSpeciesCouldBePresent=speciesFactoryFactory(getSpeciesCouldBePresentOfTypeFactory);\r\nconst getComponentToSpecies=speciesFactoryFactory(getComponentToSpeciesOfTypeFactory);\r\nconst getSpeciesPresent=speciesFactoryFactory(getSpeciesPresentOfTypeFactory);\r\n\r\nconst getLogKChanges=(state) => state.species.logKChanges;\r\nconst getLogKChange=(state, {type, specie}) => state.species.logKChanges[type].get(specie);\r\n\r\nconst getIfSpecieEnabled=(state, {type, specie}) => state.species.speciesEnabled[type].map.get(specie) ?? state.species.speciesEnabled[type].default;\r\n\r\n\r\nexport { getSpeciesCouldBePresent, getSpeciesPresent, getSpeciesDB, getLogKChanges, getIfSpecieEnabled, getLogKChange, getComponentToSpecies, indexSort };\r\n","import * as Immutable from 'immutable';\r\n\r\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\n\r\nimport { fetchSpeciesDB } from '../fetchDBs.js';\r\n\r\nimport { removeComponentsWithSpecies } from '../common/actions.js';\r\n\r\n\r\nconst enableSpeciesOfTypeReducer=(state, type, species) => {\r\n  if(!species){\r\n    return;\r\n  }\r\n  state.speciesEnabled[type].map=state.speciesEnabled[type].map.withMutations(speciesEnabled => {\r\n    for(const specie of species){\r\n      speciesEnabled.set(specie, true);\r\n    }\r\n  });\r\n}\r\nconst disableSpeciesOfTypeReducer=(state, type, species) => {\r\n  if(!species){\r\n    return;\r\n  }\r\n  state.speciesEnabled[type].map=state.speciesEnabled[type].map.withMutations(speciesEnabled => {\r\n    for(const specie of species){\r\n      speciesEnabled.set(specie, false);\r\n    }\r\n  });\r\n}\r\n\r\nconst addLogKChangeReducer=(state, type, specie, value) => {\r\n  state.logKChanges[type]=state.logKChanges[type].set(specie, value);\r\n}\r\n\r\nconst removeLogKChangeReducer=(state, type, specie) => {\r\n  state.logKChanges[type]=state.logKChanges[type].delete(specie);\r\n}\r\n\r\n\r\nconst getNewSpeciesDB=createAsyncThunk(\r\n  \"getNewSpeciesDB\",\r\n  async (args, thunkAPI) => {\r\n    return fetchSpeciesDB(args);\r\n  }\r\n);\r\n\r\nconst initialState={\r\n  speciesEnabled: {\r\n    aqs: {map: Immutable.Map(), default: true},\r\n    solids: {map: Immutable.Map(), default: false},\r\n    gases: {map: Immutable.Map(), default: false},\r\n  },\r\n  logKChanges: {\r\n    aqs: Immutable.Map(),\r\n    solids: Immutable.Map(),\r\n    gases: Immutable.Map(),\r\n  },\r\n  speciesDB: {\r\n    aqs: null,\r\n    solids: null,\r\n    gases: null,\r\n  }\r\n};\r\n\r\n\r\nconst speciesSlice=createSlice({\r\n  name: \"species\",\r\n  initialState,\r\n  reducers: {\r\n    enableSpecies: (state, action) => {\r\n      enableSpeciesOfTypeReducer(state, \"aqs\", action.payload.aqs);\r\n      enableSpeciesOfTypeReducer(state, \"solids\", action.payload.solids);\r\n      enableSpeciesOfTypeReducer(state, \"gases\", action.payload.gases);\r\n    },\r\n    disableSpecies: (state, action) => {\r\n      disableSpeciesOfTypeReducer(state, \"aqs\", action.payload.aqs);\r\n      disableSpeciesOfTypeReducer(state, \"solids\", action.payload.solids);\r\n      disableSpeciesOfTypeReducer(state, \"gases\", action.payload.gases);\r\n    },\r\n    addLogKChange: (state, action) => {\r\n      addLogKChangeReducer(state, action.payload.type, action.payload.specie, action.payload.value);\r\n    },\r\n    removeLogKChange: (state, action) => {\r\n      removeLogKChangeReducer(state, action.payload.type, action.payload.specie);\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n    .addCase(getNewSpeciesDB.pending, (state, action) => {\r\n      Object.assign(state, initialState);\r\n    })\r\n    .addCase(getNewSpeciesDB.fulfilled, (state, action) => {\r\n      const db = action.payload;\r\n      state.speciesDB = db;\r\n    })\r\n    .addCase(removeComponentsWithSpecies, (state, action) => {\r\n      state.speciesEnabled.aqs.map=state.speciesEnabled.aqs.map.deleteAll(action.payload.species.aqs);\r\n      state.speciesEnabled.solids.map=state.speciesEnabled.solids.map.deleteAll(action.payload.species.solids);\r\n      state.speciesEnabled.gases.map=state.speciesEnabled.gases.map.deleteAll(action.payload.species.gases);\r\n    })\r\n  },\r\n});\r\n\r\n\r\nexport const { enableSpecies, disableSpecies, addLogKChange, removeLogKChange } = speciesSlice.actions;\r\nexport { getNewSpeciesDB };\r\nexport default speciesSlice.reducer;","import * as Immutable from 'immutable';\r\n\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nimport { getComponentToSpecies } from \"../species/speciesSelectors\";\r\n\r\nconst removeComponentsWithSpecies=createAction(\"removeComponentsWithSpecies\");\r\n\r\nconst removeComponents=(components) => {\r\n  return (dispatch, getState) => {\r\n    const componentToSpecies=getComponentToSpecies(getState());\r\n    const species={aqs: Immutable.Set(), solids: Immutable.Set(), gases: Immutable.Set()};\r\n    for(const component of components) {\r\n      species.aqs=species.aqs.union(componentToSpecies.aqs.get(component) ?? []);\r\n      species.solids=species.solids.union(componentToSpecies.solids.get(component) ?? []);\r\n      species.gases=species.gases.union(componentToSpecies.gases.get(component) ?? []);\r\n    }\r\n    dispatch(removeComponentsWithSpecies({components, species}));\r\n  }\r\n}\r\n\r\nexport {removeComponentsWithSpecies, removeComponents}","import * as Immutable from 'immutable';\r\nimport is_number from 'is-number';\r\n\r\nimport { createSlice, createSelector } from '@reduxjs/toolkit'\r\nimport { disableSpecies } from '../speciesSlice';\r\nimport { removeComponentsWithSpecies } from '../../common/actions';\r\n\r\nconst setGasPartialPressureReducer=(state, gas, value) => {\r\n  state.partialPressures=state.partialPressures.set(gas,  is_number(value) ? Number(value) : null);\r\n}\r\n\r\nconst setGasReplacementReducer=(state, gas, component) => {\r\n  state.gasReplacements=state.gasReplacements.set(gas, component);\r\n}\r\n\r\nconst deleteGasReducer=(state, gases) => {\r\n  state.gasReplacements=state.gasReplacements.deleteAll(gases);\r\n  state.partialPressures=state.partialPressures.deleteAll(gases);\r\n}\r\n\r\nconst initialState={\r\n  partialPressures: Immutable.Map(),\r\n  gasReplacements: Immutable.Map(),\r\n}\r\n\r\nconst getPartialPressures=(state) => state.gasInput.partialPressures;\r\nconst getGasReplacements=(state) => state.gasInput.gasReplacements;\r\n\r\nconst getComponentToGases=createSelector(\r\n  [getGasReplacements],\r\n  (gasReplacements) => gasReplacements.reduce(\r\n    (componentToSpecies, component, specie) => componentToSpecies.update(component, (species=Immutable.Set()) => species.add(specie)), Immutable.Map()\r\n  )\r\n)\r\nconst getErroredGases=createSelector(\r\n  [getComponentToGases],\r\n  (componentToGases) => componentToGases.filter(species => species.size>1).reduce(\r\n    (erroredSpecies, species) => erroredSpecies.union(species), Immutable.Set()\r\n  )\r\n);\r\n\r\nconst gasInputSlice = createSlice({\r\n  name: \"gasInput\",\r\n  initialState,\r\n  reducers: {\r\n    setGasPartialPressure: (state, action) => {\r\n      setGasPartialPressureReducer(state, action.payload.gas, action.payload.value)\r\n    },\r\n    setGasReplacement: (state, action) => {\r\n      setGasReplacementReducer(state, action.payload.gas, action.payload.component)\r\n    },\r\n  },\r\n  extraReducers: (builder) =>{\r\n    builder\r\n    .addCase(removeComponentsWithSpecies, (state, action) => {\r\n      deleteGasReducer(state, action.payload.species.gases)\r\n    })\r\n    .addCase(disableSpecies, (state, action) => {\r\n      deleteGasReducer(state, action.payload.gases)\r\n    })\r\n  }\r\n});\r\n\r\nexport const { setGasPartialPressure, setGasReplacement } = gasInputSlice.actions;\r\n\r\nexport { getPartialPressures, getComponentToGases, getGasReplacements, getErroredGases }\r\n\r\nexport default gasInputSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\r\nimport { getNewComponentDB } from '../components/componentsSlice.js';\r\nimport { getNewSpeciesDB } from '../species/speciesSlice.js';\r\n\r\nconst pending=\"pending\";\r\nconst fulfilled=\"fulfilled\";\r\nconst rejected=\"rejected\";\r\n\r\nconst isAsyncAction=({type})=> {\r\n  return type.endsWith(\"/pending\") ||  type.endsWith(\"/fulfilled\")|| type.endsWith(\"/rejected\");\r\n}\r\n\r\nconst getNameFromAsyncThunk=(thunk) => thunk.pending.type.substring(0, thunk.pending.type.lastIndexOf(\"/\"));\r\nconst actionToName={\r\n  [getNameFromAsyncThunk(getNewComponentDB)] : \"componentDB\",\r\n  [getNameFromAsyncThunk(getNewSpeciesDB)] : \"speciesDB\",\r\n}\r\n\r\nconst loadingSlice=createSlice({\r\n  name: \"loading\",\r\n  initialState: {\r\n    componentDB: pending,\r\n    speciesDB: pending,\r\n  },\r\n  extraReducers: builder => {\r\n    builder\r\n      .addMatcher(isAsyncAction, (state, {type})=>{\r\n        state[actionToName[type.substring(0, type.lastIndexOf(\"/\"))]]=type.substring(type.lastIndexOf(\"/\")+1);\r\n      })\r\n  }\r\n});\r\nexport {pending, fulfilled, rejected};\r\n\r\nexport default loadingSlice.reducer;","const getData=(item, options, property) => {\r\n  return item[options[property].row][options[property].column];\r\n}\r\nconst getDataWithStride=(item, options, property, i) => {\r\n  return item[options[property].row][options[property].column+i*options[property].stride];\r\n}\r\n\r\nfunction parseCSVWithPartial(str) {\r\n  let arr = [];\r\n  let quote = false;\r\n\r\n  let lastLineStart=0;\r\n  let lastMatchEnd=0;\r\n  let row=0;\r\n  let col=0;\r\n  for(const match of str.matchAll(/(\"\")|(\")|(,)|(?:(\\r\\n)|(\\n)|(\\r))($)?|$/g)){\r\n    arr[row] = arr[row] || [];\r\n    arr[row][col] = arr[row][col] || '';\r\n    if(match[7]){\r\n      break;\r\n    }\r\n    arr[row][col]+=str.substring(lastMatchEnd, match.index);\r\n    if(match[1]){\r\n      if(quote){\r\n        arr[row][col]+='\"';\r\n      }\r\n      lastMatchEnd=match.index+2;\r\n    } else if(match[2]){\r\n      quote=!quote;\r\n      lastMatchEnd=match.index+1;\r\n    } else if(match[3]){\r\n      ++col;\r\n      lastMatchEnd=match.index+1;\r\n    } else if(match[4]) {\r\n      ++row;\r\n      col=0;\r\n      lastMatchEnd=match.index+2;\r\n      lastLineStart=lastMatchEnd;\r\n    } else if(match[5] || match[6]) {\r\n      ++row;\r\n      col=0;\r\n      lastMatchEnd=match.index+1;\r\n      lastLineStart=lastMatchEnd;\r\n    }\r\n  }\r\n  return [arr, str.substring(lastLineStart)];\r\n}\r\n\r\nconst fetchCSV=(url) => {\r\n  return fetch(url)\r\n    .then(\r\n      response => {\r\n        const reader=response.body.getReader();\r\n        let lastLine=\"\";\r\n        let csvBuilt=[];\r\n        const chunkParser=(chunk, partial) => {\r\n          const decodedChunk=lastLine+new TextDecoder(\"utf-8\").decode(chunk);\r\n          const [parsed, thisLastLine] = parseCSVWithPartial(decodedChunk);\r\n          if(!partial) {\r\n            lastLine=thisLastLine;\r\n            return parsed.slice(0, parsed.length-1);\r\n          } else {\r\n            return parsed;\r\n          }\r\n        }\r\n        return new Promise(resolve => {\r\n          pump();\r\n          function pump() {\r\n            return reader.read().then(res => {\r\n              if(res.done) {\r\n                csvBuilt=csvBuilt.concat(chunkParser(res.value, true));\r\n                resolve(csvBuilt);\r\n                return;\r\n              }\r\n              csvBuilt=csvBuilt.concat(chunkParser(res.value));\r\n              pump();\r\n            })\r\n          }\r\n        })\r\n      }\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport {getData, getDataWithStride, fetchCSV};","import { fetchCSV, getData, getDataWithStride } from '../utils/readCSV.js';\r\nimport chunk from \"chunk\";\r\n\r\nimport * as Immutable from 'immutable';\r\n\r\n\r\nconst fetchSpeciesDB=({url, options, type, callback}) => {\r\n  if(type===\"link\") {\r\n    return Promise.all([url, ...options.labels.urls].map(url => fetchCSV(url))).then(tables => {\r\n      const [mainTable, ...labelTables]=tables;\r\n      const labelList=labelTables.map(labelTable => chunk(labelTable, options.linesPerItem)).map(chunkedLabelTable => chunkedLabelTable.map(labelTable => getData(labelTable, options.labels, \"id\")));\r\n\r\n      const labelMap=Immutable.Map().withMutations((labelMap) => {\r\n        for(const [index, labelTable] of labelList.entries()) {\r\n          for(const specie of labelTable){\r\n            labelMap.set(specie, options.labels.labelMap[index]);\r\n          }\r\n        };\r\n      });\r\n      \r\n      const chunkedMainTable=chunk(mainTable, options.linesPerItem).filter(chunk => Number(chunk[0][0]));\r\n      const db={\r\n        aqs: null,\r\n        solids: null,\r\n        gases: null,\r\n      }\r\n      db.aqs=Immutable.Map().withMutations(aqSpecies => {  \r\n        db.solids=Immutable.Map().withMutations(solidSpecies => {\r\n          db.gases=Immutable.Map().withMutations(gasSpecies => {\r\n            const db={aqs: aqSpecies, solids: solidSpecies, gases: gasSpecies};\r\n            for(const item of chunkedMainTable){\r\n              const id=getData(item, options, \"id\");\r\n              const dbAddingTo=db[labelMap.get(id) ?? \"aqs\"]\r\n              dbAddingTo.set(id, \r\n                {\r\n                  name: getData(item, options, \"name\"),\r\n                  charge: Number(getData(item, options, \"charge\")),\r\n                  logK: Number(getData(item, options, \"logK\")),\r\n                  label: labelMap.get(id) ?? 0,\r\n                  index: dbAddingTo.size,\r\n                  components: Immutable.OrderedMap().withMutations((components) => {\r\n                    for(let i=0; i<getData(item, options, \"numComponents\"); ++i){\r\n                      const component=getDataWithStride(item, options, \"components\", i);\r\n                      const componentAmt=Number(getDataWithStride(item, options, \"componentAmts\", i));\r\n                      components.set(component, componentAmt);\r\n                    }\r\n                  }),\r\n                }\r\n              )\r\n            }\r\n          });\r\n        });\r\n      });\r\n      \r\n      return db;\r\n    })\r\n  }\r\n}\r\n\r\nconst fetchComponentDB=({url, options, type, callback}) => {\r\n  if(type===\"link\") {\r\n    return fetchCSV(url).then(result => chunk(result, options.linesPerItem))\r\n    .then(chunks => \r\n      ({\r\n        hPlusValue: options.hPlusValue, \r\n        waterValue: options.waterValue,\r\n        components: Immutable.OrderedMap(chunks.filter(item => getData(item, options, \"id\")).map(item => [\r\n          getData(item, options, \"id\"),\r\n          {\r\n            name: getData(item, options, \"name\"), \r\n            charge: Number(getData(item, options, \"charge\")),\r\n          }\r\n        ]))\r\n      })\r\n    )\r\n    \r\n  }\r\n}\r\n\r\nconst componentDBDefaultParams={\r\n  url: process.env.PUBLIC_URL+\"/assets/defaultdb/comp.vdb\", \r\n  type: \"link\",\r\n  options: {\r\n    linesPerItem: 1,\r\n    id: {row: 0, column: 0},\r\n    name: {row: 0, column: 1},\r\n    charge: {row: 0, column: 2},\r\n    hPlusValue: \"330\",\r\n    waterValue: \"2\",\r\n  }, \r\n};\r\n\r\nconst speciesDBDefaultParams={\r\n  url: process.env.PUBLIC_URL+\"/assets/defaultdb/thermo.vdb\", \r\n  type: \"link\",\r\n  options: {\r\n    linesPerItem: 3,\r\n    id: {row: 0, column: 0},\r\n    name: {row: 0, column: 1},\r\n    charge: {row: 0, column: 6},\r\n    logK: {row: 0, column: 3},\r\n    numComponents: {row: 0, column: 10},\r\n    components: {row: 1, column: 1, stride: 2},\r\n    componentAmts: {row: 1, column: 0, stride: 2},\r\n    labels: {\r\n      urls: [process.env.PUBLIC_URL+\"/assets/defaultdb/type6.vdb\", process.env.PUBLIC_URL+\"/assets/defaultdb/gases.vdb\"],\r\n      linesPerId: 3,\r\n      id: {row: 0, column: 0},\r\n      labelMap: [\"solids\", \"gases\"]\r\n    }\r\n  }, \r\n};\r\n\r\nexport {fetchSpeciesDB, fetchComponentDB, speciesDBDefaultParams, componentDBDefaultParams};","import React from 'react';\r\n\r\nconst CenteringDiv=(props) => {\r\n  return (\r\n    <div className={\"flex-\"+(props.start ? props.start+\"-\" : \"\")+\"grow-1 \"+(props.end ? \"flex-\"+props.end+\"-grow-0\" : \"\")}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\nexport default CenteringDiv;","import { useState, useLayoutEffect } from \"react\";\r\n\r\n\r\nconst useWindowSize=() => {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  });\r\n\r\n  useLayoutEffect(() => {\r\n    // Handler to call on window resize\r\n     const handleResize=()=>{\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    \r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n    \r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n\r\n  return windowSize;\r\n}\r\n\r\nexport default useWindowSize;","import * as Immutable from 'immutable';\r\nimport { createAsyncThunk, createSelector, createSlice } from \"@reduxjs/toolkit\";\r\n\r\n//eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport ConcentrationCalculator from 'worker-loader!./CalculateEquilibriumWorker.js'\r\nimport { getComponentDB, getComponentsAtEquilibrium, getComponentsConc } from '../components/componentsSelectors';\r\nimport { getLogKChanges, getSpeciesCouldBePresent, getSpeciesDB, getSpeciesPresent } from '../species/speciesSelectors';\r\n\r\nimport * as Comlink from \"comlink\";\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { pending } from '../loading/loadingSlice';\r\nimport update from \"immutability-helper\";\r\nimport { getGasReplacements, getPartialPressures } from '../species/gases/gasInputSlice';\r\n\r\n\r\nconst getCurrentCalculationArguments=createStructuredSelector(\r\n  {\r\n    componentsConc: getComponentsConc,\r\n    componentsAtEquilibrium: getComponentsAtEquilibrium,\r\n    speciesPresent: getSpeciesPresent,\r\n    speciesCouldBePresent: getSpeciesCouldBePresent,\r\n    logKChanges: getLogKChanges,\r\n    speciesDB: getSpeciesDB,\r\n    componentDB: getComponentDB,\r\n    partialPressures: getPartialPressures,\r\n    gasReplacements: getGasReplacements,\r\n  }\r\n)\r\n\r\nconst calculateEquilibriumQuery=`\r\nquery getResults($components: [ID!]!, $totalConcentrations: [TotalConcentrationInput!]!, $componentsAtEquilibrium: [ComponentAtEquilibriumInput!], $aqueousSpecies: [SpecieInput!]!, $solidsCouldBePresent: [SolidCouldBePresentInput!], $solidsAtEquilibrium: [SolidAtEquilibriumInput], $gases: [GasInput!], $extraSolubilityProductsToCheck: [SpecieInput!]){\r\n  equilibrium(components: $components, totalConcentrations: $totalConcentrations, componentsAtEquilibrium: $componentsAtEquilibrium, aqueousSpecies: $aqueousSpecies, solidsCouldBePresent: $solidsCouldBePresent, solidsAtEquilibrium: $solidsAtEquilibrium, gases: $gases){\r\n    species {\r\n      component{\r\n        componentId,\r\n        concentration,\r\n      },\r\n      aqueous{\r\n        id,\r\n        concentration,\r\n      },\r\n      solid{\r\n        present{\r\n          id,\r\n          concentration\r\n        },\r\n        notPresent{\r\n          id,\r\n          solubilityProduct\r\n        }\r\n      }\r\n    },\r\n    totalConcentrations{\r\n      componentId,\r\n      total\r\n    },\r\n    extraSolubilityProducts(species: $extraSolubilityProductsToCheck){\r\n      id,\r\n      solubilityProduct\r\n    }\r\n  }\r\n}\r\n`\r\nconst calculateEquilibriumWorker=Comlink.wrap(new ConcentrationCalculator());\r\n\r\nconst calculateEquilibrium=createAsyncThunk(\r\n  \"calculateEquilibrium\",\r\n  async (context) => {\r\n    const {componentsConc, componentsAtEquilibrium, speciesPresent, speciesCouldBePresent, logKChanges, speciesDB, partialPressures, gasReplacements, componentDB}=context;\r\n    console.log(context);\r\n    const args={\r\n      query: calculateEquilibriumQuery,\r\n      variables: {\r\n        components: Array.from(componentsConc.keys()),\r\n        totalConcentrations: Array.from(componentsConc.filter((_, component) => !componentsAtEquilibrium.has(component) && !gasReplacements.includes(component))).map(([component, conc]) => ({componentId: component, total: conc})),\r\n        componentsAtEquilibrium: Array.from(componentsAtEquilibrium.keys()).map(component => ({componentId: component, concentration: componentsConc.get(component)})),\r\n        aqueousSpecies: Array.from(speciesPresent.aqs).map(specie => ({id: specie, row: {constant: Math.pow(10, logKChanges.aqs.get(specie) ?? speciesDB.aqs.get(specie).logK), coefficients: Array.from(speciesDB.aqs.get(specie).components).map(([component, amt]) => ({componentId: component, coefficient: amt}))}})),\r\n        solidsCouldBePresent: Array.from(speciesPresent.solids).map(specie => ({id: specie, row: {constant: Math.pow(10, logKChanges.solids.get(specie) ?? speciesDB.solids.get(specie).logK), coefficients: Array.from(speciesDB.solids.get(specie).components).map(([component, amt]) => ({componentId: component, coefficient: amt}))}})),\r\n        gases: Array.from(speciesPresent.gases).map(specie => ({id: specie, partialPressure: partialPressures.get(specie), componentReplacing: gasReplacements.get(specie), row: {constant: Math.pow(10, logKChanges.gases.get(specie) ?? speciesDB.gases.get(specie).logK), coefficients: Array.from(speciesDB.gases.get(specie).components).map(([component, amt]) => ({componentId: component, coefficient: amt}))}})),\r\n        extraSolubilityProductsToCheck: Array.from(speciesCouldBePresent.solids.filter(solid => !speciesPresent.solids.has(solid))).map(specie => ({id: specie, row: {constant: Math.pow(10, logKChanges.solids.get(specie) ?? speciesDB.solids.get(specie).logK), coefficients: Array.from(speciesDB.solids.get(specie).components).map(([component, amt]) => ({componentId: component, coefficient: amt}))}})),\r\n      }\r\n    };\r\n    const ret=await calculateEquilibriumWorker(\r\n      args\r\n    );\r\n    return ret;\r\n  }\r\n);\r\n\r\nconst initialState={\r\n  equilibria: Immutable.List(),\r\n}\r\n\r\nconst getEquilibria=state=> state.equilibria.equilibria;\r\n\r\nconst equilibriaSlice=createSlice({\r\n  name: \"equilibria\",\r\n  initialState,\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(calculateEquilibrium.pending, (state, action) => {\r\n        state.equilibria=state.equilibria.push({context: action.meta.arg, result: pending});\r\n      })\r\n      .addCase(calculateEquilibrium.fulfilled, (state, action) => {\r\n        const index=state.equilibria.findLastIndex(equilibrium => equilibrium.context===action.meta.arg);\r\n        console.log(index);\r\n        let result={};\r\n        if(action.payload.data?.equilibrium){\r\n          result.equilibrium=action.payload.data.equilibrium;\r\n        } else if(action.payload.errors){\r\n          result.errors=action.payload.errors\r\n        }\r\n        state.equilibria=state.equilibria.update(index, equilibrium => update(equilibrium, {result: {$set: result}}));\r\n      })\r\n      .addCase(calculateEquilibrium.rejected, (state, action) => {\r\n        const index=state.equilibria.findLastIndex(equilibrium => equilibrium.context===action.meta.arg);\r\n        console.log(index);\r\n        console.log(action.error);\r\n        state.equilibria=state.equilibria.update(index, equilibrium => update(equilibrium, {result: {$set: { errors: [action.error]}}}))\r\n      })\r\n  }\r\n});\r\n\r\nexport {calculateEquilibrium};\r\nexport {getCurrentCalculationArguments, getEquilibria};\r\nexport default equilibriaSlice.reducer;","export default function Worker_fn() {\n  return new Worker(__webpack_public_path__ + \"static/js/CalculateEquilibriumWorker.4a2b4452.worker.js\");\n}\n","import React, { Suspense } from 'react';\r\n\r\nimport './App.scss';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport CenteringDiv from './reusable_components/CenteringDiv.js';\r\nimport useWindowSize from './utils/useWindowSize.js';\r\n\r\nconst FreeQL = React.lazy(() => import(\"./FreeQL.js\"));\r\n\r\nfunction App() {\r\n  const windowSize=useWindowSize();\r\n  const headerHeight=56;\r\n  const footerHeight=windowSize.width>=768 ? 120 : 72;\r\n  return (\r\n    <>\r\n      <Navbar expand=\"sm\" bg=\"dark\" variant=\"dark\">\r\n        <CenteringDiv end=\"sm\">\r\n          <Navbar.Brand href=\"/\">\r\n            <img src={process.env.PUBLIC_URL+\"/assets/img/logo.svg\"} width=\"65\" alt=\"FreeQL\"/>\r\n          </Navbar.Brand>\r\n        </CenteringDiv>\r\n        <Navbar.Brand href=\"/\">FreeQL</Navbar.Brand>\r\n        <CenteringDiv end=\"sm\"/>\r\n        <Navbar.Collapse id=\"navbarTogglerDemo02\">\r\n          <Nav className=\"mr-auto\" style={{\"fontSize\": \"1.025rem\"}}>\r\n            <Nav.Link href=\"https://stephmorel8910.gitbook.io/freeql/\" target=\"_blank\">Help</Nav.Link>\r\n            <Nav.Link href=\"https://github.com/SoAsEr/FreeQL/blob/master/README.md\" target=\"_blank\">README</Nav.Link>\r\n            <Nav.Link href=\"https://github.com/SoAsEr/FreeQL/\" target=\"_blank\">Github</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <Suspense fallback={<div style={{\"height\" : \"calc(100vh - \"+(headerHeight+footerHeight)+\"px)\"}}/>}>\r\n        <FreeQL headerHeight={headerHeight} footerHeight={footerHeight}/>\r\n      </Suspense>\r\n      <footer className=\"bg-dark p-4 p-md-5 text-center\">\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <span className=\"text-light\">Created by Stephane Morel</span>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </footer>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) { \n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport components from \"./features/components/componentsSlice.js\";\r\nimport loading from \"./features/loading/loadingSlice.js\";\r\nimport species from \"./features/species/speciesSlice.js\";\r\nimport gasInput from \"./features/species/gases/gasInputSlice.js\";\r\nimport equilibria from \"./features/equilibria/equilibriaSlice.js\";\r\n\r\nimport { combineReducers, configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport { Provider } from 'react-redux'\r\nimport { StrictMode } from 'react';\r\n\r\nconst reducer=combineReducers({\r\n  components,\r\n  loading,\r\n  species,\r\n  gasInput,\r\n  equilibria,\r\n});\r\nconst store = configureStore({\r\n  reducer,\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: false,\r\n    immutableCheck: false,\r\n  }),\r\n});\r\n\r\n/*\r\nReactDOM.render(\r\n  //<React.StrictMode>\r\n    <App />,\r\n  //</React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n*/\r\nconst rootEl = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <StrictMode>\r\n      <App />\r\n    </StrictMode>\r\n  </Provider>, rootEl\r\n);\r\n//ReactDOM.unstable_createRoot(rootEl).render(<App />);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}