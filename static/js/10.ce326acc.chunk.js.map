{"version":3,"sources":["utils/react-select-utils.js","utils/useAsyncResources.js","getDBs.js","formatting/FormattedSupSub.js","component_groups/components/ComponentListHeader.js","utils/useComlinkWorker.js","CalculateResultWorker.js","utils/useModalStack.js","FreeQL.js"],"names":["createFormatOptionLabel","ReactComponent","label","wrapPromise","promise","result","status","suspender","then","r","e","useAsyncResourceWithBoolean","getter","initialParams","useState","current","undefined","dataCallbackRef","setDataCallbackRef","transitionState","setTransitionState","getNewData","useCallback","params","getData","useMemo","console","log","Promise","useEffect","item","options","property","row","column","getDataWithStride","i","stride","fetchCSV","url","fetch","response","reader","body","getReader","lastLine","csvBuilt","chunkParser","chunk","partial","str","arr","quote","lastLineStart","lastMatchEnd","col","matchAll","match","substring","index","parseCSVWithPartial","TextDecoder","decode","parsed","thisLastLine","slice","length","resolve","pump","read","res","done","concat","value","getComponentDB","a","type","callback","linesPerItem","chunks","hPlusValue","waterValue","components","Immutable","filter","Number","map","name","charge","db","_","getSpeciesDB","all","labels","urls","tables","mainTable","labelList","labelTable","chunkedLabelTable","labelMap","withMutations","entries","specie","set","chunkedMainTable","aqs","solids","gases","species","aqSpecies","solidSpecies","gasSpecies","id","get","logK","component","componentAmt","componentToSpecies","aqComponentToSpecies","speciesId","componentId","update","oldSet","add","solidComponentToSpecies","gasComponentToSpecies","FormattedSupSub","React","memo","props","Array","from","children","Fragment","key","centerSelectStyles","singleValue","styles","width","textAlign","option","ComponentListHeader","hPlusOptionsRef","defaultVal","onChange","Row","className","Col","xs","sm","isSearchable","formatOptionLabel","OverlayTrigger","placement","overlay","Tooltip","xmlns","height","version","viewBox","overflow","enableBackground","fill","stroke","strokeWidth","x1","y1","x2","y2","d","useComlinkWorker","WorkerClass","parameters","wrapperRef","useRef","worker","comlinkwrap","Comlink","terminate","Worker","useModalStack","modalsStack","setModalsStack","currentModal","peek","closeModal","modalName","isArray","stack","pop","openModal","push","Results","lazy","HPlusComponent","ComponentList","ComponentSelectModal","ComponentSelect","SpeciesList","TableauTable","ScrollContainer","style","headerHeight","footerHeight","Container","fluid","SpinnerComponentRow","Spinner","animation","role","CalculateButton","calculateNewResult","disableMessage","onClick","restProps","disabled","button","Button","speciesCouldBePresentOfType","speciesDB","componentsPresent","ourSpeciesCouldBePresent","ourSpeciesOccurences","has","specieId","num","speciesOccurences","specieData","size","defaultRowInputValue","equilChecked","conc","FreeQL","ConcentrationCalculatorWorker","ConcentrationCalculator","totalHOption","pHOption","hPlusOption","setHPlusOption","useReducer","oldState","action","componentToAdd","removeAll","updateIn","val","setIn","Error","componentsInputState","componentsInputStateReducer","updateConc","toggleChecked","setComponentsPresent","addComponents","union","removeComponents","subtract","speciesEnabled","setSpeciesEnabled","logKChanges","setLogKChanges","process","componentsDB","gettingNewComponentsDB","numComponents","componentAmts","linesPerId","speciesDBDefaultParams","$set","keys","gettingNewSpeciesDB","speciesCouldBePresent","memoize","speciesHere","intersect","resultMap","input","delete","inputImmutable","calculate","transit","catch","error","currentResult","calculatingNewResult","calculateButtonMessage","componentData","find","windowSize","useWindowSize","outerAdderHeight","createModalOpenCallback","createModalCloseCallback","onHPlusOptionChange","Math","log10","pow","Form","fallback","pH","span","offset","windowHeight","openTableauModal","variant","Modal","show","onHide","backdrop","scrollable","Header","closeButton","Body","Footer","Title","windowWidth"],"mappings":"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","file":"static/js/10.ce326acc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst createFormatOptionLabel = (ReactComponent) => ({label}) => <ReactComponent>{label}</ReactComponent>;\r\n\r\nexport {createFormatOptionLabel}","import { useCallback, useState, useEffect, useMemo } from \"react\";\r\n\r\nfunction wrapPromise(promise) {\r\n  let status = \"pending\";\r\n  let result;\r\n  let suspender = promise.then(\r\n    r => {\r\n      status = \"success\";\r\n      result = r;\r\n    },\r\n    e => {\r\n      status = \"error\";\r\n      result = e;\r\n    }\r\n  );\r\n  return () => {\r\n    if (status === \"pending\") {\r\n      throw suspender;\r\n    } else if (status === \"error\") {\r\n      throw result;\r\n    } else if (status === \"success\") {\r\n      return result;\r\n    }\r\n  };\r\n}\r\n\r\nconst useAsyncResourceWithBoolean=(getter, initialParams) => {\r\n  const [dataCallbackRef, setDataCallbackRef]=useState({current: undefined});\r\n  const [transitionState, setTransitionState]=useState(!!initialParams);\r\n\r\n  const getNewData=useCallback((params) => {\r\n    setTransitionState(true);\r\n    setDataCallbackRef({current: wrapPromise(getter(params).then((result) => {setTransitionState(false); return result}))});\r\n  }, [setDataCallbackRef, getter]);\r\n\r\n  \r\n  const getData=useMemo(() => {\r\n    console.log(\"went through memo\");\r\n    if(dataCallbackRef.current || initialParams===undefined){\r\n      return dataCallbackRef.current;\r\n    } else {\r\n      return () => {\r\n        throw new Promise(() => {});\r\n      }\r\n    }\r\n  }, [dataCallbackRef, transitionState]);\r\n\r\n  useEffect(() => {\r\n    if(initialParams!==undefined){\r\n      getNewData(initialParams);\r\n    }\r\n  }, []);\r\n\r\n  return [getData, getNewData, transitionState];\r\n}\r\n\r\nexport {useAsyncResourceWithBoolean};","import { chunk } from 'chunk';\r\nimport * as Immutable from 'immutable';\r\n\r\nconst getData=(item, options, property) => {\r\n  //console.log(item);    \r\n  return item[options[property].row][options[property].column];\r\n}\r\nconst getDataWithStride=(item, options, property, i) => {\r\n  return item[options[property].row][options[property].column+i*options[property].stride];\r\n}\r\n\r\nfunction parseCSVWithPartial(str) {\r\n  let arr = [];\r\n  let quote = false;\r\n\r\n  let lastLineStart=0;\r\n  let lastMatchEnd=0;\r\n  let row=0;\r\n  let col=0;\r\n  for(const match of str.matchAll(/(\"\")|(\")|(,)|(?:(\\r\\n)|(\\n)|(\\r))($)?|$/g)){\r\n    arr[row] = arr[row] || [];\r\n    arr[row][col] = arr[row][col] || '';\r\n    if(match[7]){\r\n      break;\r\n    }\r\n    arr[row][col]+=str.substring(lastMatchEnd, match.index);\r\n    if(match[1]){\r\n      if(quote){\r\n        arr[row][col]+='\"';\r\n      }\r\n      lastMatchEnd=match.index+2;\r\n    } else if(match[2]){\r\n      quote=!quote;\r\n      lastMatchEnd=match.index+1;\r\n    } else if(match[3]){\r\n      ++col;\r\n      lastMatchEnd=match.index+1;\r\n    } else if(match[4]) {\r\n      ++row;\r\n      col=0;\r\n      lastMatchEnd=match.index+2;\r\n      lastLineStart=lastMatchEnd;\r\n    } else if(match[5] || match[6]) {\r\n      ++row;\r\n      col=0;\r\n      lastMatchEnd=match.index+1;\r\n      lastLineStart=lastMatchEnd;\r\n    }\r\n  }\r\n  return [arr, str.substring(lastLineStart)];\r\n}\r\n\r\nconst fetchCSV=(url) => {\r\n  return fetch(url)\r\n    .then(\r\n      response => {\r\n        const reader=response.body.getReader();\r\n        let lastLine=\"\";\r\n        let csvBuilt=[];\r\n        const chunkParser=(chunk, partial) => {\r\n          const decodedChunk=lastLine+new TextDecoder(\"utf-8\").decode(chunk);\r\n          const [parsed, thisLastLine] = parseCSVWithPartial(decodedChunk);\r\n          if(!partial) {\r\n            lastLine=thisLastLine;\r\n            return parsed.slice(0, parsed.length-1);\r\n          } else {\r\n            return parsed;\r\n          }\r\n        }\r\n        return new Promise(resolve => {\r\n          pump();\r\n          function pump() {\r\n            return reader.read().then(res => {\r\n              if(res.done) {\r\n                csvBuilt=csvBuilt.concat(chunkParser(res.value, true));\r\n                resolve(csvBuilt);\r\n                return;\r\n              }\r\n              csvBuilt=csvBuilt.concat(chunkParser(res.value));\r\n              pump();\r\n            })\r\n          }\r\n        })\r\n      }\r\n    )\r\n}\r\n\r\nconst getComponentDB=async ({url, options, type, callback}) => {\r\n  console.log({url, options, type, callback});\r\n  if(type===\"link\") {\r\n    return fetchCSV(url).then(result => chunk(result, options.linesPerItem))\r\n    .then(chunks => \r\n      ({\r\n        hPlusValue: options.hPlusValue, \r\n        waterValue: options.waterValue,\r\n        components: Immutable.OrderedMap(chunks.filter(item => Number(getData(item, options, \"id\"))).map(item => [\r\n          Number(getData(item, options, \"id\")),\r\n          {\r\n            name: getData(item, options, \"name\"), \r\n            charge: Number(getData(item, options, \"charge\")),\r\n          }\r\n        ]))\r\n      })\r\n    ).then(db => {\r\n      if(!callback) {\r\n        return db;\r\n      }\r\n      const res=callback(db);\r\n      if(res instanceof Promise){\r\n        return res.then(_ => db);\r\n      } else {\r\n        return db;\r\n      }\r\n    });\r\n    \r\n  }\r\n};\r\n\r\nconst componentDBDefaultParams=(callback) => ({\r\n  url: process.env.PUBLIC_URL+\"/assets/defaultdb/comp.vdb\", \r\n  type: \"link\",\r\n  options: {\r\n    linesPerItem: 1,\r\n    id: {row: 0, column: 0},\r\n    name: {row: 0, column: 1},\r\n    charge: {row: 0, column: 2},\r\n    hPlusValue: 330,\r\n    waterValue: 2,\r\n  }, \r\n  callback\r\n});\r\n\r\nconst getSpeciesDB=({url, options, type, callback}) => {\r\n  console.log({url, options, type, callback}); \r\n  if(type===\"link\") {\r\n    return Promise.all([url, ...options.labels.urls].map(url => fetchCSV(url))).then(tables => {\r\n      const [mainTable, ...labelTables]=tables;\r\n      const labelList=labelTables.map(labelTable => chunk(labelTable, options.linesPerItem)).map(chunkedLabelTable => chunkedLabelTable.map(labelTable => getData(labelTable, options.labels, \"id\")));\r\n\r\n      const labelMap=Immutable.Map().withMutations((labelMap) => {\r\n        for(const [index, labelTable] of labelList.entries()) {\r\n          for(const specie of labelTable){\r\n            labelMap.set(Number(specie), options.labels.labelMap[index]);\r\n          }\r\n        };\r\n      });\r\n      \r\n      \r\n      const chunkedMainTable=chunk(mainTable, options.linesPerItem).filter(chunk => Number(chunk[0][0]));\r\n      const db={\r\n        aqs: {},\r\n        solids: {},\r\n        gases: {},\r\n      }\r\n      db.aqs.species=Immutable.OrderedMap().withMutations(aqSpecies => {  \r\n        db.solids.species=Immutable.OrderedMap().withMutations(solidSpecies => {\r\n          db.gases.species=Immutable.OrderedMap().withMutations(gasSpecies => {\r\n            const db={aqs: aqSpecies, solids: solidSpecies, gases: gasSpecies};\r\n            for(const item of chunkedMainTable){\r\n              const id=Number(getData(item, options, \"id\"));\r\n              db[labelMap.get(id) ?? \"aqs\"].set(id, \r\n                {\r\n                  name: getData(item, options, \"name\"),\r\n                  charge: Number(getData(item, options, \"charge\")),\r\n                  logK: Number(getData(item, options, \"logK\")),\r\n                  label: labelMap.get(id) ?? 0,\r\n                  components: Immutable.Map().withMutations((components) => {\r\n                    for(let i=0; i<getData(item, options, \"numComponents\"); ++i){\r\n                      const component=Number(getDataWithStride(item, options, \"components\", i));\r\n                      const componentAmt=Number(getDataWithStride(item, options, \"componentAmts\", i));\r\n                      components.set(component, componentAmt);\r\n                    }\r\n                  }),\r\n                }\r\n              )\r\n            }\r\n          });\r\n        });\r\n      });   \r\n      db.aqs.componentToSpecies=Immutable.Map().withMutations(aqComponentToSpecies => {\r\n        for(const [speciesId, {components}] of db.aqs.species) {\r\n          for(const [componentId] of components) {\r\n            aqComponentToSpecies.update(componentId, (oldSet=Immutable.Set()) => oldSet.add(speciesId));\r\n          }\r\n        }\r\n      });\r\n      db.solids.componentToSpecies=Immutable.Map().withMutations(solidComponentToSpecies => {\r\n        for(const [speciesId, {components}] of db.solids.species) {\r\n          for(const [componentId] of components) {\r\n            solidComponentToSpecies.update(componentId, (oldSet=Immutable.Set()) => oldSet.add(speciesId));\r\n          }\r\n        }\r\n      });\r\n      db.gases.componentToSpecies=Immutable.Map().withMutations(gasComponentToSpecies => {\r\n        for(const [speciesId, {components}] of db.gases.species) {\r\n          for(const [componentId] of components) {\r\n            gasComponentToSpecies.update(componentId, (oldSet=Immutable.Set()) => oldSet.add(speciesId));\r\n          }\r\n        }\r\n      });\r\n      \r\n      return db;\r\n    }).then(db => {\r\n      if(!callback) {\r\n        return db;\r\n      }\r\n      const res=callback(db);\r\n      if(res instanceof Promise){\r\n        return res.then(_ => db);\r\n      } else {\r\n        return db;\r\n      }\r\n    });\r\n    \r\n  }\r\n}\r\n\r\nconst speciesDBDefaultParams=(callback) => ({\r\n  url: process.env.PUBLIC_URL+\"/assets/defaultdb/thermo.vdb\", \r\n  type: \"link\",\r\n  options: {\r\n    linesPerItem: 3,\r\n    id: {row: 0, column: 0},\r\n    name: {row: 0, column: 1},\r\n    charge: {row: 0, column: 6},\r\n    logK: {row: 0, column: 3},\r\n    numComponents: {row: 0, column: 10},\r\n    components: {row: 1, column: 1, stride: 2},\r\n    componentAmts: {row: 1, column: 0, stride: 2},\r\n    labels: {\r\n      urls: [process.env.PUBLIC_URL+\"/assets/defaultdb/type6.vdb\", process.env.PUBLIC_URL+\"/assets/defaultdb/gases.vdb\"],\r\n      linesPerId: 3,\r\n      id: {row: 0, column: 0},\r\n      labelMap: [\"solids\", \"gases\"]\r\n    }\r\n  }, \r\n  callback, \r\n});\r\n\r\nexport {getComponentDB, componentDBDefaultParams, getSpeciesDB, speciesDBDefaultParams}","import React from \"react\";\r\n\r\nconst FormattedSupSub=React.memo((props) => {\r\n  return(\r\n    <>\r\n      {Array.from(props.children.matchAll(/([^_^]+)(?:\\^(.)|_(.))?/g)).map((value) => <React.Fragment key={props.children.substring(0, value.index)}>{value[1]}<sup>{value[2]}</sup><sub>{value[3]}</sub></React.Fragment>)}\r\n    </>\r\n  );\r\n});\r\nexport default FormattedSupSub;","import React from 'react';\r\n\r\nimport Select from 'react-select';\r\n\r\nimport FormattedSupSub from '../../formatting/FormattedSupSub.js';\r\n\r\nimport { createFormatOptionLabel } from '../../utils/react-select-utils.js';\r\n\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst centerSelectStyles = {\r\n  singleValue: styles => ({ ...styles, width: '100%', textAlign : \"center\" }),\r\n  option: styles => ({ ...styles, width: '100%', textAlign : \"center\" }),\r\n};\r\n\r\nconst ComponentListHeader=React.memo((props) => {\r\n  const {hPlusOptionsRef, defaultVal, onChange}=props;\r\n  return (\r\n    <Row className=\"mt-4 mb-3\">\r\n      <Col xs=\"3\" sm=\"5\" className=\"center-items\">\r\n        <label className=\"w-100 d-none d-sm-block text-muted text-center\">\r\n          Components\r\n        </label>\r\n        <label className=\"w-100 d-block d-sm-none text-muted text-center\">\r\n          Comp.\r\n        </label>\r\n      </Col>\r\n      <Col xs=\"7\" sm=\"5\">\r\n        <Select isSearchable={false} options={hPlusOptionsRef.current} formatOptionLabel={createFormatOptionLabel(FormattedSupSub)} styles={centerSelectStyles} onChange={onChange} value={defaultVal}/>\r\n      </Col>\r\n      <Col xs=\"2\" className=\"center-items\">\r\n        <OverlayTrigger\r\n          placement=\"bottom\"\r\n          overlay={\r\n            <Tooltip>\r\n              Equilibrium Concentration\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"0.875rem\" version=\"1.1\" id=\"Layer_1\" viewBox=\"0 0 139 119.177\" overflow=\"visible\" enableBackground=\"new 0 0 139 119.177\">\r\n            <line fill=\"none\" stroke=\"#000000\" strokeWidth=\"7\" x1=\"139\" y1=\"63.308\" x2=\"0\" y2=\"63.308\"></line>\r\n            <line fill=\"none\" stroke=\"#000000\" strokeWidth=\"6\" x1=\"30.646\" y1=\"92.308\" x2=\"2.189\" y2=\"65.308\"></line>\r\n            <line fill=\"none\" stroke=\"#000000\" strokeWidth=\"7\" x1=\"3\" y1=\"30.308\" x2=\"133\" y2=\"30.308\"></line>\r\n            <line fill=\"none\" stroke=\"#000000\" strokeWidth=\"6\" x1=\"99.296\" y1=\"2.308\" x2=\"130.953\" y2=\"28.608\"></line>\r\n            <path fill=\"none\" stroke=\"#FFFFFF\" strokeWidth=\"2\" d=\"M53,118.177c2.333,0,4.667,0,7,0\"></path>\r\n          </svg>\r\n        </OverlayTrigger>\r\n      </Col>\r\n    </Row>\r\n  )\r\n});\r\n\r\nexport default ComponentListHeader;","import { useState, useEffect, useRef } from \"react\";\r\nimport * as Comlink from \"comlink\";;\r\n\r\nconst useComlinkWorker=(WorkerClass, parameters) => {\r\n  const wrapperRef=useRef(null);\r\n  useEffect(() => {\r\n    const worker=new WorkerClass(parameters);\r\n    const comlinkwrap=Comlink.wrap(worker);\r\n    wrapperRef.current=comlinkwrap;\r\n    return () => {worker.terminate()}\r\n  }, []);\r\n  return wrapperRef.current;\r\n}\r\n\r\nexport default useComlinkWorker;","export default function() {\n  return new Worker(__webpack_public_path__ + \"static/js/CalculateResultWorker.63dfa9cf.worker.js\");\n}\n","import { useState, useCallback } from \"react\"\r\nimport * as Immutable from \"immutable\";\r\n\r\nconst useModalStack=() => {\r\n  const [modalsStack, setModalsStack]=useState(Immutable.Stack());\r\n  const currentModal=modalsStack.peek();\r\n  const closeModal=useCallback((modalName) => {\r\n    if(Array.isArray(modalName)){\r\n      setModalsStack(modalsStack.withMutations(stack => {\r\n        for(const name of modalName){\r\n          if(stack.peek()===name) {\r\n            stack.pop();\r\n          }\r\n        }\r\n      }));\r\n    } else if(currentModal===modalName) {\r\n      setModalsStack(modalsStack.pop());\r\n    }\r\n  }, [setModalsStack, currentModal, modalsStack]);\r\n  const openModal=useCallback((modalName) => {\r\n    setModalsStack(modalsStack.push(modalName));\r\n  }, [setModalsStack, modalsStack]);\r\n  return [currentModal, openModal, closeModal]\r\n}\r\n\r\nexport default useModalStack;","import React, { useState, useRef, useReducer, useCallback , Suspense } from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport memoize from 'fast-memoize';\r\n\r\nimport * as Immutable from 'immutable';\r\nimport * as transit from \"transit-immutable-js\";\r\nimport update from \"immutability-helper\"\r\n\r\nimport useWindowSize from './utils/useWindowSize.js';\r\nimport { useAsyncResourceWithBoolean } from \"./utils/useAsyncResources.js\";\r\n\r\nimport { componentDBDefaultParams, getComponentDB, getSpeciesDB, speciesDBDefaultParams } from './getDBs.js';\r\n\r\nimport ComponentListHeader from \"./component_groups/components/ComponentListHeader.js\"\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\n\r\nimport useComlinkWorker from './utils/useComlinkWorker.js';\r\n//eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport ConcentrationCalculator from 'worker-loader!./CalculateResultWorker.js'\r\nimport useModalStack from './utils/useModalStack.js';\r\n\r\nconst Results = React.lazy(() => import('./component_groups/Result.js'));\r\n\r\nconst HPlusComponent = React.lazy(() => import(\"./component_groups/components/HPlusComponent.js\"));\r\nconst ComponentList = React.lazy(() => import(\"./component_groups/components/ComponentList.js\"));\r\n\r\nconst ComponentSelectModal = React.lazy(() => import(\"./component_groups/components/ComponentSelectModal.js\"))\r\nconst ComponentSelect = React.lazy(() => import(\"./component_groups/components/ComponentSelect.js\"))\r\n\r\nconst SpeciesList = React.lazy(() => import('./component_groups/Species.js'));\r\nconst TableauTable = React.lazy(() => import('./component_groups/Tableau.js'));\r\n\r\nconst ScrollContainer=React.memo((props) => {\r\n  return (\r\n    <div style={{\"maxHeight\" : \"calc(100vh - \"+(props.headerHeight+props.footerHeight)+\"px)\", \"overflowY\" : \"auto\", \"width\": \"100%\"}}>\r\n      <div style={{\"overflowX\" : \"hidden\"}}>\r\n        <Container fluid>\r\n          {props.children}\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\nconst SpinnerComponentRow=React.memo((props) => {\r\n  return (\r\n    <Row className=\"mb-3\" style={{\"height\": \"38px\"}}>\r\n      <Col className=\"center-items\">\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </Col>\r\n    </Row>\r\n  );\r\n});\r\n\r\nconst CalculateButton=React.memo((props) => {\r\n  const { calculateNewResult, disableMessage, onClick, ...restProps }=props;\r\n  const disabled=!!disableMessage();\r\n  const button=<Button {...restProps} onClick={(e) => {onClick(e); calculateNewResult();} } disabled={disabled}>Calculate</Button>;\r\n  if(disabled) {\r\n    return (\r\n      <OverlayTrigger\r\n        placement=\"top\"\r\n        overlay={\r\n          <Tooltip>\r\n            {disableMessage()}\r\n          </Tooltip>\r\n        }\r\n      >\r\n        <div className=\"disabled-button-wrapper\">\r\n          {button}\r\n        </div>\r\n      </OverlayTrigger>\r\n    )\r\n  } else {\r\n    return button;\r\n  }\r\n});\r\n\r\nconst speciesOccurences=(componentToSpecies, componentsPresent) => Immutable.Map().withMutations((map) => {\r\n  for(const componentId of componentsPresent) {\r\n    if(componentToSpecies.has(componentId)){\r\n      for(const specieId of componentToSpecies.get(componentId)) {\r\n        map.update(specieId, (num=0)=>num+1);\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst speciesCouldBePresentOfType=(speciesDB, componentsPresent) => Immutable.OrderedSet().withMutations(ourSpeciesCouldBePresent => {\r\n  const ourSpeciesOccurences=speciesOccurences(speciesDB.componentToSpecies, componentsPresent);\r\n  for(const [specie, specieData] of speciesDB.species){\r\n    if(ourSpeciesOccurences.get(specie)===specieData.components.size){\r\n      ourSpeciesCouldBePresent.add(specie);\r\n    } \r\n  }\r\n})\r\n\r\nconst defaultRowInputValue=Immutable.Map({equilChecked: false, conc: \"\"});\r\n\r\nconst FreeQL=(props) => {\r\n  const hPlusOptionsRef=useRef([\r\n    { value: \"unique_1\", label: 'totalH' },\r\n    { value: \"unique_2\", label: 'pH' },\r\n    { value: \"unique_3\", label: 'Alkalinity^1' },\r\n    { value: \"unique_4\", label: 'Other Alkalinity' },\r\n  ]);\r\n  const ConcentrationCalculatorWorker=useComlinkWorker(ConcentrationCalculator);\r\n  const [totalHOption, pHOption, alkOption, alkOtherOption]=hPlusOptionsRef.current;\r\n  const [hPlusOption, setHPlusOption]=useState(totalHOption);\r\n\r\n  const [componentsInputState, componentsInputStateReducer]=useReducer(\r\n    (oldState, action) => {\r\n      switch(action.action){\r\n        case \"add\":\r\n          return oldState.withMutations((map) => {\r\n            for(const componentToAdd of action.value.components){\r\n              map.set(componentToAdd, defaultRowInputValue);\r\n            }\r\n          });\r\n        case \"remove\":\r\n          return oldState.removeAll(action.value.components);\r\n        case \"toggleEquilChecked\":\r\n          return oldState.updateIn([action.value.component, \"equilChecked\"], (val) => !val);\r\n        case \"setConc\":\r\n          return oldState.setIn([action.value.component, \"conc\"], action.value.conc);\r\n        default:\r\n          throw new Error();\r\n      }\r\n    }, \r\n    Immutable.Map()\r\n  );\r\n  const updateConc=useCallback((component, conc)=> {\r\n    componentsInputStateReducer({action: \"setConc\", value : {component, conc}});\r\n  }, [componentsInputStateReducer]);\r\n  const toggleChecked=useCallback((component) => {\r\n    componentsInputStateReducer({action: \"toggleEquilChecked\", value: {component}});\r\n  }, [componentsInputStateReducer]);\r\n\r\n  const [componentsPresent, setComponentsPresent]=useState(Immutable.OrderedSet());\r\n  const addComponents=useCallback((components) => {\r\n    componentsInputStateReducer({action: \"add\", value: {components}});\r\n    setComponentsPresent(componentsPresent.union(components));\r\n  }, [componentsPresent, setComponentsPresent, componentsInputStateReducer]);\r\n  const removeComponents=useCallback((components) => {\r\n    componentsInputStateReducer({action: \"remove\", value: {components}});\r\n    setComponentsPresent(componentsPresent.subtract(components));\r\n  }, [componentsPresent, setComponentsPresent, componentsInputStateReducer]);\r\n\r\n  const [speciesEnabled, setSpeciesEnabled]=useState({\r\n    aqs: Immutable.OrderedSet(),\r\n    solids: Immutable.OrderedSet(),\r\n    gases: Immutable.OrderedSet(),\r\n  });\r\n  const [logKChanges, setLogKChanges]=useState({\r\n    aqs: Immutable.Map(),\r\n    solids: Immutable.Map(),\r\n    gases: Immutable.Map(),\r\n  });\r\n\r\n  const [componentsDB, getNewComponentsDB, gettingNewComponentsDB]=useAsyncResourceWithBoolean(getComponentDB, componentDBDefaultParams((db) => {\r\n    console.log(db);\r\n    addComponents([db.waterValue, db.hPlusValue]);\r\n  }));\r\n  const [speciesDB, getNewSpeciesDB, gettingNewSpeciesDB]=useAsyncResourceWithBoolean(getSpeciesDB, speciesDBDefaultParams((db) => {\r\n    console.log(db);\r\n    setSpeciesEnabled(update(speciesEnabled, {aqs : {$set: Immutable.Set(db.aqs.species.keys())}}));\r\n  }));\r\n\r\n  const speciesCouldBePresent=useCallback(memoize(() => ({\r\n    aqs: speciesCouldBePresentOfType(speciesDB().aqs, componentsPresent),\r\n    solids: speciesCouldBePresentOfType(speciesDB().solids, componentsPresent),\r\n    gases: speciesCouldBePresentOfType(speciesDB().gases, componentsPresent),\r\n  })), [speciesDB, componentsPresent]);\r\n\r\n  const speciesHere=useCallback(memoize(() => {\r\n    return {\r\n      aqs: Immutable.List(speciesCouldBePresent().aqs.intersect(speciesEnabled.aqs)),\r\n      solids: Immutable.List(speciesCouldBePresent().solids.intersect(speciesEnabled.solids)),\r\n      gases: Immutable.List(speciesCouldBePresent().gases.intersect(speciesEnabled.gases)),\r\n    }\r\n  }), [speciesCouldBePresent, speciesEnabled]);\r\n\r\n  const [resultMap, setResultMap]=useState(Immutable.Map());\r\n  const [currentResult, calculateNewResult, calculatingNewResult]=useAsyncResourceWithBoolean(useCallback(() => {\r\n    const input={speciesHere: speciesHere(), componentsPresent: Immutable.List(componentsPresent.delete(componentsDB().waterValue)), logKChanges, componentsInputState};\r\n    const inputImmutable=Immutable.fromJS(input);\r\n    let result;\r\n    if(!resultMap.has(inputImmutable)) {\r\n      result=ConcentrationCalculatorWorker.calculate(transit.toJSON(input)).then(res => transit.fromJSON(res)).catch((error) => error);\r\n      //setResultMap(resultMap.set(inputImmutable, result));\r\n    } else {\r\n      result=resultMap.get(inputImmutable);\r\n    }\r\n    return result; \r\n  }, [resultMap, componentsPresent, ConcentrationCalculatorWorker, componentsDB, componentsInputState, logKChanges, speciesHere]));\r\n\r\n  const calculateButtonMessage=useCallback(memoize(() => {\r\n    if(calculatingNewResult){\r\n      return \"Calculating...\"\r\n    } else if(gettingNewComponentsDB || gettingNewSpeciesDB){\r\n      return \"Getting Databases...\"\r\n    } else if(componentsInputState.filter((componentData, component) => componentsDB().waterValue!==component && componentsPresent.has(component)).find((componentData, component) => {\r\n      return typeof componentData.get(\"conc\")!==\"number\";\r\n    })) {\r\n      return \"At least one component is empty or invalid\";\r\n    } else {\r\n      return false;\r\n    }\r\n  }), [componentsDB, componentsInputState, componentsPresent, gettingNewComponentsDB, gettingNewSpeciesDB, calculatingNewResult]);\r\n\r\n  const windowSize=useWindowSize();\r\n\r\n  const outerAdderHeight=windowSize.height>=700 ? 54 : 0;\r\n  const buttonsHeight=70;\r\n\r\n  const [currentModal, openModal, closeModal]=useModalStack();\r\n\r\n  const createModalOpenCallback=useCallback(memoize((params) => {\r\n    return () => openModal(params);\r\n  }), [openModal]);\r\n  const createModalCloseCallback=useCallback(memoize((params) => {\r\n    return () => closeModal(params);\r\n  }), [closeModal]);\r\n\r\n  const onHPlusOptionChange=useCallback((val) => {\r\n    if(hPlusOption===pHOption){\r\n      toggleChecked(componentsDB().hPlusValue);\r\n      updateConc(componentsDB().hPlusValue, -Math.log10(componentsInputState.get(componentsDB().hPlusValue).get(\"conc\")))\r\n    } else if(val===pHOption) {\r\n      toggleChecked(componentsDB().hPlusValue);\r\n      updateConc(componentsDB().hPlusValue, Math.pow(10, -componentsInputState.get(componentsDB().hPlusValue).get(\"conc\")))\r\n    }\r\n    setHPlusOption(val);\r\n  }, [setHPlusOption, updateConc, hPlusOption, pHOption, toggleChecked, componentsDB, componentsInputState]);\r\n\r\n  return(\r\n    <Form>\r\n      <Container style={{\"height\" : \"calc(100vh - \"+(props.headerHeight+buttonsHeight+props.footerHeight)+\"px)\"}}>\r\n        <Row>\r\n          <Col className=\"p-0\">\r\n            <ScrollContainer headerHeight={props.headerHeight} footerHeight={props.footerHeight+buttonsHeight+outerAdderHeight}>\r\n              <ComponentListHeader hPlusOptionsRef={hPlusOptionsRef} defaultVal={hPlusOption} onChange={onHPlusOptionChange}/>\r\n              <Suspense fallback={<SpinnerComponentRow/>}>\r\n                <HPlusComponent pH={pHOption===hPlusOption} componentsDB={componentsDB} componentsInputState={componentsInputState} updateConc={updateConc}/>\r\n              </Suspense>\r\n              <Row>\r\n                <Col xs=\"3\" sm=\"5\" className=\"center-items\">\r\n                  <label className=\"w-100 d-none d-sm-block text-muted text-center\">\r\n                    Components\r\n                  </label>\r\n                  <label className=\"w-100 d-block d-sm-none text-muted text-center\">\r\n                    Comp.\r\n                  </label>\r\n                </Col>\r\n                <Col xs={{span: 7, offset: 0}} sm={{span: 5, offset:0}}>\r\n                  <label className=\"w-100 text-muted text-center\">\r\n                    Total Conc.\r\n                  </label>\r\n                </Col>\r\n              </Row>\r\n              <hr className=\"mt-0 mb-3\"/>\r\n              <Suspense fallback={<SpinnerComponentRow/>}>\r\n                <ComponentList componentsDB={componentsDB} componentsPresent={componentsPresent} toggleChecked={toggleChecked} updateConc={updateConc} removeComponents={removeComponents}/>\r\n              </Suspense>\r\n              <Row>\r\n                <Col>\r\n                  {\r\n                    windowSize.height<700 &&\r\n                    <div className=\"d-flex center-items w-100\">\r\n                      <Suspense fallback=\"\">\r\n                        <ComponentSelectModal componentsPresent={componentsPresent} componentsDB={componentsDB} addComponents={addComponents} windowHeight={windowSize.height}/>\r\n                      </Suspense>\r\n                    </div>\r\n                  }\r\n                </Col>\r\n              </Row>\r\n            </ScrollContainer>\r\n            <Container fluid>\r\n              <Row className=\"pt-3\">\r\n                <Col>\r\n                  {\r\n                    windowSize.height>=700 &&\r\n                    <Suspense fallback=\"\">\r\n                      <ComponentSelect componentsPresent={componentsPresent} componentsDB={componentsDB} addComponents={addComponents}/>\r\n                    </Suspense>\r\n                  }\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n          <Col xs=\"4\" className=\"d-none d-md-flex p-0\">\r\n            <ScrollContainer headerHeight={props.headerHeight} footerHeight={props.footerHeight+buttonsHeight}>\r\n              <Row className=\"mt-4\">\r\n                <Col className=\"center-items\">\r\n                  <h5 className=\"text-muted text-center\">\r\n                    Species\r\n                  </h5>\r\n                </Col>\r\n              </Row>\r\n              <Suspense fallback={<SpinnerComponentRow/>}>\r\n                <SpeciesList openTableauModal={createModalOpenCallback(\"tableau\")} speciesDB={speciesDB} componentsDB={componentsDB} componentsPresent={componentsPresent} speciesEnabled={speciesEnabled} speciesCouldBePresent={speciesCouldBePresent} setSpeciesEnabled={setSpeciesEnabled}/>\r\n              </Suspense>\r\n            </ScrollContainer>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Container>\r\n        <Form.Row className=\"py-3\">\r\n          <Col className=\"d-none d-md-block\">\r\n            <CalculateButton onClick={createModalOpenCallback(\"results\")} disableMessage={calculateButtonMessage} className=\"w-100\" variant=\"primary\" calculateNewResult={calculateNewResult}/>\r\n          </Col>\r\n          <Col className=\"d-block d-md-none\">\r\n            <Button className=\"w-100\" variant=\"primary\" onClick={createModalOpenCallback(\"species\")}>Select Species</Button>\r\n          </Col>\r\n        </Form.Row>\r\n      </Container>\r\n      <Modal show={currentModal===\"species\"} onHide={createModalCloseCallback(\"species\")} backdrop=\"static\" scrollable>\r\n        <Modal.Header closeButton>\r\n          Species\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Suspense fallback={<SpinnerComponentRow/>}>\r\n            <SpeciesList openTableauModal={createModalOpenCallback(\"tableau\")} speciesDB={speciesDB} componentsDB={componentsDB} componentsPresent={componentsPresent} speciesEnabled={speciesEnabled} speciesCouldBePresent={speciesCouldBePresent} setSpeciesEnabled={setSpeciesEnabled}/>\r\n          </Suspense>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={createModalCloseCallback(\"species\")}>\r\n            Close\r\n          </Button>\r\n          <CalculateButton onClick={createModalOpenCallback(\"results\")} disableMessage={calculateButtonMessage} className=\"ml-auto\" variant=\"primary\" calculateNewResult={calculateNewResult}/>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal size=\"xl\" show={currentModal===\"tableau\"} onHide={createModalCloseCallback(\"tableau\")} backdrop=\"static\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Tableau</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Suspense fallback={<SpinnerComponentRow/>}>\r\n            <TableauTable logKChanges={logKChanges} setLogKChanges={setLogKChanges} componentsPresent={componentsPresent} componentsInputState={componentsInputState} windowWidth={windowSize.width} speciesHere={speciesHere} speciesEnabled={speciesEnabled} speciesDB={speciesDB} componentsDB={componentsDB}/>\r\n          </Suspense>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={createModalCloseCallback(\"tableau\")}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal size=\"xl\" show={currentModal===\"results\"} onHide={createModalCloseCallback([\"results\", \"species\"])} backdrop=\"static\" scrollable>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Results</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Suspense fallback={<SpinnerComponentRow/>}>\r\n            <Results currentResult={currentResult}/>\r\n          </Suspense>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={createModalCloseCallback([\"results\", \"species\"])}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FreeQL;"],"sourceRoot":""}