{"version":3,"sources":["utils/CenteringDiv.js","utils/ref-utils.js","utils/useResizeObserver.js","utils/ResizeObserverWrapper.js","utils/useWindowSize.js","utils/useAsyncResources.js","utils/table-utils.js","getDBs.js","utils/string-utils.js","utils/react-select-utils.js","utils/ConstantValidationTextInput.js","Components/FormattedChemicalCompound.js","Components/FormattedSupSub.js","Components.js","Species.js","Tableau.js","utils/useComlinkWorker.js","CalculateResultWorker.js","utils/useModalStack.js","Result.js","utils/array-utils.js","FreeQL.js","App.js","serviceWorker.js","index.js"],"names":["CenteringDiv","props","className","start","end","children","mergeRefs","refs","filteredRefs","filter","Boolean","length","inst","ref","current","useResizeObserver","callback","resizeObsRef","useRef","ResizeObserver","entries","boundingRect","target","getBoundingClientRect","width","height","onUpdate","cleanupOld","onNull","useCallback","node","useCallbackRef","observe","unobserve","ResizeObserverWrapper","React","forwardRef","useWindowSize","useState","undefined","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","wrapPromise","promise","result","status","suspender","then","r","e","useAsyncResourceWithBoolean","getter","initialParams","dataCallbackRef","setDataCallbackRef","transitionState","setTransitionState","getNewData","params","getData","useMemo","Promise","textToTable","text","resolve","CSVParse","relax_column_count","err","item","options","property","row","column","getDataWithStride","i","stride","getComponentDB","url","type","console","log","fetch","response","chunk","linesPerItem","chunks","hPlusValue","waterValue","components","Immutable","Number","map","name","charge","db","res","_","getSpeciesDB","all","labels","urls","responses","tables","mainTable","labelList","labelTable","chunkedLabelTable","labelMap","withMutations","index","specie","set","chunkedMainTable","aqs","species","componentToSpecies","solids","gases","aqSpecies","solidSpecies","gasSpecies","id","get","logK","label","component","componentAmt","aqComponentToSpecies","speciesId","componentId","update","oldSet","add","solidComponentToSpecies","gasComponentToSpecies","numberToExpWithTrailing","number","maxLength","minExp","pow10","Math","floor","abs","log10","toPrecision","toExponential","replace","createFormatOptionLabel","ReactComponent","ConstantValidationTextInput","memo","child","Children","only","value","setValue","selection","setSelection","validationMisfired","setValidationMisfire","selectRef","selectionStart","selectionEnd","cloneElement","onSelect","onChange","validation","onBlur","defaultProps","FormattedChemicalCompound","regex","Array","from","matchAll","match","chargeValue","groups","ChargeValue1","ChargeValue2","reduce","prev","curr","chargeSign","ChargeSign1","ChargeSign2","terminator","EndMatcher1","EndMatcher2","EndMatcher3","EndMatcher4","key","substring","WordMatcher","SubMatcher","FormattedSupSub","Fragment","chargeSignRegex","chargeSignSwitcher","ChargeValue","ChargeSign","memoizedStringMatchAllReplace","memoize","str","replaceFunc","matches","nextSubstrStart","strSoFar","useComponentSearchFilter","componentsDB","inputValue","componentName","toLowerCase","includes","ComponentSelect","componentsPresent","addComponents","availableComponents","componentData","searchFilter","filterOption","option","searchValue","formatOptionLabel","ComponentSelectModal","windowHeight","modalIsOpen","setModalIsOpen","componentsStaged","setComponentsStaged","setSearchValue","componentsFiltered","reset","style","onClick","viewBox","fill","xmlns","fillRule","d","Modal","show","onHide","Header","closeButton","Body","InputGroup","Prepend","Text","Form","Control","placeholder","disableHeight","rowHeight","overscanRowCount","rowRenderer","isStaged","Button","delete","variant","size","rowCount","Footer","centerSelectStyles","singleValue","styles","textAlign","ComponentListHeader","hPlusOptionsRef","defaultVal","Row","Col","xs","sm","isSearchable","OverlayTrigger","placement","overlay","Tooltip","version","overflow","enableBackground","stroke","strokeWidth","x1","y1","x2","y2","ComponentRow","updateConc","toggleChecked","noClose","disableCheck","removeComponents","controlChecked","checked","setChecked","input","is_number","Check","disabled","HPlusComponent","componentsInputState","pH","amt","pow","ComponentsList","SpeciesListItem","setSpecieEnabled","enabled","extraCheckProps","readOnly","ListGroup","Item","SpeciesListGroup","speciesEnabled","setSpeciesEnabled","speciesCouldBePresent","speciesDB","$set","ViewTableauText","openTableauModal","clipRule","SpeciesList","restProps","LogKEditor","logKChanges","setLogKChanges","newLogKVal","setNewLogVal","editing","setEditing","editBoxVal","setEditBoxVal","editBoxRef","showDefault","focus","submitEditVal","preventDefault","onSubmit","onKeyDown","keyCode","stopPropagation","toFixed","TableauTable","speciesHere","windowWidth","setTypedLogKChanges","newMap","topLeftWidth","setTopLeftWidth","topLeftHeight","setTopLeftHeight","logKWidth","setLogKWidth","lg","headerColumn","accessor","dataColumns","getIn","logKColumn","bind","columns","unshift","push","data","flatten","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","topLeftRef","logKRef","autoHide","autoHeight","autoHeightMax","renderTrackHorizontal","finalStyle","$merge","right","bottom","left","borderRadius","marginLeft","marginRight","renderTrackVertical","top","marginTop","Table","striped","bordered","hover","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getRowProps","cells","cell","getCellProps","group","getFooterGroupProps","getFooterProps","useComlinkWorker","WorkerClass","parameters","comlinkWrapper","setComlinkWrapper","worker","Comlink","terminate","Worker","useModalStack","modalsStack","setModalsStack","currentModal","peek","closeModal","modalName","isArray","stack","pop","openModal","ConcentrationTable","currentResult","conc","solidsPresent","borderLengths","array","a","CellType","has","TotalConcentrationTable","totalConc","SolublilityProductTable","solidsNotPresent","solubilityProduct","ResultTables","ResultError","message","Results","Error","ScrollContainer","headerHeight","footerHeight","Container","fluid","SpinnerComponentRow","Spinner","animation","role","CalculateButton","calculateNewResult","disableMessage","button","speciesCouldBePresentOfType","ourSpeciesCouldBePresent","ourSpeciesOccurences","specieId","num","speciesOccurences","specieData","defaultRowInputValue","equilChecked","FreeQL","unstable_useOpaqueIdentifier","ConcentrationCalculatorWorker","ConcentrationCalculator","totalHOption","pHOption","hPlusOption","setHPlusOption","useReducer","oldState","action","componentToAdd","removeAll","updateIn","val","setIn","componentsInputStateReducer","setComponentsPresent","union","subtract","process","gettingNewComponentsDB","numComponents","componentAmts","linesPerId","speciesDBDefaultParams","keys","gettingNewSpeciesDB","intersect","resultMap","inputImmutable","calculate","transit","catch","error","calculatingNewResult","calculateButtonMessage","find","buttonsHeight","setButtonsHeight","outerAdderHeight","buttonsRef","createModalOpenCallback","createModalCloseCallback","onHPlusOptionChange","fallback","span","offset","backdrop","scrollable","Title","App","setHeaderHeight","headerRef","setFooterHeight","footerRef","Navbar","expand","bg","Brand","href","src","alt","Collapse","Nav","Link","location","hostname","rootElement","document","getElementById","ReactDOM","unstable_createRoot","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5e29d880.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CenteringDiv=(props) => {\r\n  return (\r\n    <div className={\"flex-\"+(props.start ? props.start+\"-\" : \"\")+\"grow-1 \"+(props.end ? \"flex-\"+props.end+\"-grow-0\" : \"\")}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\nexport default CenteringDiv;","import { useCallback, useRef } from \"react\";\r\n\r\nconst useCallbackRef=(onUpdate , cleanupOld, onNull) => {\r\n  const ref = useRef(null)\r\n  const setRef = useCallback(node => {\r\n    if (ref.current) {\r\n      cleanupOld(ref.current);\r\n    }\r\n    \r\n    if (node) {\r\n      onUpdate(node)\r\n    } else {\r\n      onNull();\r\n    }\r\n    \r\n    ref.current = node\r\n  }, [cleanupOld, onUpdate, onNull])\r\n  \r\n  return setRef\r\n}\r\n\r\nconst mergeRefs = (...refs) => {\r\n  const filteredRefs = refs.filter(Boolean);\r\n  if (!filteredRefs.length) return null;\r\n  if (filteredRefs.length === 0) return filteredRefs[0];\r\n  return inst => {\r\n    for (const ref of filteredRefs) {\r\n      if (typeof ref === 'function') {\r\n        ref(inst);\r\n      } else if (ref) {\r\n        ref.current = inst;\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport {useCallbackRef, mergeRefs};","import { useRef, useCallback } from \"react\";\r\n\r\nimport { useCallbackRef } from \"./ref-utils\";\r\n\r\n\r\nconst useResizeObserver=(callback) =>{\r\n  const resizeObsRef=useRef(new ResizeObserver((entries) => {\r\n    const boundingRect=entries[0].target.getBoundingClientRect();\r\n    callback({width: boundingRect.width, height: boundingRect.height})\r\n  }));\r\n  return useCallbackRef(\r\n    useCallback((node) => {\r\n      resizeObsRef.current.observe(node)\r\n    }, [resizeObsRef]), \r\n    useCallback((node) => {\r\n      resizeObsRef.current.unobserve(node)\r\n    }, [resizeObsRef]),\r\n    useCallback(() => callback({width: 0, height: 0}), [callback])\r\n  );\r\n}\r\n  \r\nexport default useResizeObserver;","import React from 'react';\r\n\r\nconst ResizeObserverWrapper=React.forwardRef((props, ref)=> {\r\n  return (\r\n    <div ref={ref} className=\"prevent-margin-collapse\">\r\n      {[props.children]}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ResizeObserverWrapper;","import { useState, useEffect } from \"react\";\r\n\r\n\r\nconst useWindowSize=() => {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n     const handleResize=()=>{\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    \r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n    \r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize();\r\n    \r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n\r\n  return windowSize;\r\n}\r\n\r\nexport default useWindowSize;","import { useCallback, unstable_useTransition, useRef, useState, useEffect, useMemo } from \"react\";\r\n\r\nfunction wrapPromise(promise) {\r\n  let status = \"pending\";\r\n  let result;\r\n  let suspender = promise.then(\r\n    r => {\r\n      status = \"success\";\r\n      result = r;\r\n    },\r\n    e => {\r\n      status = \"error\";\r\n      result = e;\r\n    }\r\n  );\r\n  return () => {\r\n    if (status === \"pending\") {\r\n      throw suspender;\r\n    } else if (status === \"error\") {\r\n      throw result;\r\n    } else if (status === \"success\") {\r\n      return result;\r\n    }\r\n  };\r\n}\r\n\r\nconst useAsyncResourceWithBoolean=(getter, initialParams) => {\r\n  const [dataCallbackRef, setDataCallbackRef]=useState({current: null});\r\n  const [transitionState, setTransitionState]=useState(!!initialParams);\r\n\r\n  const getNewData=useCallback((params) => {\r\n    setTransitionState(true);\r\n    setDataCallbackRef({current: wrapPromise(getter(params).then((result) => {setTransitionState(false); return result}))});\r\n  }, [setDataCallbackRef, getter]);\r\n\r\n  const getData=useMemo(() => {\r\n    if(dataCallbackRef.current || !initialParams){\r\n      return dataCallbackRef.current;\r\n    } else {\r\n      return () => {\r\n        throw new Promise(() => {});\r\n      }\r\n    }\r\n  }, [dataCallbackRef]);\r\n\r\n  useEffect(() => {\r\n    if(initialParams){\r\n      getNewData(initialParams);\r\n    }\r\n  }, []);\r\n\r\n  return [getData, getNewData, transitionState];\r\n}\r\n\r\nexport {useAsyncResourceWithBoolean};","import CSVParse from \"csv-parse\"\r\n\r\nconst textToTable=(text) => {\r\n  return new Promise(resolve => CSVParse(text, {  relax_column_count: true }, (err, result) => {resolve(result, err)}));\r\n}\r\n\r\nexport default textToTable;","import textToTable from './utils/table-utils.js';\r\nimport { chunk } from 'chunk';\r\nimport * as Immutable from 'immutable';\r\n\r\nconst getData=(item, options, property) => {\r\n  //console.log(item);    \r\n  return item[options[property].row][options[property].column];\r\n}\r\nconst getDataWithStride=(item, options, property, i) => {\r\n  return item[options[property].row][options[property].column+i*options[property].stride];\r\n}\r\n\r\nconst getComponentDB=({url, options, type, callback}) => {\r\n  console.log({url, options, type, callback});\r\n  if(type===\"link\") {\r\n    return fetch(url)\r\n      .then(response => response.text())\r\n      .then(text => textToTable(text))\r\n      .then(result => chunk(result, options.linesPerItem))\r\n      .then(chunks => \r\n        ({\r\n          hPlusValue: options.hPlusValue, \r\n          waterValue: options.waterValue,\r\n          components: Immutable.OrderedMap(chunks.filter(item => Number(getData(item, options, \"id\"))).map(item => [\r\n            Number(getData(item, options, \"id\")),\r\n            {\r\n              name: getData(item, options, \"name\"), \r\n              charge: Number(getData(item, options, \"charge\")),\r\n            }\r\n          ]))\r\n        })\r\n      ).then(db => {\r\n        if(!callback) {\r\n          return db;\r\n        }\r\n        const res=callback(db);\r\n        if(res instanceof Promise){\r\n          return res.then(_ => db);\r\n        } else {\r\n          return db;\r\n        }\r\n      });\r\n  }\r\n};\r\n\r\nconst componentDBDefaultParams=(callback) => ({\r\n  url: process.env.PUBLIC_URL+\"/assets/defaultdb/comp.vdb\", \r\n  type: \"link\",\r\n  options: {\r\n    linesPerItem: 1,\r\n    id: {row: 0, column: 0},\r\n    name: {row: 0, column: 1},\r\n    charge: {row: 0, column: 2},\r\n    hPlusValue: 330,\r\n    waterValue: 2,\r\n  }, \r\n  callback\r\n});\r\n\r\nconst getSpeciesDB=({url, options, type, callback}) => {\r\n  console.log({url, options, type, callback}); \r\n  if(type===\"link\") {\r\n    return Promise.all([url, ...options.labels.urls].map(url => fetch(url))).then(responses =>{\r\n      return Promise.all(responses.map(res => res.text().then(text=> textToTable(text))))\r\n    }).then(tables => {\r\n      const [mainTable, ...labelTables]=tables;\r\n      const labelList=labelTables.map(labelTable => chunk(labelTable, options.linesPerItem)).map(chunkedLabelTable => chunkedLabelTable.map(labelTable => getData(labelTable, options.labels, \"id\")));\r\n\r\n      const labelMap=Immutable.Map().withMutations((labelMap) => {\r\n        for(const [index, labelTable] of labelList.entries()) {\r\n          for(const specie of labelTable){\r\n            labelMap.set(Number(specie), options.labels.labelMap[index]);\r\n          }\r\n        };\r\n      });\r\n      \r\n      \r\n      const chunkedMainTable=chunk(mainTable, options.linesPerItem).filter(chunk => Number(chunk[0][0]));\r\n      const db={\r\n        aqs: {\r\n          species: Immutable.OrderedMap(),\r\n          componentToSpecies: Immutable.Map(),\r\n        },\r\n        solids: {\r\n          species: Immutable.OrderedMap(),\r\n          componentToSpecies: Immutable.Map(),\r\n        },\r\n        gases: {\r\n          species: Immutable.OrderedMap(),\r\n          componentToSpecies: Immutable.Map(),\r\n        },\r\n      }\r\n      db.aqs.species=db.aqs.species.withMutations(aqSpecies => {\r\n        db.solids.species=db.solids.species.withMutations(solidSpecies => {\r\n          db.gases.species=db.gases.species.withMutations(gasSpecies => {\r\n            const db={aqSpecies, solidSpecies, gasSpecies};\r\n            for(const item of chunkedMainTable){\r\n              const id=Number(getData(item, options, \"id\"));\r\n              const property=(labelMap.get(id) ?? \"aq\")+\"Species\";\r\n              db[property].set(id, \r\n                {\r\n                  name: getData(item, options, \"name\"),\r\n                  charge: Number(getData(item, options, \"charge\")),\r\n                  logK: Number(getData(item, options, \"logK\")),\r\n                  label: labelMap.get(Number(getData(item, options, \"id\"))) ?? 0,\r\n                  components: Immutable.Map().withMutations((components) => {\r\n                    for(let i=0; i<getData(item, options, \"numComponents\"); ++i){\r\n                      const component=Number(getDataWithStride(item, options, \"components\", i));\r\n                      const componentAmt=Number(getDataWithStride(item, options, \"componentAmts\", i));\r\n                      components.set(component, componentAmt);\r\n                    }\r\n                  }),\r\n                }\r\n              )\r\n            }\r\n          });\r\n        });\r\n      });   \r\n      db.aqs.componentToSpecies=db.aqs.componentToSpecies.withMutations(aqComponentToSpecies => {\r\n        for(const [speciesId, {components}] of db.aqs.species) {\r\n          for(const [componentId] of components) {\r\n            aqComponentToSpecies.update(componentId, (oldSet=Immutable.Set()) => oldSet.add(speciesId));\r\n          }\r\n        }\r\n      });\r\n      db.solids.componentToSpecies=db.solids.componentToSpecies.withMutations(solidComponentToSpecies => {\r\n        for(const [speciesId, {components}] of db.solids.species) {\r\n          for(const [componentId] of components) {\r\n            solidComponentToSpecies.update(componentId, (oldSet=Immutable.Set()) => oldSet.add(speciesId));\r\n          }\r\n        }\r\n      });\r\n      db.gases.componentToSpecies=db.gases.componentToSpecies.withMutations(gasComponentToSpecies => {\r\n        for(const [speciesId, {components}] of db.gases.species) {\r\n          for(const [componentId] of components) {\r\n            gasComponentToSpecies.update(componentId, (oldSet=Immutable.Set()) => oldSet.add(speciesId));\r\n          }\r\n        }\r\n      });\r\n      \r\n      return db;\r\n    }).then(db => {\r\n      if(!callback) {\r\n        return db;\r\n      }\r\n      const res=callback(db);\r\n      if(res instanceof Promise){\r\n        return res.then(_ => db);\r\n      } else {\r\n        return db;\r\n      }\r\n    });\r\n    \r\n  }\r\n}\r\n\r\nconst speciesDBDefaultParams=(callback) => ({\r\n  url: process.env.PUBLIC_URL+\"/assets/defaultdb/thermo.vdb\", \r\n  type: \"link\",\r\n  options: {\r\n    linesPerItem: 3,\r\n    id: {row: 0, column: 0},\r\n    name: {row: 0, column: 1},\r\n    charge: {row: 0, column: 6},\r\n    logK: {row: 0, column: 3},\r\n    numComponents: {row: 0, column: 10},\r\n    components: {row: 1, column: 1, stride: 2},\r\n    componentAmts: {row: 1, column: 0, stride: 2},\r\n    labels: {\r\n      urls: [process.env.PUBLIC_URL+\"/assets/defaultdb/type6.vdb\", process.env.PUBLIC_URL+\"/assets/defaultdb/gases.vdb\"],\r\n      linesPerId: 3,\r\n      id: {row: 0, column: 0},\r\n      labelMap: [\"solid\", \"gas\"]\r\n    }\r\n  }, \r\n  callback, \r\n});\r\n\r\nexport {getComponentDB, componentDBDefaultParams, getSpeciesDB, speciesDBDefaultParams}","const stringMatchAllReplace=(str, regex, replaceFunc) => {\r\n  const matches=str.matchAll(regex);\r\n  let nextSubstrStart=0;\r\n  let strSoFar=\"\"\r\n  for(const match of matches){\r\n    strSoFar+=str.substring(nextSubstrStart, match.index);\r\n    strSoFar+=replaceFunc(match);\r\n    nextSubstrStart=match.index+match.length;\r\n  }\r\n  strSoFar+=str.substring(nextSubstrStart);\r\n  return strSoFar;\r\n};\r\n\r\nconst numberToExpNoTrailing=(number, maxLength, minExp=2 ) => {\r\n  const pow10=Math.floor(Math.abs(Math.log10(number)));\r\n  if(pow10<minExp){\r\n    return number.toPrecision(maxLength).replace(/(\\.\\d*?)0+$/,'$1').replace(/\\.$/, '');\r\n  } else {\r\n    return number.toExponential(maxLength-1).replace(/(\\.\\d*?)0+e/,'$1e').replace(/\\.e/, 'e').replace(/e\\+/, \"e\");\r\n  }\r\n}\r\nconst numberToExpWithTrailing=(number, maxLength, minExp=2 ) => {\r\n  const pow10=Math.floor(Math.abs(Math.log10(number)));\r\n  if(pow10<minExp){\r\n    return number.toPrecision(maxLength)\r\n  } else {\r\n    return number.toExponential(maxLength-1).replace(/e\\+/, \"e\");\r\n  }\r\n}\r\n\r\nexport { stringMatchAllReplace, numberToExpWithTrailing, numberToExpNoTrailing };","import React from \"react\";\r\n\r\nconst createFormatOptionLabel = (ReactComponent) => ({label}) => <ReactComponent>{label}</ReactComponent>;\r\n\r\nexport {createFormatOptionLabel}","import React, { useState, useRef, useEffect } from 'react';\r\nimport { mergeRefs } from './ref-utils';\r\n\r\nconst ConstantValidationTextInput=React.memo((props) => {\r\n  const child=React.Children.only(props.children);\r\n  const [value, setValue]=useState(\"\");\r\n  const [selection, setSelection]=useState([0,0]);\r\n  const [validationMisfired, setValidationMisfire]=useState(false);\r\n  const selectRef=useRef(null);\r\n  const onBlur=(e) => {\r\n    props.onBlur(e, setValue);\r\n  }\r\n\r\n  const onChange=(e) => {\r\n    if(props.validation(e.target.value)){\r\n      props.onChange(e);\r\n      setValue(e.target.value);\r\n      setSelection([e.target.selectionStart, e.target.selectionEnd]);\r\n    } else {\r\n      setValidationMisfire(true);\r\n    }\r\n  }\r\n  const onSelect=(e) => {\r\n    if(!validationMisfired){\r\n      setSelection([e.target.selectionStart, e.target.selectionEnd]);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if(validationMisfired) {\r\n      selectRef.current.selectionStart=selection[0];\r\n      selectRef.current.selectionEnd=selection[1];\r\n      setValidationMisfire(false);\r\n    }\r\n  }, [validationMisfired, selection]);\r\n  return(\r\n    <>\r\n      {React.cloneElement(child, { value: value, onSelect: onSelect, onChange: onChange, onBlur: onBlur, ref: mergeRefs(child.ref, selectRef)})}\r\n    </>\r\n  )\r\n});\r\nConstantValidationTextInput.defaultProps={\r\n  onChange: () => {},\r\n  onBlur: () => {},\r\n};\r\n\r\nexport default ConstantValidationTextInput;","import React from \"react\";\r\n\r\nconst FormattedChemicalCompound=React.memo((props) => {\r\n  /*\r\n  WordMatcher=(.*?[^0-9\\[\\(])\r\n  SubMatcher=([0-9])\r\n  EndMatcher=([$\\s])\r\n  SupMatcher=([+-])(?:(?:1|([2-9]))|{EndMatcher})\r\n  WholeExp={WordMatcher}(?:{EndMatcher}|{SubMatcher}{SupMatcher}?|{SupMatcher})\r\n  (WordMatcher[0])_(SubMatcher[0])^(SupMatcher[1]SupMatcher[0])EndMatcher[0]\r\n  That would only work with ruby where the capture groups are changed on every recursion\r\n  */\r\n  //https://regex101.com/r/POrbvL/4\r\n  const regex=/(?<WordMatcher>.*?[^0-9[(\\s])(?:(?<EndMatcher1>$|[:.\\s])|(?<Charge1>(?<ChargeSign1>[+-])(?:(?:1|(?<ChargeValue1>[2-9]))|(?<EndMatcher2>$|[:.\\s])))|(?<SubMatcher>[0-9]+)(?<Charge2>(?<ChargeSign2>[+-])(?:(?:1|(?<ChargeValue2>[2-9]))|(?<EndMatcher3>$|[:.\\s])))?)(?<EndMatcher4>$|[:.\\s])?/g;\r\n  //$<WordMatcher>_($<SubMatcher>)^($<ChargeValue1>$<ChargeValue2>$<ChargeSign1>$<ChargeSign2>)$<EndMatcher1>$<EndMatcher2>$<EndMatcher3>\r\n  return(\r\n    <div {...props}>\r\n        {Array.from(props.children.matchAll(regex)).map((match) => {\r\n          const chargeValue=[match.groups.ChargeValue1, match.groups.ChargeValue2].reduce((prev, curr) => curr ? curr : prev, \"\");\r\n          const chargeSign=[match.groups.ChargeSign1, match.groups.ChargeSign2].reduce((prev, curr) => curr ? curr : prev, \"\");\r\n          const terminator=[match.groups.EndMatcher1, match.groups.EndMatcher2, match.groups.EndMatcher3, match.groups.EndMatcher4].reduce((prev, curr) => curr ? curr : prev, \"\");\r\n          return (\r\n            <span key={props.children.substring(0, match.index)}>\r\n              {match.groups.WordMatcher}<sub>{match.groups.SubMatcher}</sub><sup>{chargeValue}{chargeSign}</sup>{terminator}\r\n            </span>\r\n          );\r\n        })\r\n        }\r\n    </div>\r\n  );\r\n});\r\nexport default FormattedChemicalCompound;","import React from \"react\";\r\n\r\nconst FormattedSupSub=React.memo((props) => {\r\n  return(\r\n    <>\r\n      {Array.from(props.children.matchAll(/([^_^]+)(?:\\^(.)|_(.))?/g)).map((value) => <React.Fragment key={props.children.substring(0, value.index)}>{value[1]}<sup>{value[2]}</sup><sub>{value[3]}</sub></React.Fragment>)}\r\n    </>\r\n  );\r\n});\r\nexport default FormattedSupSub;","\r\nimport React, { useState, useMemo, useCallback } from 'react';\r\n\r\nimport memoize from 'fast-memoize';\r\n\r\nimport List from \"react-virtualized/dist/commonjs/List\";\r\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\r\n\r\nimport VirtualizedSelect from \"react-select-virtualized\";\r\nimport Select from 'react-select';\r\n\r\n\r\nimport * as Immutable from 'immutable';\r\n\r\nimport { stringMatchAllReplace } from './utils/string-utils';\r\nimport { createFormatOptionLabel } from './utils/react-select-utils';\r\n\r\nimport ConstantValidationTextInput from './utils/ConstantValidationTextInput';\r\n\r\nimport FormattedChemicalCompound from './Components/FormattedChemicalCompound';\r\nimport FormattedSupSub from './Components/FormattedSupSub';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\nimport is_number from 'is-number';\r\n\r\n\r\nconst chargeSignRegex=/(?<Charge>(?<ChargeSign>[+-])(?:(?:1|(?<ChargeValue>[2-9]))|(?<EndMatcher>$|[:\\s])))/g;\r\nconst chargeSignSwitcher=(match) => match.groups.ChargeValue+match.groups.ChargeSign;\r\nconst memoizedStringMatchAllReplace=memoize(stringMatchAllReplace);\r\nconst useComponentSearchFilter=(componentsDB) => {\r\n  return useCallback((componentId, inputValue) => {\r\n    const componentName=componentsDB().components.get(componentId).name;\r\n    return componentName.toLowerCase().includes(inputValue.toLowerCase()) || memoizedStringMatchAllReplace(componentName, chargeSignRegex, chargeSignSwitcher).toLowerCase().includes(inputValue.toLowerCase());\r\n  },[componentsDB]);\r\n};\r\n\r\nconst ComponentSelect=React.memo((props) => {\r\n  const {componentsPresent, componentsDB, addComponents}=props;\r\n  const availableComponents=Array.from(componentsDB().components\r\n    .filter((componentData, componentId) => !componentsPresent.includes(componentId)))\r\n    .map(([componentId, componentData]) => ({value: componentId, label: componentData.name}));\r\n  const searchFilter=useComponentSearchFilter(componentsDB);\r\n\r\n  return(\r\n    <VirtualizedSelect options={Array.from(availableComponents)} filterOption={(option, searchValue) => searchFilter(option.value, searchValue)} formatOptionLabel={createFormatOptionLabel(FormattedChemicalCompound)} onChange={useCallback((e) => {if(e) {addComponents([e.value])}}, [addComponents])} value=\"\"/>\r\n  )\r\n});\r\n\r\nconst ComponentSelectModal=React.memo((props) => {\r\n  const {componentsPresent, componentsDB, addComponents, windowHeight}=props;\r\n  const [modalIsOpen, setModalIsOpen]=useState(false);\r\n  const [componentsStaged, setComponentsStaged]=useState(Immutable.Set([]));\r\n  const [searchValue, setSearchValue]=useState(\"\");\r\n  const searchFilter=useComponentSearchFilter(componentsDB);\r\n  const componentsFiltered=useMemo(() => Array.from(componentsDB().components.filter((componentData, component) =>  {\r\n      return !componentsPresent.includes(component) && searchFilter(component, searchValue);\r\n  })), [componentsPresent, componentsDB, searchValue, searchFilter]);\r\n  const reset=() => {\r\n    setSearchValue(\"\");\r\n    setComponentsStaged(Immutable.Set([]));\r\n  }\r\n  return(\r\n    <>\r\n      <div className=\"hover-switch\" style={{\"width\" : \"15%\"}} onClick={() => setModalIsOpen(true)}>\r\n        <svg width=\"100%\" viewBox=\"0 0 16 16\" className=\"bi bi-plus-circle\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path fillRule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"></path>\r\n          <path fillRule=\"evenodd\" d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"></path>\r\n        </svg>\r\n        <svg width=\"100%\" viewBox=\"0 0 16 16\" className=\"bi bi-plus-circle-fill\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path fillRule=\"evenodd\" d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z\"/>\r\n        </svg>\r\n      </div>\r\n      <Modal show={modalIsOpen} onHide={() =>{reset(); setModalIsOpen(false)}}>\r\n        <Modal.Header closeButton>\r\n          Add Components\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <InputGroup>\r\n            <InputGroup.Prepend>\r\n              <InputGroup.Text>\r\n                <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-search\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                  <path fillRule=\"evenodd\" d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\"/>\r\n                  <path fillRule=\"evenodd\" d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\"/>\r\n                 </svg>\r\n                </InputGroup.Text>\r\n            </InputGroup.Prepend>\r\n            <Form.Control placeholder=\"Search\" value={searchValue} onChange={(e) => {setSearchValue(e.target.value)}} className=\"sticky-top\"/>\r\n            {searchValue && <svg onClick={() => {setSearchValue(\"\")}} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-x-circle-fill search-clearer\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path fillRule=\"evenodd\" d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\"/>\r\n            </svg>}\r\n          </InputGroup>\r\n          <AutoSizer disableHeight>\r\n            {({width}) => <List \r\n              width={width}\r\n              height={windowHeight-120-80-16}\r\n              rowHeight={43}\r\n              overscanRowCount={10}\r\n              rowRenderer={({index, key, style}) => {\r\n                const component=componentsFiltered[index];\r\n                const isStaged=componentsStaged.includes(component[0]);\r\n                return (\r\n                  <div key={component[0]} style={style} className=\"p-2 d-flex align-items-center\">\r\n                    <span className=\"d-inline-block mr-auto\"><FormattedChemicalCompound>{component[1].name}</FormattedChemicalCompound></span>\r\n                    <Button onClick={() => {\r\n                        if(isStaged){\r\n                          setComponentsStaged(componentsStaged.delete(component[0]));\r\n                        } else {\r\n                          setComponentsStaged(componentsStaged.add(component[0]));\r\n                        }\r\n                      }}\r\n                      variant={isStaged ? \"secondary\" : \"primary\"} size=\"sm\">{isStaged ? \"Cancel\" : \"Add\"}\r\n                    </Button>\r\n                   \r\n                  </div>\r\n                )\r\n              }}\r\n              rowCount={componentsFiltered.length}\r\n            />}\r\n          </AutoSizer>\r\n          \r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"primary\" onClick={() => {reset(); addComponents(Array.from(componentsStaged)); setModalIsOpen(false);}}>\r\n            {componentsStaged.size ? \"Apply\" : \"Cancel\"}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n\r\n\r\nconst centerSelectStyles = {\r\n  singleValue: styles => ({ ...styles, width: '100%', textAlign : \"center\" }),\r\n  option: styles => ({ ...styles, width: '100%', textAlign : \"center\" }),\r\n};\r\n\r\nconst ComponentListHeader=React.memo((props) => {\r\n  const {hPlusOptionsRef, defaultVal, onChange}=props;\r\n  return (\r\n    <Row className=\"mt-4 mb-3\">\r\n      <Col xs=\"3\" sm=\"5\" className=\"center-items\">\r\n        <label className=\"w-100 d-none d-sm-block text-muted text-center\">\r\n          Components\r\n        </label>\r\n        <label className=\"w-100 d-block d-sm-none text-muted text-center\">\r\n          Comp.\r\n        </label>\r\n      </Col>\r\n      <Col xs=\"7\" sm=\"5\">\r\n        <Select isSearchable={false} options={hPlusOptionsRef.current} formatOptionLabel={createFormatOptionLabel(FormattedSupSub)} styles={centerSelectStyles} onChange={onChange} value={defaultVal}/>\r\n      </Col>\r\n      <Col xs=\"2\" className=\"center-items\">\r\n        <OverlayTrigger\r\n          placement=\"bottom\"\r\n          overlay={\r\n            <Tooltip>\r\n              Equilibrium Concentration\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"0.875rem\" version=\"1.1\" id=\"Layer_1\" viewBox=\"0 0 139 119.177\" overflow=\"visible\" enableBackground=\"new 0 0 139 119.177\">\r\n            <line fill=\"none\" stroke=\"#000000\" strokeWidth=\"7\" x1=\"139\" y1=\"63.308\" x2=\"0\" y2=\"63.308\"></line>\r\n            <line fill=\"none\" stroke=\"#000000\" strokeWidth=\"6\" x1=\"30.646\" y1=\"92.308\" x2=\"2.189\" y2=\"65.308\"></line>\r\n            <line fill=\"none\" stroke=\"#000000\" strokeWidth=\"7\" x1=\"3\" y1=\"30.308\" x2=\"133\" y2=\"30.308\"></line>\r\n            <line fill=\"none\" stroke=\"#000000\" strokeWidth=\"6\" x1=\"99.296\" y1=\"2.308\" x2=\"130.953\" y2=\"28.608\"></line>\r\n            <path fill=\"none\" stroke=\"#FFFFFF\" strokeWidth=\"2\" d=\"M53,118.177c2.333,0,4.667,0,7,0\"></path>\r\n          </svg>\r\n        </OverlayTrigger>\r\n      </Col>\r\n    </Row>\r\n  )\r\n});\r\n\r\n\r\nconst ComponentRow=React.memo((props) => {\r\n  const {component, updateConc, toggleChecked, noClose, disableCheck, removeComponents, controlChecked, componentsDB}=props;\r\n  \r\n  const [checked, setChecked]=useState(false);\r\n\r\n  const onInputChange=(e) => {\r\n    if(is_number(e.target.value)){\r\n      updateConc(component, Number(e.target.value));\r\n    } else {\r\n      updateConc(component, null);\r\n    }\r\n  }\r\n\r\n  const onCheckToggle=(e) => {\r\n    setChecked(!checked);\r\n    toggleChecked(component);\r\n  }\r\n\r\n  return(\r\n    <Row className=\"mb-3 p-0\">\r\n      <Col xs=\"3\" sm=\"5\" className=\"w-100 justify-content-end d-flex flex-wrap\">\r\n        {!noClose && <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" className=\"bi bi-x lighten-hover mr-auto\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" onClick={() => removeComponents([component])}>\r\n          <path fillRule=\"evenodd\" d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\r\n        </svg>}\r\n        <FormattedChemicalCompound>{componentsDB().components.get(component).name}</FormattedChemicalCompound>\r\n      </Col>\r\n      <Col xs=\"7\" sm=\"5\" className=\"d-flex align-items-center\">\r\n        <ConstantValidationTextInput validation={(input) => input.match(/^-?\\d*\\.?\\d*e?-?\\d*$/)} onChange={onInputChange}>\r\n          <Form.Control className=\"text-center\"/>\r\n        </ConstantValidationTextInput>\r\n      </Col>\r\n      <Col xs=\"2\" className=\"d-flex center-items\">\r\n        <Form.Check style={{\"paddingLeft\": \"1.7rem\"}} type=\"checkbox\" checked={controlChecked ?? checked} disabled={disableCheck} onChange={onCheckToggle}/>\r\n      </Col>\r\n    </Row>\r\n  );\r\n});\r\n\r\n\r\nconst HPlusComponent=React.memo((props) => {\r\n  const {componentsDB, updateConc, componentsInputState, pH}=props;\r\n  return(\r\n    <ComponentRow  component={componentsDB().hPlusValue} componentsDB={componentsDB} updateConc={pH ? useCallback((component, amt) => updateConc(component, Math.pow(10, -amt)), [updateConc]) : updateConc} disableCheck={true} controlChecked={componentsInputState.get(componentsDB().hPlusValue)?.get(\"equilChecked\")} noClose/>\r\n  );\r\n});\r\n\r\nconst ComponentsList=React.memo((props) => {\r\n  const {componentsDB, componentsPresent}=props;\r\n  return (\r\n    <>\r\n      {componentsPresent.delete(componentsDB().hPlusValue).delete(componentsDB().waterValue).map(id => {\r\n        return <ComponentRow {...props} key={id} component={id} componentsDB={componentsDB}/>\r\n      })}\r\n    </>\r\n  )\r\n});\r\n\r\nexport { ComponentSelect, ComponentSelectModal, ComponentsList, ComponentListHeader, HPlusComponent };","import React, { useCallback } from 'react';\r\n\r\nimport CenteringDiv from './utils/CenteringDiv';\r\nimport FormattedChemicalCompound from './Components/FormattedChemicalCompound';\r\n\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport update from \"immutability-helper\"\r\n\r\n\r\nconst SpeciesListItem=React.memo((props) => {\r\n  const {id, type, setSpecieEnabled, name, enabled}=props;\r\n  const extraCheckProps = setSpecieEnabled ? {onChange: (e) => setSpecieEnabled(e, id, type), disabled: false} : {disabled : true, readOnly: true};\r\n  return (\r\n    <ListGroup.Item className=\"d-flex\" style={enabled ? {} : {\"color\": \"#6c757d\", \"backgroundColor\": \"#fff\"}}>\r\n      <CenteringDiv start=\"lg\">\r\n        <Form.Check style={{\"pointerEvents\" : \"auto\"}} checked={enabled} {...extraCheckProps} />\r\n      </CenteringDiv>\r\n      <span className=\"m-auto d-lg-none\"/>\r\n      <FormattedChemicalCompound className=\"mx-2 mx-lg-0 text-right\">{name}</FormattedChemicalCompound>\r\n      <CenteringDiv start=\"lg\"/>\r\n    </ListGroup.Item>\r\n  )\r\n});\r\n\r\nconst SpeciesListGroup=React.memo((props) => {\r\n  const {componentsPresent, speciesEnabled, setSpeciesEnabled, speciesCouldBePresent, speciesDB, componentsDB}=props;\r\n\r\n  const setSpecieEnabled=useCallback((e, id, type) =>{\r\n    if(e.target.checked){\r\n      setSpeciesEnabled(update(speciesEnabled, {[type]: {$set: speciesEnabled[type].add(id)}}));\r\n    } else {\r\n      setSpeciesEnabled(update(speciesEnabled, {[type]: {$set: speciesEnabled[type].delete(id)}}));    }\r\n  }, [setSpeciesEnabled, speciesEnabled]);\r\n  \r\n  return(\r\n    <ListGroup>\r\n      {componentsPresent.delete(componentsDB().waterValue).map((id) => <SpeciesListItem key={id} id={id} enabled={true} name={componentsDB().components.get(id).name}/>)}\r\n      {speciesCouldBePresent().aqs.map((id) => <SpeciesListItem key={id} id={id} type=\"aqs\" enabled={speciesEnabled.aqs.includes(id)} setSpecieEnabled={setSpecieEnabled} name={speciesDB().aqs.species.get(id).name}/>)}\r\n      {speciesCouldBePresent().solids.map((id) => <SpeciesListItem key={id} id={id} type=\"solids\"  enabled={speciesEnabled.solids.includes(id)} setSpecieEnabled={setSpecieEnabled} name={speciesDB().solids.species.get(id).name}/>)}\r\n      {speciesCouldBePresent().gases.map((id) => <SpeciesListItem key={id} id={id} type=\"gases\" enabled={speciesEnabled.gases.includes(id)} setSpecieEnabled={setSpecieEnabled} name={speciesDB().gases.species.get(id).name}/>)}\r\n    </ListGroup>\r\n  )\r\n});\r\n\r\nconst ViewTableauText=React.memo((props) => {\r\n  const {openTableauModal, disabled} = props;\r\n  return(\r\n    <span onClick={openTableauModal} style={{\"fontSize\" : \"0.875rem\"}} className={disabled ? \"text-muted\" : \"border-hover-underline\"}>View Tableau\r\n      <svg style={{\"marginBottom\" : \"0.1rem\"}} className=\"bi bi-chevron-double-right\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path fillRule=\"evenodd\" d=\"M3.646 1.646a.5.5 0 01.708 0l6 6a.5.5 0 010 .708l-6 6a.5.5 0 01-.708-.708L9.293 8 3.646 2.354a.5.5 0 010-.708z\" clipRule=\"evenodd\"></path>\r\n        <path fillRule=\"evenodd\" d=\"M7.646 1.646a.5.5 0 01.708 0l6 6a.5.5 0 010 .708l-6 6a.5.5 0 01-.708-.708L13.293 8 7.646 2.354a.5.5 0 010-.708z\" clipRule=\"evenodd\"></path>\r\n      </svg>\r\n    </span>\r\n  );\r\n});\r\n\r\nconst SpeciesList=React.memo((props) => {\r\n  const {openTableauModal, ...restProps}=props;\r\n  return(\r\n    <>\r\n      <Row>\r\n        <Col className=\"center-items\">\r\n          <ViewTableauText openTableauModal={openTableauModal}/>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <SpeciesListGroup {...restProps}/>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n});\r\n\r\nexport { SpeciesList }","import React, { useState, useRef, useEffect, useMemo, useCallback } from 'react';\r\n\r\nimport ConstantValidationTextInput from \"./utils/ConstantValidationTextInput\";\r\nimport FormattedChemicalCompound from \"./Components/FormattedChemicalCompound\";\r\nimport useResizeObserver from './utils/useResizeObserver';\r\n\r\n\r\nimport * as Immutable from \"immutable\";\r\nimport update from \"immutability-helper\";\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport { useTable } from 'react-table';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport is_number from 'is-number';\r\n\r\nconst LogKEditor=(props) => {\r\n  const { logKChanges, setLogKChanges, specie, defaultVal } = props;\r\n  const [newLogKVal, setNewLogVal] = useState(logKChanges.get(specie));\r\n  const [editing, setEditing] = useState(false);\r\n  const [editBoxVal, setEditBoxVal] = useState(\"\");\r\n  const editBoxRef=useRef(null);\r\n  const showDefault = newLogKVal===undefined;\r\n  useEffect(() => {\r\n    if(showDefault){\r\n      setLogKChanges(logKChanges.delete(specie));\r\n    } else {\r\n      setLogKChanges(logKChanges.set(specie, newLogKVal));\r\n    }\r\n  }, [logKChanges, setLogKChanges, newLogKVal, showDefault, specie]);\r\n  useEffect(() => {\r\n    if(editing){\r\n      editBoxRef.current.focus();\r\n    }\r\n  }, [editing, editBoxRef]);\r\n\r\n  const beginEditVal=(e) => {\r\n    setEditing(true);\r\n  }\r\n  const submitEditVal=(e) => {\r\n    e.preventDefault();\r\n    setEditing(false);\r\n    setEditBoxVal(\"\");\r\n    setNewLogVal(is_number(editBoxVal) ? Number(editBoxVal) : undefined);\r\n  }\r\n  const cancelEditVal=(e) => {\r\n    if(e.keyCode === 27) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      setEditing(false);\r\n      setEditBoxVal(\"\");\r\n    }\r\n  }\r\n  const onChangeEditBox=(e) => {\r\n    setEditBoxVal(e.target.value);\r\n  }\r\n  const resetVal=(e) => {\r\n    setNewLogVal(undefined);\r\n  }\r\n  if(editing){\r\n    return (\r\n      <Form onSubmit={submitEditVal}>\r\n        <ConstantValidationTextInput validation={(input) => input.match(/^-?\\d*\\.?\\d*$/)} onChange={onChangeEditBox} onBlur={submitEditVal}>\r\n          <Form.Control ref={editBoxRef} style={{\"width\": \"80px\"}} onKeyDown={cancelEditVal}/>\r\n        </ConstantValidationTextInput>\r\n      </Form>\r\n    )\r\n  } else if(showDefault) {\r\n    return (\r\n      <span className=\"text-nowrap\">\r\n        {defaultVal.toFixed(3).replace(/\\.000$|0{0,2}$/, \"\")}\r\n        <svg onClick={beginEditVal} className=\"logK-editor\" style={{\"marginTop\": \"-0.2rem\"}} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path fillRule=\"evenodd\" d=\"M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z\"></path>\r\n          <path fillRule=\"evenodd\" d=\"M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z\"></path>\r\n        </svg>\r\n      </span>\r\n    )\r\n  } else {\r\n    return (\r\n      <span className=\"text-nowrap\">\r\n        {newLogKVal.toFixed(3).replace(/\\.000$|0{0,2}$/, \"\")}\r\n        <svg onClick={resetVal} className=\"logK-reset\" style={{\"marginTop\" : \"-0.12rem\"}} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path fillRule=\"evenodd\" d=\"M12.83 6.706a5 5 0 0 0-7.103-3.16.5.5 0 1 1-.454-.892A6 6 0 1 1 2.545 5.5a.5.5 0 1 1 .91.417 5 5 0 1 0 9.375.789z\"></path>\r\n          <path fillRule=\"evenodd\" d=\"M7.854.146a.5.5 0 0 0-.708 0l-2.5 2.5a.5.5 0 0 0 0 .708l2.5 2.5a.5.5 0 1 0 .708-.708L5.707 3 7.854.854a.5.5 0 0 0 0-.708z\"></path>\r\n        </svg>\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nconst TableauTable=React.memo((props) => {\r\n  const {componentsPresent, componentsInputState, speciesHere, speciesDB, componentsDB, logKChanges, setLogKChanges, windowWidth}=props;\r\n\r\n  const setTypedLogKChanges=useCallback((type, newMap) => {\r\n    setLogKChanges(update(logKChanges, {[type]: {$set: newMap}}));\r\n  }, [setLogKChanges, logKChanges]);\r\n\r\n  const [topLeftWidth, setTopLeftWidth]=useState(0);\r\n  const [topLeftHeight, setTopLeftHeight]=useState(0);\r\n  const [logKWidth, setLogKWidth]=useState(0);\r\n  const lg=windowWidth>=992;\r\n  const headerColumn=useMemo(() => ({\r\n    Header: \"\",\r\n    Footer: () => (<><span className=\"d-none d-xl-block\">Total Concentration</span><span className=\"d-block d-xl-none\">Total Conc.</span></>),\r\n    id: \"name\",\r\n    accessor: ([specie, {name}]) => (<FormattedChemicalCompound>{name}</FormattedChemicalCompound>),\r\n  }), []);\r\n  const dataColumns=useMemo(() => Immutable.List(componentsPresent.delete(componentsDB().waterValue)).map(component => {\r\n    return {\r\n      Header: () => (<FormattedChemicalCompound>{componentsDB().components.get(component).name}</FormattedChemicalCompound>),\r\n      Footer: componentsInputState.getIn([component, \"equilChecked\"]) ? \"TBC\" : componentsInputState.getIn([component, \"conc\"]), \r\n      id: component,\r\n      accessor: ([specie, {components}]) => { return components.get(component) ?? 0},\r\n    }\r\n  }), [componentsPresent, componentsInputState, componentsDB]);\r\n  const logKColumn=useMemo(() => ({\r\n    Header: \"logK\",\r\n    Footer: \"\",\r\n    id: \"logK\",\r\n    accessor: ([specie, {logK, type, logKChanges}]) => {return <LogKEditor specie={specie} defaultVal={logK} logKChanges={logKChanges} setLogKChanges={setTypedLogKChanges.bind(null, type)}/>},\r\n  }), [setTypedLogKChanges]);\r\n  const columns=useMemo(() => {\r\n    if(lg){\r\n      return dataColumns.unshift(headerColumn).push(logKColumn);\r\n    } else {\r\n      return dataColumns.unshift(logKColumn).unshift(headerColumn);\r\n    }\r\n  }, [headerColumn, dataColumns, logKColumn, lg]);\r\n  const data=useMemo(() => \r\n    Immutable.List([\r\n      Immutable.List(speciesHere().aqs).map(specie => ([specie, {...speciesDB().aqs.species.get(specie), logKChanges: logKChanges.aqs, type: \"aqs\"}])),\r\n      Immutable.List(speciesHere().solids).map(specie => ([specie, {...speciesDB().solids.species.get(specie), logKChanges: logKChanges.solids, type: \"solids\"}])),\r\n      Immutable.List(speciesHere().gases).map(specie => ([specie, {...speciesDB().gases.species.get(specie), logKChanges: logKChanges.gases, type: \"gases\"}])),\r\n    ]).flatten(true)\r\n  , [speciesHere, speciesDB, logKChanges]);\r\n\r\n  const tableInstance = useTable({ columns, data });\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    footerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = tableInstance;\r\n\r\n  const topLeftRef=useResizeObserver(useCallback(({width, height}) => {\r\n    setTopLeftWidth(width);\r\n    setTopLeftHeight(height);\r\n  }, [setTopLeftHeight]));\r\n  \r\n  const logKRef=useResizeObserver(useCallback(({width}) => {\r\n    setLogKWidth(width);\r\n  }, [setLogKWidth]));\r\n  \r\n  return(\r\n    <Scrollbars \r\n      autoHide\r\n      style={{width: \"100%\"}}\r\n      autoHeight\r\n      autoHeightMax=\"calc(90vh - 63px - 71px - 2rem)\"\r\n      renderTrackHorizontal={props => {\r\n        const finalStyle = update(props.style,{ $merge: {\r\n          right: 2,\r\n          bottom: 2,\r\n          left: 2,\r\n          borderRadius: 3,\r\n          marginLeft: topLeftWidth,\r\n          marginRight: lg ? logKWidth : 0,\r\n        }});\r\n        return <div {...props} style={finalStyle}/>;\r\n        }\r\n      }\r\n      renderTrackVertical={props => {\r\n        const finalStyle = update(props.style,{ $merge: {\r\n          right: 2,\r\n          bottom: 2,\r\n          top: 2,\r\n          borderRadius: 3,\r\n          marginTop: topLeftHeight,\r\n        }});\r\n        return <div {...props} style={finalStyle}/>;\r\n        }\r\n      }\r\n    >\r\n      <Table striped bordered hover {...getTableProps({\r\n        style: {}\r\n      })}>\r\n        <thead>\r\n          {\r\n            headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {\r\n                  headerGroup.headers.map(column => {\r\n                    if(!column.Header){\r\n                      return <th {...column.getHeaderProps({className: \"sticky sticky-header-y sticky-header-x-lg bg-white\"})} ref={topLeftRef} />\r\n                    } else if(column.id===\"logK\"){\r\n                      return (\r\n                        <th {...column.getHeaderProps({\r\n                          className: \"vertical-align-middle sticky-header-y sticky-column-lg sticky\",\r\n                        })} ref={logKRef}>\r\n                          {\r\n                            column.render('Header')\r\n                          }\r\n                        </th>\r\n                      )\r\n                    } else {\r\n                      return (\r\n                        <th {...column.getHeaderProps({\r\n                          className: \"vertical-align-middle sticky-header-y sticky\",\r\n                        })}>\r\n                          {\r\n                            column.render('Header')\r\n                          }\r\n                        </th>\r\n                      )\r\n                    }\r\n                  })\r\n                }\r\n              </tr>\r\n            ))\r\n          }\r\n        </thead>\r\n        \r\n        <tbody {...getTableBodyProps()}>\r\n          {\r\n          rows.map(row => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {\r\n                  row.cells.map(cell => {\r\n                    if(cell.column.id===\"name\"){\r\n                      return (\r\n                        <th {...cell.getCellProps({\r\n                          className: \"vertical-align-middle sticky-header-lg sticky\",\r\n                        })}>\r\n                          {\r\n                            cell.render('Cell')\r\n                          }\r\n                        </th>\r\n                      )\r\n                    } else if(cell.column.id===\"logK\"){\r\n                      return (\r\n                        <td {...cell.getCellProps({\r\n                          className: \"vertical-align-middle sticky-column-lg sticky\",\r\n                        })}>\r\n                          {\r\n                            cell.render('Cell')\r\n                          }\r\n                        </td>\r\n                      )\r\n                    } else {\r\n                      return (\r\n                        <td {...cell.getCellProps({\r\n                          className: \"vertical-align-middle\",\r\n                        })}>\r\n                          {\r\n                            cell.render('Cell')\r\n                          }\r\n                        </td>\r\n                      )\r\n                    }\r\n                  })\r\n                }\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n        <tfoot>\r\n          {footerGroups.map(group => (\r\n            <tr {...group.getFooterGroupProps()}>\r\n              {\r\n                group.headers.map(column => {\r\n                  if(column.id===\"name\"){\r\n                    return (\r\n                      <th {...column.getFooterProps({\r\n                        className: \"vertical-align-middle sticky-x-header-lg sticky\",\r\n                      })}>\r\n                        {\r\n                          column.render('Footer')\r\n                        }\r\n                      </th>\r\n                    );\r\n                  } else if(column.id===\"logK\"){\r\n                    return (\r\n                      <th {...column.getFooterProps({\r\n                        className: \"vertical-align-middle crossed-out sticky-column-lg sticky\",\r\n                      })}>\r\n                        {\r\n                          column.render('Footer')\r\n                        }\r\n                      </th>\r\n                    )\r\n                  } else {\r\n                    return (\r\n                      <td {...column.getFooterProps({\r\n                        className: \"vertical-align-middle sticky\",\r\n                      })}>\r\n                        {\r\n                          column.render('Footer')\r\n                        }\r\n                      </td>\r\n                    );\r\n                  }\r\n                  \r\n                })\r\n              }\r\n            </tr>\r\n          ))}\r\n        </tfoot>\r\n      </Table>\r\n    </Scrollbars>\r\n  )\r\n});\r\n\r\nexport {TableauTable};","import { useState, useEffect, useRef } from \"react\";\r\nimport * as Comlink from \"comlink\";;\r\n\r\nconst useComlinkWorker=(WorkerClass, parameters) => {\r\n  const [comlinkWrapper, setComlinkWrapper]=useState({current: null});\r\n  useEffect(() => {\r\n    const worker=new WorkerClass(parameters);\r\n    setComlinkWrapper({current: Comlink.wrap(worker)});\r\n    return () => {worker.terminate()}\r\n  }, []);\r\n  return comlinkWrapper.current;\r\n}\r\n\r\nexport default useComlinkWorker;","export default function() {\n  return new Worker(__webpack_public_path__ + \"static/js/CalculateResultWorker.17cd4896.worker.js\");\n}\n","import { useState, useCallback } from \"react\"\r\nimport * as Immutable from \"immutable\";\r\n\r\nconst useModalStack=() => {\r\n  const [modalsStack, setModalsStack]=useState(Immutable.Stack());\r\n  const currentModal=modalsStack.peek();\r\n  const closeModal=useCallback((modalName) => {\r\n    if(Array.isArray(modalName)){\r\n      setModalsStack(modalsStack.withMutations(stack => {\r\n        for(const name of modalName){\r\n          if(stack.peek()===name) {\r\n            stack.pop();\r\n          }\r\n        }\r\n      }));\r\n    } else if(currentModal===modalName) {\r\n      setModalsStack(modalsStack.pop());\r\n    }\r\n  }, [setModalsStack, currentModal, modalsStack]);\r\n  const openModal=useCallback((modalName) => {\r\n    setModalsStack(modalsStack.push(modalName));\r\n  }, [setModalsStack, modalsStack]);\r\n  return [currentModal, openModal, closeModal]\r\n}\r\n\r\nexport default useModalStack;","import React, { useMemo } from \"react\";\r\nimport * as Immutable from \"immutable\";\r\nimport { useTable } from \"react-table\";\r\nimport { numberToExpWithTrailing } from \"./utils/string-utils\"\r\n\r\nimport Table from 'react-bootstrap/Table';\r\nimport FormattedChemicalCompound from \"./Components/FormattedChemicalCompound\";\r\nimport { cumulativeSum } from \"./utils/array-utils\";\r\n\r\nconst ConcentrationTable=React.memo((props) => {\r\n  const { currentResult, style, className } = props;\r\n  const columns=useMemo(() => [\r\n    {\r\n      Header: \"Species\",\r\n      id: \"name\",\r\n      accessor: ([id, {name}]) => <FormattedChemicalCompound>{name}</FormattedChemicalCompound>\r\n    },\r\n    {\r\n      Header: \"Conc\",\r\n      id: \"conc\",\r\n      accessor: ([id, {conc}]) => numberToExpWithTrailing(conc, 4)\r\n    },\r\n    {\r\n      Header: () => <>&minus;log(Conc)</>,\r\n      id: \"negLogConc\",\r\n      accessor: ([id, {conc}]) => numberToExpWithTrailing(-Math.log10(conc), 4)\r\n    },\r\n  ], [])\r\n\r\n  const data=useMemo(() => Immutable.List([\r\n    Immutable.List(currentResult().components),\r\n    Immutable.List(currentResult().aqs),\r\n    Immutable.List(currentResult().solidsPresent),\r\n  ]).flatten(true), [currentResult]);\r\n  console.log(data);\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n  });\r\n\r\n  const borderLengths=useMemo(() => Immutable.Set(cumulativeSum([currentResult().components.size, currentResult().aqs.size, currentResult().solidsPresent.size])).filter(item => item!==data.size && item!==0), [currentResult, data.size]);\r\n  return (\r\n    <Table bordered {...getTableProps({style, className})}>\r\n      <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, i) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map(cell => {\r\n                const CellType=cell.column.id===\"name\" ? \"th\" : \"td\";\r\n                return <CellType {...cell.getCellProps(borderLengths.has(i+1) ? {style : {\"borderBottom\": \"3px solid #dee2e6\"}} : {})}>{cell.render('Cell')}</CellType>;\r\n              })}\r\n            </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </Table>\r\n  )\r\n});\r\n\r\nconst TotalConcentrationTable=React.memo((props) => {\r\n\r\n  const {currentResult, style, className} = props;\r\n\r\n  const columns=useMemo(() => [\r\n    {\r\n      Header: \"Component\",\r\n      id: \"name\",\r\n      accessor: ([id, {name}]) => <FormattedChemicalCompound>{name}</FormattedChemicalCompound>\r\n    },\r\n    {\r\n      Header: \"Calculated Total Conc\",\r\n      id: \"totalConc\",\r\n      accessor: ([id, {totalConc}]) => numberToExpWithTrailing(totalConc, 4)\r\n    },\r\n  ], []);\r\n\r\n  const data=useMemo(() => Immutable.List(currentResult().components), [currentResult]);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n  });\r\n\r\n  return (\r\n    <Table bordered {...getTableProps({style, className})}>\r\n      <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, i) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map(cell => {\r\n                const CellType=cell.column.id===\"name\" ? \"th\" : \"td\";\r\n                return <CellType {...cell.getCellProps()}>{cell.render('Cell')}</CellType>;\r\n              })}\r\n            </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </Table>\r\n  )\r\n});\r\n\r\nconst SolublilityProductTable=React.memo((props) => {\r\n  const {currentResult, style, className} = props;\r\n\r\n  if(!currentResult().solidsNotPresent.size){\r\n    return <></>;\r\n  }\r\n  \r\n  const columns=useMemo(() => [\r\n    {\r\n      Header: \"Solid\",\r\n      id: \"name\",\r\n      accessor: ([id, {name}]) => <FormattedChemicalCompound>{name}</FormattedChemicalCompound>\r\n    },\r\n    {\r\n      Header: \"Solubility Product\",\r\n      id: \"solProd\",\r\n      accessor: ([id, {solubilityProduct}]) => numberToExpWithTrailing(solubilityProduct, 4)\r\n    },\r\n  ], []);\r\n\r\n  const data=useMemo(() => Immutable.List(currentResult().solidsNotPresent), [currentResult]);\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n  });\r\n\r\n  return (\r\n    <Table bordered {...getTableProps({style, className})}>\r\n      <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, i) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map(cell => {\r\n                const CellType=cell.column.id===\"name\" ? \"th\" : \"td\";\r\n                return <CellType {...cell.getCellProps()}>{cell.render('Cell')}</CellType>;\r\n              })}\r\n            </tr>\r\n          )\r\n        })}\r\n      </tbody>\r\n    </Table>\r\n  )\r\n});\r\n\r\nconst ResultTables=React.memo((props) => {\r\n  return (\r\n    <>\r\n      <ConcentrationTable currentResult={props.currentResult} className=\"mb-4 lc-mb-0\"/>\r\n      <TotalConcentrationTable currentResult={props.currentResult} className=\"mb-4 lc-mb-0\"/>\r\n      <SolublilityProductTable currentResult={props.currentResult} className=\"mb-4 lc-mb-0\"/>\r\n    </>\r\n  );\r\n});\r\n\r\nconst ResultError=React.memo((props) => {\r\n  const {currentResult} = props;\r\n  return <>{\"Error: \"+currentResult().message}</>;\r\n});\r\n\r\n\r\nconst Results = React.memo((props) => {\r\n  const { currentResult } = props;\r\n  console.log(currentResult())\r\n  if(currentResult() instanceof Error){\r\n    return <ResultError currentResult={currentResult}/>;\r\n  } else {\r\n    return <ResultTables currentResult={currentResult}/>;\r\n  }\r\n});\r\nexport { Results };  ","const cumulativeSum = (array) => {\r\n  return array.reduce((r, a) => {\r\n    r.push(((r.length && r[r.length - 1]) || 0) + a);\r\n    return r;\r\n  }, []);\r\n};\r\n\r\nexport {cumulativeSum};","import React, { useState, useRef, useReducer, useCallback, unstable_useOpaqueIdentifier , Suspense } from 'react';\r\n\r\nimport memoize from 'fast-memoize';\r\n\r\nimport * as Immutable from 'immutable';\r\nimport * as transit from \"transit-immutable-js\";\r\nimport update from \"immutability-helper\"\r\n\r\nimport useResizeObserver from './utils/useResizeObserver.js';\r\nimport useWindowSize from './utils/useWindowSize.js';\r\nimport ResizeObserverWrapper from './utils/ResizeObserverWrapper.js';\r\nimport { useAsyncResourceWithBoolean } from \"./utils/useAsyncResources.js\";\r\n\r\nimport { componentDBDefaultParams, getComponentDB, getSpeciesDB, speciesDBDefaultParams } from './getDBs.js';\r\nimport { ComponentListHeader, HPlusComponent, ComponentsList, ComponentSelectModal, ComponentSelect } from \"./Components.js\";\r\nimport { SpeciesList } from \"./Species.js\";\r\nimport { TableauTable } from \"./Tableau.js\";\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\n\r\nimport useComlinkWorker from './utils/useComlinkWorker.js';\r\n//eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport ConcentrationCalculator from 'worker-loader!./CalculateResultWorker.js'\r\nimport useModalStack from './utils/useModalStack.js';\r\nimport { Results } from './Result.js';\r\n\r\nconst ScrollContainer=React.memo((props) => {\r\n  return (\r\n    <div style={{\"maxHeight\" : \"calc(100vh - \"+(props.headerHeight+props.footerHeight)+\"px)\", \"overflowY\" : \"auto\", \"width\": \"100%\"}}>\r\n      <div style={{\"overflowX\" : \"hidden\"}}>\r\n        <ResizeObserverWrapper>\r\n          <Container fluid>\r\n            {props.children}\r\n          </Container>\r\n        </ResizeObserverWrapper>\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\nconst SpinnerComponentRow=React.memo((props) => {\r\n  return (\r\n    <Row className=\"mb-3\" style={{\"height\": \"38px\"}}>\r\n      <Col className=\"center-items\">\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </Col>\r\n    </Row>\r\n  );\r\n});\r\n\r\nconst CalculateButton=React.memo((props) => {\r\n  const { calculateNewResult, disableMessage, onClick, ...restProps }=props;\r\n  const disabled=!!disableMessage();\r\n  const button=<Button {...restProps} onClick={(e) => {onClick(e); calculateNewResult();} } disabled={disabled}>Calculate</Button>;\r\n  if(disabled) {\r\n    return (\r\n      <OverlayTrigger\r\n        placement=\"top\"\r\n        overlay={\r\n          <Tooltip>\r\n            {disableMessage()}\r\n          </Tooltip>\r\n        }\r\n      >\r\n        <div className=\"disabled-button-wrapper\">\r\n          {button}\r\n        </div>\r\n      </OverlayTrigger>\r\n    )\r\n  } else {\r\n    return button;\r\n  }\r\n});\r\n\r\nconst speciesOccurences=(componentToSpecies, componentsPresent) => Immutable.Map().withMutations((map) => {\r\n  for(const componentId of componentsPresent) {\r\n    if(componentToSpecies.has(componentId)){\r\n      for(const specieId of componentToSpecies.get(componentId)) {\r\n        map.update(specieId, (num=0)=>num+1);\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst speciesCouldBePresentOfType=(speciesDB, componentsPresent) => Immutable.OrderedSet().withMutations(ourSpeciesCouldBePresent => {\r\n  console.log(speciesDB);\r\n  const ourSpeciesOccurences=speciesOccurences(speciesDB.componentToSpecies, componentsPresent);\r\n  for(const [specie, specieData] of speciesDB.species){\r\n    if(ourSpeciesOccurences.get(specie)===specieData.components.size){\r\n      ourSpeciesCouldBePresent.add(specie);\r\n    } \r\n  }\r\n})\r\n\r\nconst defaultRowInputValue=Immutable.Map({equilChecked: false, conc: \"\"});\r\n\r\nconst FreeQL=(props) => {\r\n  const hPlusOptionsRef=useRef([\r\n    { value: unstable_useOpaqueIdentifier(), label: 'totalH' },\r\n    { value: unstable_useOpaqueIdentifier(), label: 'pH' },\r\n    { value: unstable_useOpaqueIdentifier(), label: 'Alkalinity^1' },\r\n    { value: unstable_useOpaqueIdentifier(), label: 'Other Alkalinity' },\r\n  ]);\r\n  const ConcentrationCalculatorWorker=useComlinkWorker(ConcentrationCalculator);\r\n  const [totalHOption, pHOption, alkOption, alkOtherOption]=hPlusOptionsRef.current;\r\n  const [hPlusOption, setHPlusOption]=useState(totalHOption);\r\n\r\n  const [componentsInputState, componentsInputStateReducer]=useReducer(\r\n    (oldState, action) => {\r\n      switch(action.action){\r\n        case \"add\":\r\n          return oldState.withMutations((map) => {\r\n            for(const componentToAdd of action.value.components){\r\n              map.set(componentToAdd, defaultRowInputValue);\r\n            }\r\n          });\r\n        case \"remove\":\r\n          return oldState.removeAll(action.value.components);\r\n        case \"toggleEquilChecked\":\r\n          return oldState.updateIn([action.value.component, \"equilChecked\"], (val) => !val);\r\n        case \"setConc\":\r\n          return oldState.setIn([action.value.component, \"conc\"], action.value.conc);\r\n        default:\r\n          throw new Error();\r\n      }\r\n    }, \r\n    Immutable.Map()\r\n  );\r\n  const updateConc=useCallback((component, conc)=> {\r\n    componentsInputStateReducer({action: \"setConc\", value : {component, conc}});\r\n  }, [componentsInputStateReducer]);\r\n  const toggleChecked=useCallback((component) => {\r\n    componentsInputStateReducer({action: \"toggleEquilChecked\", value: {component}});\r\n  }, [componentsInputStateReducer]);\r\n\r\n  const [componentsPresent, setComponentsPresent]=useState(Immutable.OrderedSet());\r\n  const addComponents=useCallback((components) => {\r\n    componentsInputStateReducer({action: \"add\", value: {components}});\r\n    setComponentsPresent(componentsPresent.union(components));\r\n  }, [componentsPresent, setComponentsPresent, componentsInputStateReducer]);\r\n  const removeComponents=useCallback((components) => {\r\n    componentsInputStateReducer({action: \"remove\", value: {components}});\r\n    setComponentsPresent(componentsPresent.subtract(components));\r\n  }, [componentsPresent, setComponentsPresent, componentsInputStateReducer]);\r\n\r\n  const [speciesEnabled, setSpeciesEnabled]=useState({\r\n    aqs: Immutable.OrderedSet(),\r\n    solids: Immutable.OrderedSet(),\r\n    gases: Immutable.OrderedSet(),\r\n  });\r\n  const [logKChanges, setLogKChanges]=useState({\r\n    aqs: Immutable.Map(),\r\n    solids: Immutable.Map(),\r\n    gases: Immutable.Map(),\r\n  });\r\n\r\n  const [componentsDB, getNewComponentsDB, gettingNewComponentsDB]=useAsyncResourceWithBoolean(getComponentDB, componentDBDefaultParams((db) => {\r\n    console.log(db);\r\n    addComponents([db.waterValue, db.hPlusValue]);\r\n  }));\r\n  const [speciesDB, getNewSpeciesDB, gettingNewSpeciesDB]=useAsyncResourceWithBoolean(getSpeciesDB, speciesDBDefaultParams((db) => {\r\n    console.log(db);\r\n    setSpeciesEnabled(update(speciesEnabled, {aqs : {$set: Immutable.Set(db.aqs.species.keys())}}));\r\n  }));\r\n\r\n  const speciesCouldBePresent=useCallback(memoize(() => ({\r\n    aqs: speciesCouldBePresentOfType(speciesDB().aqs, componentsPresent),\r\n    solids: speciesCouldBePresentOfType(speciesDB().solids, componentsPresent),\r\n    gases: speciesCouldBePresentOfType(speciesDB().gases, componentsPresent),\r\n  })), [speciesDB, componentsPresent]);\r\n\r\n  const speciesHere=useCallback(memoize(() => {\r\n    return {\r\n      aqs: Immutable.List(speciesCouldBePresent().aqs.intersect(speciesEnabled.aqs)),\r\n      solids: Immutable.List(speciesCouldBePresent().solids.intersect(speciesEnabled.solids)),\r\n      gases: Immutable.List(speciesCouldBePresent().gases.intersect(speciesEnabled.gases)),\r\n    }\r\n  }), [speciesCouldBePresent, speciesEnabled]);\r\n\r\n  const [resultMap, setResultMap]=useState(Immutable.Map());\r\n  const [currentResult, calculateNewResult, calculatingNewResult]=useAsyncResourceWithBoolean(() => {\r\n    const input={speciesHere: speciesHere(), componentsPresent: Immutable.List(componentsPresent.delete(componentsDB().waterValue)), logKChanges, componentsInputState};\r\n    const inputImmutable=Immutable.fromJS(input);\r\n    let result;\r\n    if(!resultMap.has(inputImmutable)) {\r\n      result=ConcentrationCalculatorWorker.calculate(transit.toJSON(input)).then(res => transit.fromJSON(res)).catch((error) => error);\r\n      //setResultMap(resultMap.set(inputImmutable, result));\r\n    } else {\r\n      result=resultMap.get(inputImmutable);\r\n    }\r\n    return result; \r\n  });\r\n\r\n  const calculateButtonMessage=useCallback(memoize(() => {\r\n    if(calculatingNewResult){\r\n      return \"Calculating...\"\r\n    } else if(gettingNewComponentsDB || gettingNewSpeciesDB){\r\n      return \"Getting Databases...\"\r\n    } else if(componentsInputState.filter((componentData, component) => componentsDB().waterValue!==component && componentsPresent.has(component)).find((componentData, component) => {\r\n      return typeof componentData.get(\"conc\")!==\"number\";\r\n    })) {\r\n      return \"At least one component is empty or invalid\";\r\n    } else {\r\n      return false;\r\n    }\r\n  }), [componentsDB, componentsInputState, componentsPresent, gettingNewComponentsDB, gettingNewSpeciesDB, calculatingNewResult]);\r\n\r\n  const windowSize=useWindowSize();\r\n  const [buttonsHeight, setButtonsHeight]=useState(0);\r\n  const outerAdderHeight=windowSize.height>=700 ? 54 : 0;\r\n  const buttonsRef=useResizeObserver(useCallback(({ height }) => {setButtonsHeight(height);}, [setButtonsHeight]));\r\n  const [currentModal, openModal, closeModal]=useModalStack();\r\n\r\n  const createModalOpenCallback=useCallback(memoize((params) => {\r\n    return () => openModal(params);\r\n  }), [openModal]);\r\n  const createModalCloseCallback=useCallback(memoize((params) => {\r\n    return () => closeModal(params);\r\n  }), [closeModal]);\r\n\r\n  const onHPlusOptionChange=useCallback((val) => {\r\n    if(hPlusOption===pHOption){\r\n      toggleChecked(componentsDB().hPlusValue);\r\n      updateConc(componentsDB().hPlusValue, -Math.log10(componentsInputState.get(componentsDB().hPlusValue).get(\"conc\")))\r\n    } else if(val===pHOption){\r\n      toggleChecked(componentsDB().hPlusValue);\r\n      updateConc(componentsDB().hPlusValue, Math.pow(10, -componentsInputState.get(componentsDB().hPlusValue).get(\"conc\")))\r\n    }\r\n    setHPlusOption(val);\r\n  }, [setHPlusOption, updateConc, hPlusOption, componentsDB, componentsInputState]);\r\n\r\n  return(\r\n    <Form>\r\n      <Container style={{\"height\" : \"calc(100vh - \"+(props.headerHeight+buttonsHeight+props.footerHeight)+\"px)\"}}>\r\n        <Row>\r\n          <Col className=\"p-0\">\r\n            <ScrollContainer headerHeight={props.headerHeight} footerHeight={props.footerHeight+buttonsHeight+outerAdderHeight}>\r\n              <ComponentListHeader hPlusOptionsRef={hPlusOptionsRef} defaultVal={hPlusOption} onChange={onHPlusOptionChange}/>\r\n              <Suspense fallback={<SpinnerComponentRow/>}>\r\n                <HPlusComponent pH={pHOption===hPlusOption} componentsDB={componentsDB} componentsInputState={componentsInputState} updateConc={updateConc}/>\r\n              </Suspense>\r\n              <Row>\r\n                <Col xs=\"3\" sm=\"5\" className=\"center-items\">\r\n                  <label className=\"w-100 d-none d-sm-block text-muted text-center\">\r\n                    Components\r\n                  </label>\r\n                  <label className=\"w-100 d-block d-sm-none text-muted text-center\">\r\n                    Comp.\r\n                  </label>\r\n                </Col>\r\n                <Col xs={{span: 7, offset: 0}} sm={{span: 5, offset:0}}>\r\n                  <label className=\"w-100 text-muted text-center\">\r\n                    Total Conc.\r\n                  </label>\r\n                </Col>\r\n              </Row>\r\n              <hr className=\"mt-0 mb-3\"/>\r\n              <Suspense fallback={<SpinnerComponentRow/>}>\r\n                <ComponentsList componentsDB={componentsDB} componentsPresent={componentsPresent} toggleChecked={toggleChecked} updateConc={updateConc} removeComponents={removeComponents}/>\r\n              </Suspense>\r\n              <Row>\r\n                <Col>\r\n                  {\r\n                    windowSize.height<700 &&\r\n                    <div className=\"d-flex center-items w-100\">\r\n                      <Suspense fallback=\"\">\r\n                        <ComponentSelectModal componentsPresent={componentsPresent} componentsDB={componentsDB} addComponents={addComponents} windowHeight={windowSize.height}/>\r\n                      </Suspense>\r\n                    </div>\r\n                  }\r\n                </Col>\r\n              </Row>\r\n            </ScrollContainer>\r\n            <Container fluid>\r\n              <Row className=\"pt-3\">\r\n                <Col>\r\n                  {\r\n                    windowSize.height>=700 &&\r\n                    <Suspense fallback=\"\">\r\n                      <ComponentSelect componentsPresent={componentsPresent} componentsDB={componentsDB} addComponents={addComponents}/>\r\n                    </Suspense>\r\n                  }\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n          <Col xs=\"4\" className=\"d-none d-md-flex p-0\">\r\n            <ScrollContainer headerHeight={props.headerHeight} footerHeight={props.footerHeight+buttonsHeight}>\r\n              <Row className=\"mt-4\">\r\n                <Col className=\"center-items\">\r\n                  <h5 className=\"text-muted text-center\">\r\n                    Species\r\n                  </h5>\r\n                </Col>\r\n              </Row>\r\n              <Suspense fallback={<SpinnerComponentRow/>}>\r\n                <SpeciesList openTableauModal={createModalOpenCallback(\"tableau\")} speciesDB={speciesDB} componentsDB={componentsDB} componentsPresent={componentsPresent} speciesEnabled={speciesEnabled} speciesCouldBePresent={speciesCouldBePresent} setSpeciesEnabled={setSpeciesEnabled}/>\r\n              </Suspense>\r\n            </ScrollContainer>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <ResizeObserverWrapper ref={buttonsRef}>\r\n        <Container>\r\n          <Form.Row className=\"py-3\">\r\n            <Col className=\"d-none d-md-block\">\r\n              <CalculateButton onClick={createModalOpenCallback(\"results\")} disableMessage={calculateButtonMessage} className=\"w-100\" variant=\"primary\" calculateNewResult={calculateNewResult}/>\r\n            </Col>\r\n            <Col className=\"d-block d-md-none\">\r\n              <Button className=\"w-100\" variant=\"primary\" onClick={createModalOpenCallback(\"species\")}>Select Species</Button>\r\n            </Col>\r\n          </Form.Row>\r\n        </Container>\r\n      </ResizeObserverWrapper>\r\n      <Modal show={currentModal===\"species\"} onHide={createModalCloseCallback(\"species\")} backdrop=\"static\" scrollable>\r\n        <Modal.Header closeButton>\r\n          Species\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Suspense fallback={<SpinnerComponentRow/>}>\r\n            <SpeciesList openTableauModal={createModalOpenCallback(\"tableau\")} speciesDB={speciesDB} componentsDB={componentsDB} componentsPresent={componentsPresent} speciesEnabled={speciesEnabled} speciesCouldBePresent={speciesCouldBePresent} setSpeciesEnabled={setSpeciesEnabled}/>\r\n          </Suspense>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={createModalCloseCallback(\"species\")}>\r\n            Close\r\n          </Button>\r\n          <CalculateButton onClick={createModalOpenCallback(\"results\")} disableMessage={calculateButtonMessage} className=\"ml-auto\" variant=\"primary\" calculateNewResult={calculateNewResult}/>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal size=\"xl\" show={currentModal===\"tableau\"} onHide={createModalCloseCallback(\"tableau\")} backdrop=\"static\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Tableau</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Suspense fallback={<SpinnerComponentRow/>}>\r\n            <TableauTable logKChanges={logKChanges} setLogKChanges={setLogKChanges} componentsPresent={componentsPresent} componentsInputState={componentsInputState} windowWidth={windowSize.width} speciesHere={speciesHere} speciesEnabled={speciesEnabled} speciesDB={speciesDB} componentsDB={componentsDB}/>\r\n          </Suspense>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={createModalCloseCallback(\"tableau\")}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal size=\"xl\" show={currentModal===\"results\"} onHide={createModalCloseCallback([\"results\", \"species\"])} backdrop=\"static\" scrollable>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Results</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Suspense fallback={<SpinnerComponentRow/>}>\r\n            <Results currentResult={currentResult}/>\r\n          </Suspense>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={createModalCloseCallback([\"results\", \"species\"])}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FreeQL;","import React, { useState, useCallback } from 'react';\r\nimport './App.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport CenteringDiv from './utils/CenteringDiv.js';\r\nimport useResizeObserver from './utils/useResizeObserver.js';\r\nimport ResizeObserverWrapper from './utils/ResizeObserverWrapper.js';\r\nimport FreeQL from \"./FreeQL\";\r\n\r\n\r\nfunction App() {\r\n  const [headerHeight, setHeaderHeight]=useState(0);\r\n  const headerRef=useResizeObserver(useCallback(({height}) => {setHeaderHeight(height)}, [setHeaderHeight]));\r\n  const [footerHeight, setFooterHeight]=useState(0);\r\n  const footerRef=useResizeObserver(useCallback(({height}) => {setFooterHeight(height)}, [setFooterHeight]));\r\n  return (\r\n    <>\r\n      <ResizeObserverWrapper ref={headerRef}>\r\n        <Navbar expand=\"sm\" bg=\"dark\" variant=\"dark\">\r\n          <CenteringDiv end=\"sm\">\r\n            <Navbar.Brand href=\"/\">\r\n              <img src=\"assets/img/logo.png\" width=\"65\" alt=\"FreeQL\"/>\r\n            </Navbar.Brand>\r\n          </CenteringDiv>\r\n          <Navbar.Brand href=\"/\">FreeQL</Navbar.Brand>\r\n          <CenteringDiv end=\"sm\"/>\r\n          <Navbar.Collapse id=\"navbarTogglerDemo02\">\r\n            <Nav className=\"mr-auto\" style={{\"fontSize\": \"1.025rem\"}}>\r\n              <Nav.Link href=\"https://stephmorel8910.gitbook.io/freeql/\" target=\"_blank\">Help</Nav.Link>\r\n              <Nav.Link href=\"https://github.com/SoAsEr/FreeQL/blob/master/README.md\" target=\"_blank\">README</Nav.Link>\r\n              <Nav.Link href=\"https://github.com/SoAsEr/FreeQL/\" target=\"_blank\">Github</Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </ResizeObserverWrapper>\r\n\r\n      <FreeQL headerHeight={headerHeight} footerHeight={footerHeight}>\r\n\r\n      </FreeQL>\r\n      <ResizeObserverWrapper ref={footerRef}>\r\n        <footer className=\"bg-dark p-4 p-md-5 text-center\">\r\n          <Container>\r\n            <Row>\r\n              <Col>\r\n                <span className=\"text-light\">Created by Stephane Morel</span>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </footer>\r\n      </ResizeObserverWrapper>\r\n    </>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n/*\r\nReactDOM.render(\r\n  //<React.StrictMode>\r\n    <App />,\r\n  //</React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n*/\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.unstable_createRoot(rootElement).render(<App />);\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}