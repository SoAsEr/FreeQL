{"version":3,"sources":["reusable_components/formatting/FormattedChemicalCompound.js","utils/string-utils.js","features/components/useComponentSearchFilter.js","reusable_components/StagedAdder.js","features/components/ComponentSelectModal.js"],"names":["FormattedChemicalCompound","React","memo","props","regex","Array","from","children","matchAll","map","match","chargeValue","groups","ChargeValue1","ChargeValue2","reduce","prev","curr","chargeSign","ChargeSign1","ChargeSign2","terminator","EndMatcher1","EndMatcher2","EndMatcher3","EndMatcher4","key","substring","index","WordMatcher","SubMatcher","stringMatchAllReplace","str","replaceFunc","matches","nextSubstrStart","strSoFar","length","numberToExpWithTrailing","number","maxLength","minExp","pow10","Math","floor","abs","log10","toPrecision","toExponential","replace","chargeSignRegex","chargeSignSwitcher","ChargeValue","ChargeSign","memoizedStringMatchAllReplace","memoize","useComponentSearchFilter","componentDB","useCallback","componentId","inputValue","componentName","components","get","name","toLowerCase","includes","items","filterFn","rowLabelCreator","onConfirm","onCancel","height","Body","Footer","useState","searchValue","setSearchValue","Immutable","itemsStaged","setItemsStaged","filteredIndexedSeq","useMemo","filter","item","InputGroup","Prepend","Text","width","viewBox","className","fill","xmlns","fillRule","d","Form","Control","placeholder","value","onChange","e","target","onClick","disableHeight","rowHeight","overscanRowCount","rowRenderer","style","isStaged","Button","delete","add","variant","size","rowCount","count","toIndexedSeq","ComponentSelectModal","show","close","windowHeight","componentsPresent","useSelector","state","present","dispatch","useDispatch","getComponentDB","searchFilter","Modal","onHide","Header","closeButton","StagedAdder","waterValue","deleteAll","keys","listAdded","addComponents"],"mappings":"gIAEMA,EAA0BC,IAAMC,MAAK,SAACC,GAW1C,IAAMC,EAAK,YAAC,qdAAD,uKAEX,OACE,wBAASD,EACJE,MAAMC,KAAKH,EAAMI,SAASC,SAASJ,IAAQK,KAAI,SAACC,GAC/C,IAAMC,EAAY,CAACD,EAAME,OAAOC,aAAcH,EAAME,OAAOE,cAAcC,QAAO,SAACC,EAAMC,GAAP,OAAgBA,GAAcD,IAAM,IAC9GE,EAAW,CAACR,EAAME,OAAOO,YAAaT,EAAME,OAAOQ,aAAaL,QAAO,SAACC,EAAMC,GAAP,OAAgBA,GAAcD,IAAM,IAC3GK,EAAW,CAACX,EAAME,OAAOU,YAAaZ,EAAME,OAAOW,YAAab,EAAME,OAAOY,YAAad,EAAME,OAAOa,aAAaV,QAAO,SAACC,EAAMC,GAAP,OAAgBA,GAAcD,IAAM,IACrK,OACE,0BAAMU,IAAKvB,EAAMI,SAASoB,UAAU,EAAGjB,EAAMkB,QAC1ClB,EAAME,OAAOiB,YAAY,6BAAMnB,EAAME,OAAOkB,YAAiB,6BAAMnB,EAAaO,GAAkBG,UAQlGrB,O,gHC/BT+B,EAAsB,SAACC,EAAK5B,EAAO6B,GACvC,IADuD,EACjDC,EAAQF,EAAIxB,SAASJ,GACvB+B,EAAgB,EAChBC,EAAS,GAH0C,cAIpCF,GAJoC,IAIvD,IAAI,EAAJ,qBAA2B,CAAC,IAAlBxB,EAAiB,QACzB0B,GAAUJ,EAAIL,UAAUQ,EAAiBzB,EAAMkB,OAC/CQ,GAAUH,EAAYvB,GACtByB,EAAgBzB,EAAMkB,MAAMlB,EAAM2B,QAPmB,8BAUvD,OADAD,GAAUJ,EAAIL,UAAUQ,IAYpBG,EAAwB,SAACC,EAAQC,GAA0B,IAAfC,EAAc,uDAAP,EACjDC,EAAMC,KAAKC,MAAMD,KAAKE,IAAIF,KAAKG,MAAMP,KAC3C,OAAGG,EAAMD,EACAF,EAAOQ,YAAYP,GAEnBD,EAAOS,cAAcR,EAAU,GAAGS,QAAQ,MAAO,O,+ECrBtDC,EAAe,YAAC,0GAAD,oDACfC,EAAmB,SAACzC,GAAD,OAAWA,EAAME,OAAOwC,YAAY1C,EAAME,OAAOyC,YACpEC,EAA8BC,IAAQxB,KAQ7ByB,IAPgB,SAACC,GAC9B,OAAOC,uBAAY,SAACC,EAAaC,GAC/B,IAAMC,EAAcJ,EAAYK,WAAWC,IAAIJ,GAAaK,KAC5D,OAAOH,EAAcI,cAAcC,SAASN,EAAWK,gBAAkBX,EAA8BO,EAAeX,EAAiBC,GAAoBc,cAAcC,SAASN,EAAWK,iBAC7L,CAACR,M,4KCFU,cAAoF,IAAlFU,EAAiF,EAAjFA,MAAOC,EAA0E,EAA1EA,SAAUC,EAAgE,EAAhEA,gBAAiBC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,OAAY,EAC5DC,mBAAS,IADmD,mBACzFC,EADyF,KAC5EC,EAD4E,OAE5DF,mBAASG,OAFmD,mBAEzFC,EAFyF,KAE5EC,EAF4E,KAG1FC,EAAmBC,mBAAQ,WAC/B,OAAOf,EAAMgB,QAAO,SAAAC,GAAI,OAAIhB,EAASgB,EAAMR,QAE3C,CAACA,EAAaT,EAAOC,IAKvB,OACE,oCACE,kBAACK,EAAD,KACE,kBAACY,EAAA,EAAD,KACE,kBAACA,EAAA,EAAWC,QAAZ,KACE,kBAACD,EAAA,EAAWE,KAAZ,KACE,yBAAKC,MAAM,MAAMhB,OAAO,MAAMiB,QAAQ,YAAYC,UAAU,eAAeC,KAAK,eAAeC,MAAM,8BACnG,0BAAMC,SAAS,UAAUC,EAAE,mGAC3B,0BAAMD,SAAS,UAAUC,EAAE,oGAIjC,kBAACC,EAAA,EAAKC,QAAN,CACEC,YAAY,SACZC,MAAOtB,EACPuB,SAAU,SAACC,GACTvB,EAAeuB,EAAEC,OAAOH,QAE1BR,UAAU,eAGVd,GACA,yBACE0B,QAAS,WACPzB,EAAe,KAEjBW,MAAM,MAAMhB,OAAO,MAAMiB,QAAQ,YAAYC,UAAU,qCAAqCC,KAAK,eAAeC,MAAM,8BACtH,0BAAMC,SAAS,UAAUC,EAAE,0NAIjC,kBAAC,IAAD,CAAWS,eAAa,IACvB,gBAAEf,EAAF,EAAEA,MAAF,OAAa,kBAAC,IAAD,CACZA,MAAOA,EACPhB,OAAQA,EACRgC,UAAW,GACXC,iBAAkB,GAClBC,YAAa,YAA0B,IAAxB9E,EAAuB,EAAvBA,MAAY+E,GAAW,EAAhBjF,IAAgB,EAAXiF,OACnBvB,EAAKH,EAAmBlB,IAAInC,GAC5BgF,EAAS7B,EAAYb,SAASkB,GACpC,OACE,yBAAK1D,IAAK0D,EAAMuB,MAAOA,EAAOjB,UAAU,iCACrCrB,EAAgBe,GACjB,kBAACyB,EAAA,EAAD,CAAQP,QAAS,WAEXtB,EADC4B,EACc,SAAA7B,GAAW,OAAIA,EAAY+B,OAAO1B,IAElC,SAAAL,GAAW,OAAIA,EAAYgC,IAAI3B,MAGlD4B,QAASJ,EAAW,YAAc,UAAWK,KAAK,MAAML,EAAW,SAAW,SAMtFM,SAAUjC,EAAmBkC,cAInC,kBAACzC,EAAD,KACE,kBAACmC,EAAA,EAAD,CACEG,QAAQ,UACRV,QAAS,WAlEbzB,EAAe,IACfG,EAAeF,OAmENC,EAAYkC,KACb3C,EAAUS,EAAYqC,gBAEtB7C,MAIHQ,EAAYkC,KAAO,QAAU,a,gBC3EhCI,EAAqBpH,IAAMC,MAAK,YAAkC,IAAhCoH,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,aAC7CC,EAAkBC,aAAY,SAAAC,GAAK,OAAIA,EAAM7D,WAAW8D,WACxDC,EAASC,cACTrE,EAAYiE,YAAYK,KACxBC,EAAaxE,YAAyBC,GAE5C,OACE,oCACE,kBAACwE,EAAA,EAAD,CAAOX,KAAMA,EAAMY,OAAQX,GACzB,kBAACU,EAAA,EAAME,OAAP,CAAcC,aAAW,GAAzB,kBAGA,kBAACC,EAAD,CACE7D,OAAQgD,EAAa,IAAI,GAAG,GAC5BrD,MAAOW,IAAerB,EAAYK,WAAWgD,OAAOrD,EAAY6E,YAAYC,UAAUd,GAAmBe,QACzGnE,gBAAiB,SAACe,GAChB,OAAO,0BAAMM,UAAU,0BAAyB,kBAAC1F,EAAA,EAAD,KAA4ByD,EAAYK,WAAWC,IAAIqB,GAAMpB,QAE/GM,UAAWZ,uBAAY,SAAC+E,GACtBZ,EAASa,YAAcD,IACvBlB,MACC,CAACM,EAAUN,IACdhD,SAAUb,uBAAY,WACpB6D,MACC,CAACA,IACJnD,SAAU4D,EACVvD,KAAMwD,IAAMxD,KACZC,OAAQuD,IAAMvD,cAOT2C","file":"static/js/13.6d78f674.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FormattedChemicalCompound=React.memo((props) => {\r\n  /*\r\n  WordMatcher=(.*?[^0-9\\[\\(])\r\n  SubMatcher=([0-9])\r\n  EndMatcher=([$\\s])\r\n  SupMatcher=([+-])(?:(?:1|([2-9]))|{EndMatcher})\r\n  WholeExp={WordMatcher}(?:{EndMatcher}|{SubMatcher}{SupMatcher}?|{SupMatcher})\r\n  (WordMatcher[0])_(SubMatcher[0])^(SupMatcher[1]SupMatcher[0])EndMatcher[0]\r\n  That would only work with ruby where the capture groups are changed on every recursion\r\n  */\r\n  //https://regex101.com/r/POrbvL/4\r\n  const regex=/(?<WordMatcher>.*?[^0-9[(\\s])(?:(?<EndMatcher1>$|[:.\\s])|(?<Charge1>(?<ChargeSign1>[+-])(?:(?:1|(?<ChargeValue1>[2-9]))|(?<EndMatcher2>$|[:.\\s])))|(?<SubMatcher>[0-9]+)(?<Charge2>(?<ChargeSign2>[+-])(?:(?:1|(?<ChargeValue2>[2-9]))|(?<EndMatcher3>$|[:.\\s])))?)(?<EndMatcher4>$|[:.\\s])?/g;\r\n  //$<WordMatcher>_($<SubMatcher>)^($<ChargeValue1>$<ChargeValue2>$<ChargeSign1>$<ChargeSign2>)$<EndMatcher1>$<EndMatcher2>$<EndMatcher3>\r\n  return(\r\n    <div {...props}>\r\n        {Array.from(props.children.matchAll(regex)).map((match) => {\r\n          const chargeValue=[match.groups.ChargeValue1, match.groups.ChargeValue2].reduce((prev, curr) => curr ? curr : prev, \"\");\r\n          const chargeSign=[match.groups.ChargeSign1, match.groups.ChargeSign2].reduce((prev, curr) => curr ? curr : prev, \"\");\r\n          const terminator=[match.groups.EndMatcher1, match.groups.EndMatcher2, match.groups.EndMatcher3, match.groups.EndMatcher4].reduce((prev, curr) => curr ? curr : prev, \"\");\r\n          return (\r\n            <span key={props.children.substring(0, match.index)}>\r\n              {match.groups.WordMatcher}<sub>{match.groups.SubMatcher}</sub><sup>{chargeValue}{chargeSign}</sup>{terminator}\r\n            </span>\r\n          );\r\n        })\r\n        }\r\n    </div>\r\n  );\r\n});\r\nexport default FormattedChemicalCompound;","const stringMatchAllReplace=(str, regex, replaceFunc) => {\r\n  const matches=str.matchAll(regex);\r\n  let nextSubstrStart=0;\r\n  let strSoFar=\"\"\r\n  for(const match of matches){\r\n    strSoFar+=str.substring(nextSubstrStart, match.index);\r\n    strSoFar+=replaceFunc(match);\r\n    nextSubstrStart=match.index+match.length;\r\n  }\r\n  strSoFar+=str.substring(nextSubstrStart);\r\n  return strSoFar;\r\n};\r\n\r\nconst numberToExpNoTrailing=(number, maxLength, minExp=2 ) => {\r\n  const pow10=Math.floor(Math.abs(Math.log10(number)));\r\n  if(pow10<minExp){\r\n    return number.toPrecision(maxLength).replace(/(\\.\\d*?)0+$/,'$1').replace(/\\.$/, '');\r\n  } else {\r\n    return number.toExponential(maxLength-1).replace(/(\\.\\d*?)0+e/,'$1e').replace(/\\.e/, 'e').replace(/e\\+/, \"e\");\r\n  }\r\n}\r\nconst numberToExpWithTrailing=(number, maxLength, minExp=2 ) => {\r\n  const pow10=Math.floor(Math.abs(Math.log10(number)));\r\n  if(pow10<minExp){\r\n    return number.toPrecision(maxLength)\r\n  } else {\r\n    return number.toExponential(maxLength-1).replace(/e\\+/, \"e\");\r\n  }\r\n}\r\n\r\nexport { stringMatchAllReplace, numberToExpWithTrailing, numberToExpNoTrailing };","import { useCallback } from \"react\";\r\n\r\nimport memoize from 'fast-memoize';\r\nimport { stringMatchAllReplace } from \"../../utils/string-utils.js\";\r\n\r\nconst chargeSignRegex=/(?<Charge>(?<ChargeSign>[+-])(?:(?:1|(?<ChargeValue>[2-9]))|(?<EndMatcher>$|[:\\s])))/g;\r\nconst chargeSignSwitcher=(match) => match.groups.ChargeValue+match.groups.ChargeSign;\r\nconst memoizedStringMatchAllReplace=memoize(stringMatchAllReplace);\r\nconst useComponentSearchFilter=(componentDB) => {\r\n  return useCallback((componentId, inputValue) => {\r\n    const componentName=componentDB.components.get(componentId).name;\r\n    return componentName.toLowerCase().includes(inputValue.toLowerCase()) || memoizedStringMatchAllReplace(componentName, chargeSignRegex, chargeSignSwitcher).toLowerCase().includes(inputValue.toLowerCase());\r\n  },[componentDB]);\r\n};\r\n\r\nexport default useComponentSearchFilter;","import React, { useState, useMemo } from \"react\";\r\nimport * as Immutable from \"immutable\";\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\n\r\nimport List from \"react-virtualized/dist/commonjs/List\";\r\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\r\n\r\nexport default ({items, filterFn, rowLabelCreator, onConfirm, onCancel, height, Body, Footer}) => {\r\n  const [searchValue, setSearchValue]=useState(\"\");\r\n  const [itemsStaged, setItemsStaged]=useState(Immutable.OrderedSet());\r\n  const filteredIndexedSeq=useMemo(() => {\r\n    return items.filter(item => filterFn(item, searchValue));\r\n  }\r\n  , [searchValue, items, filterFn]);\r\n  const reset=() => {\r\n    setSearchValue(\"\");\r\n    setItemsStaged(Immutable.OrderedSet());\r\n  }\r\n  return (\r\n    <>\r\n      <Body>\r\n        <InputGroup>\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>\r\n              <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-search\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\" d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\"/>\r\n                <path fillRule=\"evenodd\" d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\"/>\r\n              </svg>\r\n            </InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n          <Form.Control\r\n            placeholder=\"Search\"\r\n            value={searchValue}\r\n            onChange={(e) => {\r\n              setSearchValue(e.target.value);\r\n            }}\r\n            className=\"sticky-top\"\r\n          />\r\n          {\r\n            searchValue && \r\n            <svg\r\n              onClick={() => {\r\n                setSearchValue(\"\")\r\n              }} \r\n              width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-x-circle-fill search-clearer\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path fillRule=\"evenodd\" d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\"/>\r\n            </svg>\r\n          }\r\n        </InputGroup>\r\n        <AutoSizer disableHeight>\r\n        {({width}) => <List \r\n          width={width} \r\n          height={height}\r\n          rowHeight={43}\r\n          overscanRowCount={10}\r\n          rowRenderer={({index, key, style}) => {\r\n            const item=filteredIndexedSeq.get(index);\r\n            const isStaged=itemsStaged.includes(item);\r\n            return (\r\n              <div key={item} style={style} className=\"p-2 d-flex align-items-center\">\r\n                {rowLabelCreator(item)}\r\n                <Button onClick={() => {\r\n                    if(isStaged){\r\n                      setItemsStaged(itemsStaged => itemsStaged.delete(item));\r\n                    } else {\r\n                      setItemsStaged(itemsStaged => itemsStaged.add(item));\r\n                    }\r\n                  }}\r\n                  variant={isStaged ? \"secondary\" : \"primary\"} size=\"sm\">{isStaged ? \"Cancel\" : \"Add\"}\r\n                </Button>\r\n              \r\n              </div>\r\n            )\r\n          }}\r\n          rowCount={filteredIndexedSeq.count()}\r\n        />}\r\n      </AutoSizer>\r\n    </Body>\r\n    <Footer>\r\n      <Button\r\n        variant=\"primary\"\r\n        onClick={() => {\r\n          reset();\r\n          if(itemsStaged.size){\r\n            onConfirm(itemsStaged.toIndexedSeq());\r\n          } else {\r\n            onCancel();\r\n          }\r\n        }}\r\n      >\r\n        {itemsStaged.size ? \"Apply\" : \"Cancel\"}\r\n      </Button>\r\n    </Footer>\r\n  </>\r\n  )\r\n}","\r\nimport React, { useCallback } from 'react';\r\n\r\nimport * as Immutable from 'immutable';\r\n\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport useComponentSearchFilter from \"./useComponentSearchFilter.js\"\r\n\r\nimport FormattedChemicalCompound from \"../../reusable_components/formatting/FormattedChemicalCompound.js\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport StagedAdder from '../../reusable_components/StagedAdder.js';\r\nimport {getComponentDB } from './componentsSelectors.js';\r\nimport { addComponents } from './componentsSlice.js';\r\n\r\n\r\nconst ComponentSelectModal=React.memo(({show, close, windowHeight}) => {\r\n  const componentsPresent=useSelector(state => state.components.present);\r\n  const dispatch=useDispatch();\r\n  const componentDB=useSelector(getComponentDB);\r\n  const searchFilter=useComponentSearchFilter(componentDB);\r\n\r\n  return(\r\n    <>\r\n      <Modal show={show} onHide={close}>\r\n        <Modal.Header closeButton>\r\n          Add Components\r\n        </Modal.Header>\r\n        <StagedAdder \r\n          height={windowHeight-120-80-16} \r\n          items={Immutable.List(componentDB.components.delete(componentDB.waterValue).deleteAll(componentsPresent).keys())} \r\n          rowLabelCreator={(item) => {\r\n            return <span className=\"d-inline-block mr-auto\"><FormattedChemicalCompound>{componentDB.components.get(item).name}</FormattedChemicalCompound></span>\r\n          }}\r\n          onConfirm={useCallback((listAdded) => {\r\n            dispatch(addComponents(listAdded));\r\n            close();\r\n          }, [dispatch, close])}\r\n          onCancel={useCallback(() => {\r\n            close();\r\n          }, [close])}\r\n          filterFn={searchFilter}\r\n          Body={Modal.Body}\r\n          Footer={Modal.Footer}\r\n        />\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ComponentSelectModal;"],"sourceRoot":""}