{"version":3,"sources":["formatting/FormattedChemicalCompound.js","utils/ConstantValidationTextInput.js","component_groups/Tableau.js"],"names":["FormattedChemicalCompound","React","memo","props","regex","Array","from","children","matchAll","map","match","chargeValue","groups","ChargeValue1","ChargeValue2","reduce","prev","curr","chargeSign","ChargeSign1","ChargeSign2","terminator","EndMatcher1","EndMatcher2","EndMatcher3","EndMatcher4","key","substring","index","WordMatcher","SubMatcher","ConstantValidationTextInput","child","Children","only","useState","value","setValue","selection","setSelection","validationMisfired","setValidationMisfire","selectRef","useRef","useEffect","current","selectionStart","selectionEnd","cloneElement","onSelect","e","target","onChange","validation","onBlur","ref","mergeRefs","defaultProps","LogKEditor","logKChanges","setLogKChanges","specie","defaultVal","get","newLogKVal","setNewLogVal","editing","setEditing","editBoxVal","setEditBoxVal","editBoxRef","showDefault","undefined","delete","set","focus","submitEditVal","preventDefault","is_number","Number","onSubmit","input","Control","style","onKeyDown","keyCode","stopPropagation","className","toFixed","replace","onClick","width","height","viewBox","fill","xmlns","fillRule","d","TableauTable","componentsPresent","componentsInputState","speciesHere","speciesDB","componentsDB","windowWidth","setTypedLogKChanges","useCallback","type","newMap","update","$set","topLeftWidth","setTopLeftWidth","topLeftHeight","setTopLeftHeight","logKWidth","setLogKWidth","lg","headerColumn","useMemo","Header","Footer","id","accessor","name","dataColumns","Immutable","waterValue","component","components","getIn","logKColumn","logK","bind","columns","unshift","push","data","aqs","species","solids","gases","flatten","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","topLeftRef","useResizeObserver","logKRef","autoHide","autoHeight","autoHeightMax","renderTrackHorizontal","finalStyle","$merge","right","bottom","left","borderRadius","marginLeft","marginRight","renderTrackVertical","top","marginTop","striped","bordered","hover","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","group","getFooterGroupProps","getFooterProps"],"mappings":"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","file":"static/js/13.614508b2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FormattedChemicalCompound=React.memo((props) => {\r\n  /*\r\n  WordMatcher=(.*?[^0-9\\[\\(])\r\n  SubMatcher=([0-9])\r\n  EndMatcher=([$\\s])\r\n  SupMatcher=([+-])(?:(?:1|([2-9]))|{EndMatcher})\r\n  WholeExp={WordMatcher}(?:{EndMatcher}|{SubMatcher}{SupMatcher}?|{SupMatcher})\r\n  (WordMatcher[0])_(SubMatcher[0])^(SupMatcher[1]SupMatcher[0])EndMatcher[0]\r\n  That would only work with ruby where the capture groups are changed on every recursion\r\n  */\r\n  //https://regex101.com/r/POrbvL/4\r\n  const regex=/(?<WordMatcher>.*?[^0-9[(\\s])(?:(?<EndMatcher1>$|[:.\\s])|(?<Charge1>(?<ChargeSign1>[+-])(?:(?:1|(?<ChargeValue1>[2-9]))|(?<EndMatcher2>$|[:.\\s])))|(?<SubMatcher>[0-9]+)(?<Charge2>(?<ChargeSign2>[+-])(?:(?:1|(?<ChargeValue2>[2-9]))|(?<EndMatcher3>$|[:.\\s])))?)(?<EndMatcher4>$|[:.\\s])?/g;\r\n  //$<WordMatcher>_($<SubMatcher>)^($<ChargeValue1>$<ChargeValue2>$<ChargeSign1>$<ChargeSign2>)$<EndMatcher1>$<EndMatcher2>$<EndMatcher3>\r\n  return(\r\n    <div {...props}>\r\n        {Array.from(props.children.matchAll(regex)).map((match) => {\r\n          const chargeValue=[match.groups.ChargeValue1, match.groups.ChargeValue2].reduce((prev, curr) => curr ? curr : prev, \"\");\r\n          const chargeSign=[match.groups.ChargeSign1, match.groups.ChargeSign2].reduce((prev, curr) => curr ? curr : prev, \"\");\r\n          const terminator=[match.groups.EndMatcher1, match.groups.EndMatcher2, match.groups.EndMatcher3, match.groups.EndMatcher4].reduce((prev, curr) => curr ? curr : prev, \"\");\r\n          return (\r\n            <span key={props.children.substring(0, match.index)}>\r\n              {match.groups.WordMatcher}<sub>{match.groups.SubMatcher}</sub><sup>{chargeValue}{chargeSign}</sup>{terminator}\r\n            </span>\r\n          );\r\n        })\r\n        }\r\n    </div>\r\n  );\r\n});\r\nexport default FormattedChemicalCompound;","import React, { useState, useRef, useEffect } from 'react';\r\nimport { mergeRefs } from './ref-utils';\r\n\r\nconst ConstantValidationTextInput=React.memo((props) => {\r\n  const child=React.Children.only(props.children);\r\n  const [value, setValue]=useState(\"\");\r\n  const [selection, setSelection]=useState([0,0]);\r\n  const [validationMisfired, setValidationMisfire]=useState(false);\r\n  const selectRef=useRef(null);\r\n  const onBlur=(e) => {\r\n    props.onBlur(e, setValue);\r\n  }\r\n\r\n  const onChange=(e) => {\r\n    if(props.validation(e.target.value)){\r\n      props.onChange(e);\r\n      setValue(e.target.value);\r\n      setSelection([e.target.selectionStart, e.target.selectionEnd]);\r\n    } else {\r\n      setValidationMisfire(true);\r\n    }\r\n  }\r\n  const onSelect=(e) => {\r\n    if(!validationMisfired){\r\n      setSelection([e.target.selectionStart, e.target.selectionEnd]);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if(validationMisfired) {\r\n      selectRef.current.selectionStart=selection[0];\r\n      selectRef.current.selectionEnd=selection[1];\r\n      setValidationMisfire(false);\r\n    }\r\n  }, [validationMisfired, selection]);\r\n  return(\r\n    <>\r\n      {React.cloneElement(child, { value: value, onSelect: onSelect, onChange: onChange, onBlur: onBlur, ref: mergeRefs(child.ref, selectRef)})}\r\n    </>\r\n  )\r\n});\r\nConstantValidationTextInput.defaultProps={\r\n  onChange: () => {},\r\n  onBlur: () => {},\r\n};\r\n\r\nexport default ConstantValidationTextInput;","import React, { useState, useRef, useEffect, useMemo, useCallback } from 'react';\r\n\r\nimport ConstantValidationTextInput from \"../utils/ConstantValidationTextInput\";\r\nimport FormattedChemicalCompound from \"../formatting/FormattedChemicalCompound\";\r\nimport useResizeObserver from '../utils/useResizeObserver';\r\n\r\n\r\nimport * as Immutable from \"immutable\";\r\nimport update from \"immutability-helper\";\r\n\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nimport { useTable } from 'react-table';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Table from 'react-bootstrap/Table';\r\nimport is_number from 'is-number';\r\n\r\nconst LogKEditor=(props) => {\r\n  const { logKChanges, setLogKChanges, specie, defaultVal } = props;\r\n  const [newLogKVal, setNewLogVal] = useState(logKChanges.get(specie));\r\n  const [editing, setEditing] = useState(false);\r\n  const [editBoxVal, setEditBoxVal] = useState(\"\");\r\n  const editBoxRef=useRef(null);\r\n  const showDefault = newLogKVal===undefined;\r\n  useEffect(() => {\r\n    if(showDefault){\r\n      setLogKChanges(logKChanges.delete(specie));\r\n    } else {\r\n      setLogKChanges(logKChanges.set(specie, newLogKVal));\r\n    }\r\n  }, [logKChanges, setLogKChanges, newLogKVal, showDefault, specie]);\r\n  useEffect(() => {\r\n    if(editing){\r\n      editBoxRef.current.focus();\r\n    }\r\n  }, [editing, editBoxRef]);\r\n\r\n  const beginEditVal=(e) => {\r\n    setEditing(true);\r\n  }\r\n  const submitEditVal=(e) => {\r\n    e.preventDefault();\r\n    setEditing(false);\r\n    setEditBoxVal(\"\");\r\n    setNewLogVal(is_number(editBoxVal) ? Number(editBoxVal) : undefined);\r\n  }\r\n  const cancelEditVal=(e) => {\r\n    if(e.keyCode === 27) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      setEditing(false);\r\n      setEditBoxVal(\"\");\r\n    }\r\n  }\r\n  const onChangeEditBox=(e) => {\r\n    setEditBoxVal(e.target.value);\r\n  }\r\n  const resetVal=(e) => {\r\n    setNewLogVal(undefined);\r\n  }\r\n  if(editing){\r\n    return (\r\n      <Form onSubmit={submitEditVal}>\r\n        <ConstantValidationTextInput validation={(input) => input.match(/^-?\\d*\\.?\\d*$/)} onChange={onChangeEditBox} onBlur={submitEditVal}>\r\n          <Form.Control ref={editBoxRef} style={{\"width\": \"80px\"}} onKeyDown={cancelEditVal}/>\r\n        </ConstantValidationTextInput>\r\n      </Form>\r\n    )\r\n  } else if(showDefault) {\r\n    return (\r\n      <span className=\"text-nowrap\">\r\n        {defaultVal.toFixed(3).replace(/\\.000$|0{0,2}$/, \"\")}\r\n        <svg onClick={beginEditVal} className=\"logK-editor\" style={{\"marginTop\": \"-0.2rem\"}} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path fillRule=\"evenodd\" d=\"M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z\"></path>\r\n          <path fillRule=\"evenodd\" d=\"M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z\"></path>\r\n        </svg>\r\n      </span>\r\n    )\r\n  } else {\r\n    return (\r\n      <span className=\"text-nowrap\">\r\n        {newLogKVal.toFixed(3).replace(/\\.000$|0{0,2}$/, \"\")}\r\n        <svg onClick={resetVal} className=\"logK-reset\" style={{\"marginTop\" : \"-0.12rem\"}} width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path fillRule=\"evenodd\" d=\"M12.83 6.706a5 5 0 0 0-7.103-3.16.5.5 0 1 1-.454-.892A6 6 0 1 1 2.545 5.5a.5.5 0 1 1 .91.417 5 5 0 1 0 9.375.789z\"></path>\r\n          <path fillRule=\"evenodd\" d=\"M7.854.146a.5.5 0 0 0-.708 0l-2.5 2.5a.5.5 0 0 0 0 .708l2.5 2.5a.5.5 0 1 0 .708-.708L5.707 3 7.854.854a.5.5 0 0 0 0-.708z\"></path>\r\n        </svg>\r\n      </span>\r\n    )\r\n  }\r\n}\r\n\r\nconst TableauTable=React.memo((props) => {\r\n  const {componentsPresent, componentsInputState, speciesHere, speciesDB, componentsDB, logKChanges, setLogKChanges, windowWidth}=props;\r\n\r\n  const setTypedLogKChanges=useCallback((type, newMap) => {\r\n    setLogKChanges(update(logKChanges, {[type]: {$set: newMap}}));\r\n  }, [setLogKChanges, logKChanges]);\r\n\r\n  const [topLeftWidth, setTopLeftWidth]=useState(0);\r\n  const [topLeftHeight, setTopLeftHeight]=useState(0);\r\n  const [logKWidth, setLogKWidth]=useState(0);\r\n  const lg=windowWidth>=992;\r\n  const headerColumn=useMemo(() => ({\r\n    Header: \"\",\r\n    Footer: () => (<><span className=\"d-none d-xl-block\">Total Concentration</span><span className=\"d-block d-xl-none\">Total Conc.</span></>),\r\n    id: \"name\",\r\n    accessor: ([specie, {name}]) => (<FormattedChemicalCompound>{name}</FormattedChemicalCompound>),\r\n  }), []);\r\n  const dataColumns=useMemo(() => Immutable.List(componentsPresent.delete(componentsDB().waterValue)).map(component => {\r\n    return {\r\n      Header: () => (<FormattedChemicalCompound>{componentsDB().components.get(component).name}</FormattedChemicalCompound>),\r\n      Footer: componentsInputState.getIn([component, \"equilChecked\"]) ? \"TBC\" : componentsInputState.getIn([component, \"conc\"]), \r\n      id: component,\r\n      accessor: ([specie, {components}]) => { return components.get(component) ?? 0},\r\n    }\r\n  }), [componentsPresent, componentsInputState, componentsDB]);\r\n  const logKColumn=useMemo(() => ({\r\n    Header: \"logK\",\r\n    Footer: \"\",\r\n    id: \"logK\",\r\n    accessor: ([specie, {logK, type, logKChanges}]) => {return <LogKEditor specie={specie} defaultVal={logK} logKChanges={logKChanges} setLogKChanges={setTypedLogKChanges.bind(null, type)}/>},\r\n  }), [setTypedLogKChanges]);\r\n  const columns=useMemo(() => {\r\n    if(lg){\r\n      return dataColumns.unshift(headerColumn).push(logKColumn);\r\n    } else {\r\n      return dataColumns.unshift(logKColumn).unshift(headerColumn);\r\n    }\r\n  }, [headerColumn, dataColumns, logKColumn, lg]);\r\n  const data=useMemo(() => \r\n    Immutable.List([\r\n      Immutable.List(speciesHere().aqs).map(specie => ([specie, {...speciesDB().aqs.species.get(specie), logKChanges: logKChanges.aqs, type: \"aqs\"}])),\r\n      Immutable.List(speciesHere().solids).map(specie => ([specie, {...speciesDB().solids.species.get(specie), logKChanges: logKChanges.solids, type: \"solids\"}])),\r\n      Immutable.List(speciesHere().gases).map(specie => ([specie, {...speciesDB().gases.species.get(specie), logKChanges: logKChanges.gases, type: \"gases\"}])),\r\n    ]).flatten(true)\r\n  , [speciesHere, speciesDB, logKChanges]);\r\n\r\n  const tableInstance = useTable({ columns, data });\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    footerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = tableInstance;\r\n\r\n  const topLeftRef=useResizeObserver(useCallback(({width, height}) => {\r\n    setTopLeftWidth(width);\r\n    setTopLeftHeight(height);\r\n  }, [setTopLeftHeight]));\r\n  \r\n  const logKRef=useResizeObserver(useCallback(({width}) => {\r\n    setLogKWidth(width);\r\n  }, [setLogKWidth]));\r\n  \r\n  return(\r\n    <Scrollbars \r\n      autoHide\r\n      style={{width: \"100%\"}}\r\n      autoHeight\r\n      autoHeightMax=\"calc(90vh - 63px - 71px - 2rem)\"\r\n      renderTrackHorizontal={props => {\r\n        const finalStyle = update(props.style,{ $merge: {\r\n          right: 2,\r\n          bottom: 2,\r\n          left: 2,\r\n          borderRadius: 3,\r\n          marginLeft: topLeftWidth,\r\n          marginRight: lg ? logKWidth : 0,\r\n        }});\r\n        return <div {...props} style={finalStyle}/>;\r\n        }\r\n      }\r\n      renderTrackVertical={props => {\r\n        const finalStyle = update(props.style,{ $merge: {\r\n          right: 2,\r\n          bottom: 2,\r\n          top: 2,\r\n          borderRadius: 3,\r\n          marginTop: topLeftHeight,\r\n        }});\r\n        return <div {...props} style={finalStyle}/>;\r\n        }\r\n      }\r\n    >\r\n      <Table striped bordered hover {...getTableProps({\r\n        style: {}\r\n      })}>\r\n        <thead>\r\n          {\r\n            headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {\r\n                  headerGroup.headers.map(column => {\r\n                    if(!column.Header){\r\n                      return <th {...column.getHeaderProps({className: \"sticky sticky-header-y sticky-header-x-lg bg-white\"})} ref={topLeftRef} />\r\n                    } else if(column.id===\"logK\"){\r\n                      return (\r\n                        <th {...column.getHeaderProps({\r\n                          className: \"vertical-align-middle sticky-header-y sticky-column-lg sticky\",\r\n                        })} ref={logKRef}>\r\n                          {\r\n                            column.render('Header')\r\n                          }\r\n                        </th>\r\n                      )\r\n                    } else {\r\n                      return (\r\n                        <th {...column.getHeaderProps({\r\n                          className: \"vertical-align-middle sticky-header-y sticky\",\r\n                        })}>\r\n                          {\r\n                            column.render('Header')\r\n                          }\r\n                        </th>\r\n                      )\r\n                    }\r\n                  })\r\n                }\r\n              </tr>\r\n            ))\r\n          }\r\n        </thead>\r\n        \r\n        <tbody {...getTableBodyProps()}>\r\n          {\r\n          rows.map(row => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {\r\n                  row.cells.map(cell => {\r\n                    if(cell.column.id===\"name\"){\r\n                      return (\r\n                        <th {...cell.getCellProps({\r\n                          className: \"vertical-align-middle sticky-header-lg sticky\",\r\n                        })}>\r\n                          {\r\n                            cell.render('Cell')\r\n                          }\r\n                        </th>\r\n                      )\r\n                    } else if(cell.column.id===\"logK\"){\r\n                      return (\r\n                        <td {...cell.getCellProps({\r\n                          className: \"vertical-align-middle sticky-column-lg sticky\",\r\n                        })}>\r\n                          {\r\n                            cell.render('Cell')\r\n                          }\r\n                        </td>\r\n                      )\r\n                    } else {\r\n                      return (\r\n                        <td {...cell.getCellProps({\r\n                          className: \"vertical-align-middle\",\r\n                        })}>\r\n                          {\r\n                            cell.render('Cell')\r\n                          }\r\n                        </td>\r\n                      )\r\n                    }\r\n                  })\r\n                }\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n        <tfoot>\r\n          {footerGroups.map(group => (\r\n            <tr {...group.getFooterGroupProps()}>\r\n              {\r\n                group.headers.map(column => {\r\n                  if(column.id===\"name\"){\r\n                    return (\r\n                      <th {...column.getFooterProps({\r\n                        className: \"vertical-align-middle sticky-x-header-lg sticky\",\r\n                      })}>\r\n                        {\r\n                          column.render('Footer')\r\n                        }\r\n                      </th>\r\n                    );\r\n                  } else if(column.id===\"logK\"){\r\n                    return (\r\n                      <th {...column.getFooterProps({\r\n                        className: \"vertical-align-middle crossed-out sticky-column-lg sticky\",\r\n                      })}>\r\n                        {\r\n                          column.render('Footer')\r\n                        }\r\n                      </th>\r\n                    )\r\n                  } else {\r\n                    return (\r\n                      <td {...column.getFooterProps({\r\n                        className: \"vertical-align-middle sticky\",\r\n                      })}>\r\n                        {\r\n                          column.render('Footer')\r\n                        }\r\n                      </td>\r\n                    );\r\n                  }\r\n                  \r\n                })\r\n              }\r\n            </tr>\r\n          ))}\r\n        </tfoot>\r\n      </Table>\r\n    </Scrollbars>\r\n  )\r\n});\r\n\r\nexport default TableauTable;"],"sourceRoot":""}