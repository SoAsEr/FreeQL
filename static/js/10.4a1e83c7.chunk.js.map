{"version":3,"sources":["reusable_components/formatting/FormattedChemicalCompound.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapRegExp.js","utils/ref-utils.js","utils/ConstantValidationTextInput.js","reusable_components/DataRow.js","reusable_components/RadioRow.js","features/species/gases/GasList.js"],"names":["FormattedChemicalCompound","React","memo","props","regex","Array","from","children","matchAll","map","match","chargeValue","groups","ChargeValue1","ChargeValue2","reduce","prev","curr","chargeSign","ChargeSign1","ChargeSign2","terminator","EndMatcher1","EndMatcher2","EndMatcher3","EndMatcher4","key","substring","index","WordMatcher","SubMatcher","_typeof","obj","Symbol","iterator","constructor","prototype","_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","Class","_cache","Map","undefined","fn","Function","toString","call","indexOf","TypeError","has","get","set","Wrapper","construct","arguments","this","create","value","enumerable","writable","configurable","_inherits","subClass","superClass","_wrapRegExp","re","BabelRegExp","_RegExp","RegExp","_super","_groups","WeakMap","flags","_this","buildGroups","result","g","keys","name","exec","str","replace","substitution","_","args","push","apply","length","useCallbackRef","onUpdate","cleanupOld","onNull","ref","useRef","setRef","useCallback","node","current","mergeRefs","refs","filteredRefs","filter","Boolean","inst","ConstantValidationTextInput","child","Children","only","useState","setValue","selection","setSelection","validationMisfired","setValidationMisfire","selectRef","useEffect","selectionStart","selectionEnd","cloneElement","onSelect","e","target","onChange","validation","onBlur","defaultProps","DataRow","id","onCheck","onValueChange","checked","disabled","disableCheck","noRemove","onRemove","db","valid","setValid","className","xs","sm","width","height","viewBox","fill","xmlns","onClick","fillRule","d","input","is_number","Control","Check","style","type","RadioRow","options","chemicalName","isErroring","optionChecked","required","Row","Col","element","Form","inline","isInvalid","label","GasListItem","gas","speciesDB","useSelector","getSpeciesDB","componentDB","getComponentDB","waterValue","getWaterValue","gasReplacement","state","getGasReplacements","isErrored","getErroredGases","dispatch","useDispatch","gases","setGasPartialPressure","disableSpecies","species","option","setGasReplacement","component","components","delete","GasListHeader","ListHeader","AbbreviatingLabel","abbr","breakpoint","inputLabel","GasList","gasesPresent","getSpeciesPresent","size"],"mappings":"gIAEMA,EAA0BC,IAAMC,MAAK,SAACC,GAW1C,IAAMC,EAAK,YAAC,qdAAD,uKAEX,OACE,wBAASD,EACJE,MAAMC,KAAKH,EAAMI,SAASC,SAASJ,IAAQK,KAAI,SAACC,GAC/C,IAAMC,EAAY,CAACD,EAAME,OAAOC,aAAcH,EAAME,OAAOE,cAAcC,QAAO,SAACC,EAAMC,GAAP,OAAgBA,GAAcD,IAAM,IAC9GE,EAAW,CAACR,EAAME,OAAOO,YAAaT,EAAME,OAAOQ,aAAaL,QAAO,SAACC,EAAMC,GAAP,OAAgBA,GAAcD,IAAM,IAC3GK,EAAW,CAACX,EAAME,OAAOU,YAAaZ,EAAME,OAAOW,YAAab,EAAME,OAAOY,YAAad,EAAME,OAAOa,aAAaV,QAAO,SAACC,EAAMC,GAAP,OAAgBA,GAAcD,IAAM,IACrK,OACE,0BAAMU,IAAKvB,EAAMI,SAASoB,UAAU,EAAGjB,EAAMkB,QAC1ClB,EAAME,OAAOiB,YAAY,6BAAMnB,EAAME,OAAOkB,YAAiB,6BAAMnB,EAAaO,GAAkBG,UAQlGrB,O,iCC/BA,SAAS+B,EAAQC,GAa9B,OATED,EADoB,oBAAXE,QAAoD,kBAApBA,OAAOC,SACtC,SAAiBF,GACzB,cAAcA,GAGN,SAAiBA,GACzB,OAAOA,GAAyB,oBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,IAI9GA,GCbF,SAASK,EAAgBC,GAItC,OAHAD,EAAkBE,OAAOC,eAAiBD,OAAOE,eAAiB,SAAyBH,GACzF,OAAOA,EAAEI,WAAaH,OAAOE,eAAeH,KAEvBA,G,0DCAV,SAAS,EAAiBK,GACvC,IAAIC,EAAwB,oBAARC,IAAqB,IAAIA,SAAQC,EA8BrD,OA5BA,EAAmB,SAA0BH,GAC3C,GAAc,OAAVA,ICRkCI,EDQEJ,GCPsB,IAAzDK,SAASC,SAASC,KAAKH,GAAII,QAAQ,kBDOQ,OAAOR,ECR5C,IAA2BI,EDUtC,GAAqB,oBAAVJ,EACT,MAAM,IAAIS,UAAU,sDAGtB,GAAsB,qBAAXR,EAAwB,CACjC,GAAIA,EAAOS,IAAIV,GAAQ,OAAOC,EAAOU,IAAIX,GAEzCC,EAAOW,IAAIZ,EAAOa,GAGpB,SAASA,IACP,OAAO,OAAAC,EAAA,GAAUd,EAAOe,UAAW,EAAeC,MAAMxB,aAW1D,OARAqB,EAAQpB,UAAYG,OAAOqB,OAAOjB,EAAMP,UAAW,CACjDD,YAAa,CACX0B,MAAOL,EACPM,YAAY,EACZC,UAAU,EACVC,cAAc,KAGX,OAAAxB,EAAA,GAAegB,EAASb,KAGTA,GElCX,SAASsB,EAAUC,EAAUC,GAC1C,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIf,UAAU,sDAGtBc,EAAS9B,UAAYG,OAAOqB,OAAOO,GAAcA,EAAW/B,UAAW,CACrED,YAAa,CACX0B,MAAOK,EACPH,UAAU,EACVC,cAAc,KAGdG,GAAY,OAAA3B,EAAA,GAAe0B,EAAUC,GCR5B,SAASC,EAAYC,EAAIzD,GACtCwD,EAAc,SAAqBC,EAAIzD,GACrC,OAAO,IAAI0D,EAAYD,OAAIvB,EAAWlC,IAGxC,IAAI2D,EAAU,EAAgBC,QAE1BC,EAASD,OAAOpC,UAEhBsC,EAAU,IAAIC,QAElB,SAASL,EAAYD,EAAIO,EAAOhE,GAC9B,IAAIiE,EAAQN,EAAQrB,KAAKS,KAAMU,EAAIO,GAInC,OAFAF,EAAQnB,IAAIsB,EAAOjE,GAAU8D,EAAQpB,IAAIe,IAElCQ,EAqCT,SAASC,EAAYC,EAAQV,GAC3B,IAAIW,EAAIN,EAAQpB,IAAIe,GAEpB,OAAO9B,OAAO0C,KAAKD,GAAGjE,QAAO,SAAUH,EAAQsE,GAE7C,OADAtE,EAAOsE,GAAQH,EAAOC,EAAEE,IACjBtE,IACN2B,OAAOqB,OAAO,OAGnB,OA3CA,EAASU,EAAaC,GAEtBD,EAAYlC,UAAU+C,KAAO,SAAUC,GACrC,IAAIL,EAASN,EAAOU,KAAKjC,KAAKS,KAAMyB,GAGpC,OADIL,IAAQA,EAAOnE,OAASkE,EAAYC,EAAQpB,OACzCoB,GAGTT,EAAYlC,UAAUH,OAAOoD,SAAW,SAAUD,EAAKE,GACrD,GAA4B,kBAAjBA,EAA2B,CACpC,IAAI1E,EAAS8D,EAAQpB,IAAIK,MAEzB,OAAOc,EAAOxC,OAAOoD,SAASnC,KAAKS,KAAMyB,EAAKE,EAAaD,QAAQ,gBAAgB,SAAUE,EAAGL,GAC9F,MAAO,IAAMtE,EAAOsE,OAEjB,GAA4B,oBAAjBI,EAA6B,CAC7C,IAAIT,EAAQlB,KAEZ,OAAOc,EAAOxC,OAAOoD,SAASnC,KAAKS,KAAMyB,GAAK,WAC5C,IAAII,EAAO,GAOX,OANAA,EAAKC,KAAKC,MAAMF,EAAM9B,WAEiB,WAAnC3B,EAAQyD,EAAKA,EAAKG,OAAS,KAC7BH,EAAKC,KAAKX,EAAYU,EAAMX,IAGvBS,EAAaI,MAAM/B,KAAM6B,MAGlC,OAAOf,EAAOxC,OAAOoD,SAASnC,KAAKS,KAAMyB,EAAKE,IAa3ClB,EAAYsB,MAAM/B,KAAMD,a,uHCjE3BkC,EAAe,SAACC,EAAWC,GAAiC,IAArBC,EAAoB,uDAAb,aAC5CC,EAAMC,iBAAO,MACbC,EAASC,uBAAY,SAAAC,GACrBJ,EAAIK,SACNP,EAAWE,EAAIK,SAGbD,EACFP,EAASO,GAETL,IAGFC,EAAIK,QAAUD,IACb,CAACN,EAAYD,EAAUE,IAE1B,OAAOG,GAGHI,EAAY,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBAC7B,IAAMC,EAAeD,EAAKE,OAAOC,SACjC,OAAKF,EAAab,OACU,IAAxBa,EAAab,OAAqBa,EAAa,GAC5C,SAAAG,GAAS,IAAD,gBACKH,GADL,IACb,2BAAgC,CAAC,IAAtBR,EAAqB,QACX,oBAARA,EACTA,EAAIW,GACKX,IACTA,EAAIK,QAAUM,IALL,gCAFkB,O,qECpB7BC,EAA4B3G,IAAMC,MAAK,SAACC,GAC5C,IAAM0G,EAAM5G,IAAM6G,SAASC,KAAK5G,EAAMI,UADgB,EAE9ByG,mBAAS,IAFqB,mBAE/CnD,EAF+C,KAExCoD,EAFwC,OAGtBD,mBAAS,CAAC,EAAE,IAHU,mBAG/CE,EAH+C,KAGpCC,EAHoC,OAILH,oBAAS,GAJJ,mBAI/CI,EAJ+C,KAI3BC,EAJ2B,KAKhDC,EAAUrB,iBAAO,MA0BvB,OAPAsB,qBAAU,WACLH,IACDE,EAAUjB,QAAQmB,eAAeN,EAAU,GAC3CI,EAAUjB,QAAQoB,aAAaP,EAAU,GACzCG,GAAqB,MAEtB,CAACD,EAAoBF,IAEtB,oCACGjH,IAAMyH,aAAab,EAAO,CAAEhD,MAAOA,EAAO8D,SAdhC,SAACC,GACVR,GACFD,EAAa,CAACS,EAAEC,OAAOL,eAAgBI,EAAEC,OAAOJ,gBAYeK,SAvBpD,SAACF,GACXzH,EAAM4H,WAAWH,EAAEC,OAAOhE,QAC3B1D,EAAM2H,SAASF,GACfX,EAASW,EAAEC,OAAOhE,OAClBsD,EAAa,CAACS,EAAEC,OAAOL,eAAgBI,EAAEC,OAAOJ,gBAEhDJ,GAAqB,IAiB8DW,OA3B1E,SAACJ,GACZzH,EAAM6H,OAAOJ,EAAGX,IA0BqFjB,IAAKM,YAAUO,EAAMb,IAAKsB,SAInIV,EAA4BqB,aAAa,CACvCH,SAAU,aACVE,OAAQ,cAGKpB,O,wHChCTsB,EAAQjI,IAAMC,MAAK,YAA4F,IAA1FiI,EAAyF,EAAzFA,GAAIC,EAAqF,EAArFA,QAASC,EAA4E,EAA5EA,cAAeC,EAA6D,EAA7DA,QAASC,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,GAAQ,EAC1F3B,oBAAS,GADiF,mBAC3G4B,EAD2G,KACpGC,EADoG,KAElH,OACE,kBAAC,IAAD,CAAKC,WAAYP,EAAW,iBAAmB,KAAO,YACpD,kBAAC,IAAD,CAAKQ,GAAG,IAAIC,GAAG,IAAIF,UAAU,+CACzBL,GAAY,yBAAKQ,MAAM,QAAQC,OAAO,QAAQC,QAAQ,YAAYL,UAAU,gCAAgCM,KAAK,eAAeC,MAAM,6BAA6BC,QAASZ,GAC5K,0BAAMa,SAAS,UAAUC,EAAE,qMAE7B,kBAAC,IAAD,KAA4Bb,EAAGrF,IAAI6E,GAAIjD,OAEzC,kBAAC,IAAD,CAAK6D,GAAG,IAAIC,GAAG,IAAIF,UAAU,6BAC3B,kBAAC,IAAD,CACEf,WAAY,SAAC0B,GAAD,OAAWA,EAAM/I,MAAM,yBACnCoH,SAAU,SAACF,GACTiB,EAASa,IAAU9B,EAAEC,OAAOhE,QAC5BwE,EAAcT,EAAEC,OAAOhE,SAGzB,kBAAC,IAAK8F,QAAN,CAAcpB,SAAUA,EAAUO,UAAW,gBAAgBF,GAASL,EAAW,GAAK,kBAG1F,kBAAC,IAAD,CAAKQ,GAAG,IAAID,UAAU,uBACpB,kBAAC,IAAKc,MAAN,CAAYC,MAAO,CAAC,YAAe,UAAWC,KAAK,WAAWxB,QAASA,EAASC,SAAUC,GAAgBD,EAAUT,SAAU,SAACF,GAAD,OAAOQ,EAAQR,EAAEC,OAAOS,iBAM/IJ,O,uJCRA6B,EA3BA9J,IAAMC,MAAK,YAAiF,IAA/E8J,EAA8E,EAA9EA,QAASC,EAAqE,EAArEA,aAAcC,EAAuD,EAAvDA,WAAYvB,EAA2C,EAA3CA,GAAIwB,EAAuC,EAAvCA,cAAerC,EAAwB,EAAxBA,SAAUsC,EAAc,EAAdA,SAC1F,OACE,kBAACC,EAAA,EAAD,CAAKvB,UAAU,QACb,kBAACwB,EAAA,EAAD,CAAKvB,GAAG,IAAIC,GAAG,IAAIF,UAAU,8CAC1BmB,GACC,kBAACjK,EAAA,EAAD,KAA4BiK,IAGhC,kBAACK,EAAA,EAAD,CAAKxB,UAAU,iCAEXkB,EAAQvJ,KAAI,SAAA8J,GAAO,OACjB,kBAACC,EAAA,EAAKZ,MAAN,CACElI,IAAK6I,EACLzC,SAAU,kBAAMA,EAASyC,IACzBE,QAAM,EACNnC,QAAS6B,IAAgBI,EACzBG,UAAYN,IAAaD,GAAmBA,IAAgBI,GAAWL,EACvEJ,KAAK,QACLa,MAAO,kBAAC3K,EAAA,EAAD,KAA4B2I,EAAGrF,IAAIiH,GAASrF,gB,kBCZ3D0F,EAAY3K,IAAMC,MAAK,YAAY,IAAV2K,EAAS,EAATA,IACvBC,EAAUC,YAAYC,KACtBC,EAAYF,YAAYG,KACxBC,EAAWJ,YAAYK,KAEvBC,EAAeN,aAAY,SAAAO,GAAK,OAAIC,YAAmBD,GAAOhI,IAAIuH,MAClEW,EAAUT,aAAY,SAAAO,GAAK,OAAIG,YAAgBH,GAAOjI,IAAIwH,MAE1Da,EAASC,cAEf,OACE,oCACE,kBAACzD,EAAA,EAAD,CACEC,GAAI0C,EACJlC,GAAImC,EAAUc,MACdpD,cAAY,EACZF,SAAO,EACPD,cAAe,SAACxE,GACd6H,EAASG,YAAsB,CAAChB,MAAKhH,YAEvC6E,SAAU,WACRgD,EAASI,YAAe,CAACC,QAAS,CAAClB,GAAMf,KAAM,cAGnD,kBAAC,EAAD,CACEhC,SAAU,SAACkE,GACTN,EAASO,YAAkB,CAACpB,MAAKqB,UAAWF,MAE9C5B,UAAQ,EACRF,WAAYsB,EACZxB,QAAO,YAAMc,EAAUc,MAAMtI,IAAIuH,GAAKsB,WAAWC,OAAOjB,GAAYlG,QACpEkF,cAAekB,EACf1C,GAAIsC,EAAYkB,iBAOlBE,EAAcpM,IAAMC,MAAK,WAC7B,OACE,kBAACoM,EAAA,EAAD,CACE3B,MACE,kBAAC4B,EAAA,EAAD,CAAmBC,KAAK,OAAOC,WAAW,MAA1C,SAEFC,WAAY,wDAKZC,EAAU1M,IAAMC,MAAK,WACzB,IAAM0M,EAAa7B,aAAY,SAAAO,GAAK,OAAIuB,YAAkBvB,GAAOM,SACjE,OAAIgB,EAAaE,KAIf,oCACE,kBAACT,EAAD,MAEEO,EAAanM,KACX,SAAAoK,GAAG,OAAI,kBAACD,EAAD,CAAalJ,IAAKmJ,EAAKA,IAAKA,QAPlC,wCAcI8B","file":"static/js/10.4a1e83c7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FormattedChemicalCompound=React.memo((props) => {\r\n  /*\r\n  WordMatcher=(.*?[^0-9\\[\\(])\r\n  SubMatcher=([0-9])\r\n  EndMatcher=([$\\s])\r\n  SupMatcher=([+-])(?:(?:1|([2-9]))|{EndMatcher})\r\n  WholeExp={WordMatcher}(?:{EndMatcher}|{SubMatcher}{SupMatcher}?|{SupMatcher})\r\n  (WordMatcher[0])_(SubMatcher[0])^(SupMatcher[1]SupMatcher[0])EndMatcher[0]\r\n  That would only work with ruby where the capture groups are changed on every recursion\r\n  */\r\n  //https://regex101.com/r/POrbvL/4\r\n  const regex=/(?<WordMatcher>.*?[^0-9[(\\s])(?:(?<EndMatcher1>$|[:.\\s])|(?<Charge1>(?<ChargeSign1>[+-])(?:(?:1|(?<ChargeValue1>[2-9]))|(?<EndMatcher2>$|[:.\\s])))|(?<SubMatcher>[0-9]+)(?<Charge2>(?<ChargeSign2>[+-])(?:(?:1|(?<ChargeValue2>[2-9]))|(?<EndMatcher3>$|[:.\\s])))?)(?<EndMatcher4>$|[:.\\s])?/g;\r\n  //$<WordMatcher>_($<SubMatcher>)^($<ChargeValue1>$<ChargeValue2>$<ChargeSign1>$<ChargeSign2>)$<EndMatcher1>$<EndMatcher2>$<EndMatcher3>\r\n  return(\r\n    <div {...props}>\r\n        {Array.from(props.children.matchAll(regex)).map((match) => {\r\n          const chargeValue=[match.groups.ChargeValue1, match.groups.ChargeValue2].reduce((prev, curr) => curr ? curr : prev, \"\");\r\n          const chargeSign=[match.groups.ChargeSign1, match.groups.ChargeSign2].reduce((prev, curr) => curr ? curr : prev, \"\");\r\n          const terminator=[match.groups.EndMatcher1, match.groups.EndMatcher2, match.groups.EndMatcher3, match.groups.EndMatcher4].reduce((prev, curr) => curr ? curr : prev, \"\");\r\n          return (\r\n            <span key={props.children.substring(0, match.index)}>\r\n              {match.groups.WordMatcher}<sub>{match.groups.SubMatcher}</sub><sup>{chargeValue}{chargeSign}</sup>{terminator}\r\n            </span>\r\n          );\r\n        })\r\n        }\r\n    </div>\r\n  );\r\n});\r\nexport default FormattedChemicalCompound;","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nimport isNativeFunction from \"./isNativeFunction\";\nimport construct from \"./construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport wrapNativeSuper from \"./wrapNativeSuper\";\nimport getPrototypeOf from \"./getPrototypeOf\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nimport inherits from \"./inherits\";\nexport default function _wrapRegExp(re, groups) {\n  _wrapRegExp = function _wrapRegExp(re, groups) {\n    return new BabelRegExp(re, undefined, groups);\n  };\n\n  var _RegExp = wrapNativeSuper(RegExp);\n\n  var _super = RegExp.prototype;\n\n  var _groups = new WeakMap();\n\n  function BabelRegExp(re, flags, groups) {\n    var _this = _RegExp.call(this, re, flags);\n\n    _groups.set(_this, groups || _groups.get(re));\n\n    return _this;\n  }\n\n  inherits(BabelRegExp, _RegExp);\n\n  BabelRegExp.prototype.exec = function (str) {\n    var result = _super.exec.call(this, str);\n\n    if (result) result.groups = buildGroups(result, this);\n    return result;\n  };\n\n  BabelRegExp.prototype[Symbol.replace] = function (str, substitution) {\n    if (typeof substitution === \"string\") {\n      var groups = _groups.get(this);\n\n      return _super[Symbol.replace].call(this, str, substitution.replace(/\\$<([^>]+)>/g, function (_, name) {\n        return \"$\" + groups[name];\n      }));\n    } else if (typeof substitution === \"function\") {\n      var _this = this;\n\n      return _super[Symbol.replace].call(this, str, function () {\n        var args = [];\n        args.push.apply(args, arguments);\n\n        if (_typeof(args[args.length - 1]) !== \"object\") {\n          args.push(buildGroups(args, _this));\n        }\n\n        return substitution.apply(this, args);\n      });\n    } else {\n      return _super[Symbol.replace].call(this, str, substitution);\n    }\n  };\n\n  function buildGroups(result, re) {\n    var g = _groups.get(re);\n\n    return Object.keys(g).reduce(function (groups, name) {\n      groups[name] = result[g[name]];\n      return groups;\n    }, Object.create(null));\n  }\n\n  return _wrapRegExp.apply(this, arguments);\n}","import { useCallback, useRef } from \"react\";\r\n\r\nconst useCallbackRef=(onUpdate , cleanupOld, onNull=() => {}) => {\r\n  const ref = useRef(null)\r\n  const setRef = useCallback(node => {\r\n    if (ref.current) {\r\n      cleanupOld(ref.current);\r\n    } \r\n    \r\n    if (node) {\r\n      onUpdate(node)\r\n    } else {\r\n      onNull();\r\n    }\r\n    \r\n    ref.current = node\r\n  }, [cleanupOld, onUpdate, onNull])\r\n  \r\n  return setRef\r\n}\r\n\r\nconst mergeRefs = (...refs) => {\r\n  const filteredRefs = refs.filter(Boolean);\r\n  if (!filteredRefs.length) return null;\r\n  if (filteredRefs.length === 0) return filteredRefs[0];\r\n  return inst => {\r\n    for (const ref of filteredRefs) {\r\n      if (typeof ref === 'function') {\r\n        ref(inst);\r\n      } else if (ref) {\r\n        ref.current = inst;\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\nexport {useCallbackRef, mergeRefs};","import React, { useState, useRef, useEffect } from 'react';\r\nimport { mergeRefs } from './ref-utils';\r\n\r\nconst ConstantValidationTextInput=React.memo((props) => {\r\n  const child=React.Children.only(props.children);\r\n  const [value, setValue]=useState(\"\");\r\n  const [selection, setSelection]=useState([0,0]);\r\n  const [validationMisfired, setValidationMisfire]=useState(false);\r\n  const selectRef=useRef(null);\r\n  const onBlur=(e) => {\r\n    props.onBlur(e, setValue);\r\n  }\r\n\r\n  const onChange=(e) => {\r\n    if(props.validation(e.target.value)){\r\n      props.onChange(e);\r\n      setValue(e.target.value);\r\n      setSelection([e.target.selectionStart, e.target.selectionEnd]);\r\n    } else {\r\n      setValidationMisfire(true);\r\n    }\r\n  }\r\n  const onSelect=(e) => {\r\n    if(!validationMisfired){\r\n      setSelection([e.target.selectionStart, e.target.selectionEnd]);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if(validationMisfired) {\r\n      selectRef.current.selectionStart=selection[0];\r\n      selectRef.current.selectionEnd=selection[1];\r\n      setValidationMisfire(false);\r\n    }\r\n  }, [validationMisfired, selection]);\r\n  return(\r\n    <>\r\n      {React.cloneElement(child, { value: value, onSelect: onSelect, onChange: onChange, onBlur: onBlur, ref: mergeRefs(child.ref, selectRef)})}\r\n    </>\r\n  )\r\n});\r\nConstantValidationTextInput.defaultProps={\r\n  onChange: () => {},\r\n  onBlur: () => {},\r\n};\r\n\r\nexport default ConstantValidationTextInput;","\r\nimport React, { useState } from 'react';\r\n\r\nimport ConstantValidationTextInput from '../utils/ConstantValidationTextInput.js';\r\n\r\nimport FormattedChemicalCompound from './formatting/FormattedChemicalCompound.js';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport is_number from 'is-number';\r\n\r\n\r\nconst DataRow=React.memo(({id, onCheck, onValueChange, checked, disabled, disableCheck, noRemove, onRemove, db}) => {\r\n  const [valid, setValid]=useState(false);\r\n  return(\r\n    <Row className={(disabled ? \"disabled-look \" : \" \") + \"mb-3 p-0\"}>\r\n      <Col xs=\"3\" sm=\"5\" className=\"w-100 justify-content-end d-flex flex-wrap\">\r\n        {!noRemove && <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" className=\"bi bi-x lighten-hover mr-auto\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" onClick={onRemove}>\r\n          <path fillRule=\"evenodd\" d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\"/>\r\n        </svg>}\r\n        <FormattedChemicalCompound>{db.get(id).name}</FormattedChemicalCompound>\r\n      </Col>\r\n      <Col xs=\"7\" sm=\"5\" className=\"d-flex align-items-center\">\r\n        <ConstantValidationTextInput \r\n          validation={(input) => input.match(/^-?\\d*\\.?\\d*e?-?\\d*$/)}\r\n          onChange={(e) => {\r\n            setValid(is_number(e.target.value));\r\n            onValueChange(e.target.value);\r\n          }}\r\n        >\r\n          <Form.Control disabled={disabled} className={\"text-center \"+(valid || disabled ? \"\" : \"is-invalid\")}/>\r\n        </ConstantValidationTextInput>\r\n      </Col>\r\n      <Col xs=\"2\" className=\"d-flex center-items\">\r\n        <Form.Check style={{\"paddingLeft\": \"1.7rem\"}} type=\"checkbox\" checked={checked} disabled={disableCheck || disabled} onChange={(e) => onCheck(e.target.checked)}/>\r\n      </Col>\r\n    </Row>\r\n  );\r\n});\r\n\r\nexport default DataRow;","import React from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormattedChemicalCompound from \"./formatting/FormattedChemicalCompound\";\r\n\r\nconst RadioRow=React.memo(({options, chemicalName, isErroring, db, optionChecked, onChange, required}) => {\r\n  return (\r\n    <Row className=\"mb-2\">\r\n      <Col xs=\"3\" sm=\"5\" className=\"w-100 justify-content-end d-flex flex-wrap\">\r\n        {chemicalName && \r\n          <FormattedChemicalCompound>{chemicalName}</FormattedChemicalCompound>\r\n        }\r\n      </Col>\r\n      <Col className=\"d-flex justify-content-around\">\r\n        {\r\n          options.map(element => \r\n            <Form.Check\r\n              key={element}\r\n              onChange={() => onChange(element)}\r\n              inline\r\n              checked={optionChecked===element}\r\n              isInvalid={(required && !optionChecked) || (optionChecked===element && isErroring)}\r\n              type=\"radio\"\r\n              label={<FormattedChemicalCompound>{db.get(element).name}</FormattedChemicalCompound>}\r\n            />\r\n          )\r\n        }\r\n      </Col>\r\n    </Row>\r\n  )\r\n})\r\n\r\nexport default RadioRow;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getComponentDB, getWaterValue } from '../../components/componentsSelectors.js';\r\nimport { getErroredGases, getGasReplacements, setGasPartialPressure, setGasReplacement } from './gasInputSlice.js';\r\nimport { getSpeciesDB, getSpeciesPresent } from '../speciesSelectors.js';\r\nimport { disableSpecies } from \"../speciesSlice.js\"\r\nimport DataRow from '../../../reusable_components/DataRow.js';\r\nimport RadioRow from '../../../reusable_components/RadioRow.js';\r\nimport AbbreviatingLabel from '../../../reusable_components/AbbreviatingLabel.js';\r\nimport ListHeader from '../../../reusable_components/ListHeader.js';\r\n\r\n\r\nconst GasListItem=React.memo(({gas}) => {\r\n  const speciesDB=useSelector(getSpeciesDB);\r\n  const componentDB=useSelector(getComponentDB);\r\n  const waterValue=useSelector(getWaterValue);\r\n\r\n  const gasReplacement=useSelector(state => getGasReplacements(state).get(gas));\r\n  const isErrored=useSelector(state => getErroredGases(state).has(gas));\r\n\r\n  const dispatch=useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <DataRow \r\n        id={gas}\r\n        db={speciesDB.gases}\r\n        disableCheck\r\n        checked\r\n        onValueChange={(value) => {\r\n          dispatch(setGasPartialPressure({gas, value}));\r\n        }}\r\n        onRemove={() => {\r\n          dispatch(disableSpecies({species: [gas], type: \"gases\"}));\r\n        }}\r\n      />\r\n      <RadioRow \r\n        onChange={(option) => {\r\n          dispatch(setGasReplacement({gas, component: option}))\r\n        }}\r\n        required\r\n        isErroring={isErrored}\r\n        options={[...speciesDB.gases.get(gas).components.delete(waterValue).keys()]} \r\n        optionChecked={gasReplacement} \r\n        db={componentDB.components}\r\n      />\r\n    </>\r\n  )\r\n});\r\n\r\n\r\nconst GasListHeader=React.memo(() => {\r\n  return (\r\n    <ListHeader\r\n      label={\r\n        <AbbreviatingLabel abbr=\"Comp\" breakpoint=\"sm\">Gases</AbbreviatingLabel>\r\n      }\r\n      inputLabel={<label>Partial Pressure</label>}\r\n    />\r\n  )\r\n});\r\n\r\nconst GasList = React.memo(() => {\r\n  const gasesPresent=useSelector(state => getSpeciesPresent(state).gases);\r\n  if(!gasesPresent.size){\r\n    return <></>;\r\n  }\r\n  return (\r\n    <>\r\n      <GasListHeader />\r\n      {\r\n        gasesPresent.map(\r\n          gas => <GasListItem key={gas} gas={gas} />\r\n        )\r\n      }\r\n    </>\r\n  );\r\n});\r\n\r\nexport default GasList;"],"sourceRoot":""}